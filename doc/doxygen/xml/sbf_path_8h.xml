<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_path_8h" kind="file" language="C++">
    <compoundname>sbfPath.h</compoundname>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <includedby refid="sbf_log_file_private_8h" local="yes">common/sbfLogFilePrivate.h</includedby>
    <includedby refid="sbf_path_8c" local="yes">common/sbfPath.c</includedby>
    <includedby refid="sbf_properties_8h" local="yes">common/sbfProperties.h</includedby>
    <incdepgraph>
      <node id="1213">
        <label>event.h</label>
      </node>
      <node id="1212">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="1214">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="1215" relation="include">
        </childnode>
      </node>
      <node id="1218">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1215">
        <label>sys/types.h</label>
      </node>
      <node id="1210">
        <label>common/sbfPath.h</label>
        <link refid="sbf_path_8h"/>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1211">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1220" relation="include">
        </childnode>
      </node>
      <node id="1217">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="1216">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="1219">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1220">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1226">
        <label>common/sbfProperties.c</label>
        <link refid="sbf_properties_8c"/>
      </node>
      <node id="1225">
        <label>common/sbfProperties.h</label>
        <link refid="sbf_properties_8h"/>
        <childnode refid="1226" relation="include">
        </childnode>
        <childnode refid="1227" relation="include">
        </childnode>
        <childnode refid="1230" relation="include">
        </childnode>
      </node>
      <node id="1227">
        <label>core/sbfQueuePrivate.h</label>
        <link refid="sbf_queue_private_8h"/>
        <childnode refid="1228" relation="include">
        </childnode>
        <childnode refid="1229" relation="include">
        </childnode>
      </node>
      <node id="1238">
        <label>transport/sbfTportWeight.c</label>
        <link refid="sbf_tport_weight_8c"/>
      </node>
      <node id="1234">
        <label>transport/sbfSub.c</label>
        <link refid="sbf_sub_8c"/>
      </node>
      <node id="1235">
        <label>transport/sbfTopic.c</label>
        <link refid="sbf_topic_8c"/>
      </node>
      <node id="1231">
        <label>transport/sbfBatch.c</label>
        <link refid="sbf_batch_8c"/>
      </node>
      <node id="1228">
        <label>core/sbfHiResTimer.c</label>
        <link refid="sbf_hi_res_timer_8c"/>
      </node>
      <node id="1233">
        <label>transport/sbfPub.c</label>
        <link refid="sbf_pub_8c"/>
      </node>
      <node id="1224">
        <label>common/sbfPath.c</label>
        <link refid="sbf_path_8c"/>
      </node>
      <node id="1221">
        <label>common/sbfPath.h</label>
        <link refid="sbf_path_8h"/>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1225" relation="include">
        </childnode>
      </node>
      <node id="1232">
        <label>transport/sbfHandler.c</label>
        <link refid="sbf_handler_8c"/>
      </node>
      <node id="1222">
        <label>common/sbfLogFilePrivate.h</label>
        <link refid="sbf_log_file_private_8h"/>
        <childnode refid="1223" relation="include">
        </childnode>
      </node>
      <node id="1230">
        <label>transport/sbfTportPrivate.h</label>
        <link refid="sbf_tport_private_8h"/>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1232" relation="include">
        </childnode>
        <childnode refid="1233" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1235" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
        <childnode refid="1237" relation="include">
        </childnode>
        <childnode refid="1238" relation="include">
        </childnode>
      </node>
      <node id="1237">
        <label>transport/sbfTportFragments.c</label>
        <link refid="sbf_tport_fragments_8c"/>
      </node>
      <node id="1236">
        <label>transport/sbfTport.c</label>
        <link refid="sbf_tport_8c"/>
      </node>
      <node id="1229">
        <label>core/sbfQueue.c</label>
        <link refid="sbf_queue_8c"/>
      </node>
      <node id="1223">
        <label>common/sbfLogFile.c</label>
        <link refid="sbf_log_file_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_path_8h_1adcb42b8d5d87e5cab225cbaa98381805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref> const char *</type>
        <definition>SBF_BEGIN_DECLS const char* sbfPath_root</definition>
        <argsstring>(void)</argsstring>
        <name>sbfPath_root</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPath.h" line="8" column="1" bodyfile="common/sbfPath.c" bodystart="4" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="sbf_path_8h_1a831e4929e41427b228e1e8200c50f33d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* sbfPath_get</definition>
        <argsstring>(const char *fmt,...) SBF_PRINTFLIKE(1</argsstring>
        <name>sbfPath_get</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPath.h" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_path_8h_1ad3e328363a70f49c4c323d9babb9b056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char char *</type>
        <definition>char char* sbfPath_getV</definition>
        <argsstring>(const char *fmt, va_list ap)</argsstring>
        <name>sbfPath_getV</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPath.h" line="15" column="1" bodyfile="common/sbfPath.c" bodystart="31" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="sbf_path_8h_1a060d60caef2e753150905a60e65ea305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* sbfPath_getConf</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>sbfPath_getConf</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPath.h" line="21" column="1" bodyfile="common/sbfPath.c" bodystart="47" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_SBF_PATH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_PATH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sbf_path_8h_1adcb42b8d5d87e5cab225cbaa98381805" kindref="member">sbfPath_root</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Get<sp/>path<sp/>underneath<sp/>root<sp/>path,<sp/>result<sp/>must<sp/>be<sp/>freed<sp/>by<sp/>caller.<sp/>Paths</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>starting<sp/>with<sp/>/<sp/>are<sp/>copied<sp/>but<sp/>otherwise<sp/>unmodified.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sbf_path_8h_1a831e4929e41427b228e1e8200c50f33d" kindref="member">sbfPath_get</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)<sp/><ref refid="sbf_common_darwin_8h_1abcc9ea27d2fa4fc4b2b51bbdf96fb03d" kindref="member">SBF_PRINTFLIKE</ref><sp/>(1,<sp/>2);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sbf_path_8h_1ad3e328363a70f49c4c323d9babb9b056" kindref="member">sbfPath_getV</ref><sp/>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>ap);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Get<sp/>path<sp/>underneath<sp/>config<sp/>path,<sp/>result<sp/>must<sp/>be<sp/>freed<sp/>by<sp/>caller.<sp/>Paths</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>starting<sp/>with<sp/>/<sp/>are<sp/>copied<sp/>but<sp/>otherwise<sp/>unmodified.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sbf_path_8h_1a060d60caef2e753150905a60e65ea305" kindref="member">sbfPath_getConf</ref><sp/>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_PATH_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="common/sbfPath.h"/>
  </compounddef>
</doxygen>
