<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_request_sub_8c" kind="file" language="C++">
    <compoundname>sbfRequestSub.c</compoundname>
    <includes refid="sbf_request_reply_8h" local="yes">sbfRequestReply.h</includes>
    <includes refid="sbf_request_reply_private_8h" local="yes">sbfRequestReplyPrivate.h</includes>
    <includes refid="sbf_request_sub_private_8h" local="yes">sbfRequestSubPrivate.h</includes>
    <incdepgraph>
      <node id="523">
        <label>sbfGuid.h</label>
      </node>
      <node id="522">
        <label>sbfRequestReplyPrivate.h</label>
        <link refid="sbf_request_reply_private_8h"/>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>requestreply/sbfRequestSub.c</label>
        <link refid="sbf_request_sub_8c"/>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="512">
        <label>sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
      </node>
      <node id="524">
        <label>sbfRefCount.h</label>
      </node>
      <node id="525">
        <label>sbfRequestSubPrivate.h</label>
        <link refid="sbf_request_sub_private_8h"/>
      </node>
      <node id="517">
        <label>sbfEvent.h</label>
        <link refid="sbf_event_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="518">
        <label>sbfHiResTimer.h</label>
        <link refid="sbf_hi_res_timer_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="510">
        <label>sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>sbfTopic.h</label>
      </node>
      <node id="520">
        <label>sbfTimer.h</label>
        <link refid="sbf_timer_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="513">
        <label>sbfTport.h</label>
      </node>
      <node id="511">
        <label>sbfCommon.h</label>
      </node>
      <node id="516">
        <label>sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
      <node id="519">
        <label>sbfKeyValue.h</label>
      </node>
      <node id="514">
        <label>sbfQueue.h</label>
        <link refid="sbf_queue_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_request_sub_8c_1a831bec32603235eaf6228528bd797512" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfRequestSubPubReadyCb</definition>
        <argsstring>(sbfPub pub, void *closure)</argsstring>
        <name>sbfRequestSubPubReadyCb</name>
        <param>
          <type>sbfPub</type>
          <declname>pub</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="requestreply/sbfRequestSub.c" line="6" column="1" bodyfile="requestreply/sbfRequestSub.c" bodystart="6" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="sbf_request_sub_8c_1a931c304846c84fda4b9683e6ed849b3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfRequestSubSubReadyCb</definition>
        <argsstring>(sbfSub sub0, void *closure)</argsstring>
        <name>sbfRequestSubSubReadyCb</name>
        <param>
          <type>sbfSub</type>
          <declname>sub0</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="requestreply/sbfRequestSub.c" line="16" column="1" bodyfile="requestreply/sbfRequestSub.c" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="sbf_request_sub_8c_1a012074b3bb58d96507d5f5435ce24adc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfRequestSubSubMessageCb</definition>
        <argsstring>(sbfSub sub0, sbfBuffer buffer, void *closure)</argsstring>
        <name>sbfRequestSubSubMessageCb</name>
        <param>
          <type>sbfSub</type>
          <declname>sub0</declname>
        </param>
        <param>
          <type>sbfBuffer</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="requestreply/sbfRequestSub.c" line="26" column="1" bodyfile="requestreply/sbfRequestSub.c" bodystart="26" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="sbf_request_sub_8c_1ad3d0a9ad4edaf098f039f7a3a6b3b862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref></type>
        <definition>sbfRequestSub sbfRequestSub_create</definition>
        <argsstring>(sbfTport tport, sbfQueue queue, const char *topic, sbfRequestSubReadyCb readyCb, sbfRequestSubRequestCb requestCb, void *closure)</argsstring>
        <name>sbfRequestSub_create</name>
        <param>
          <type>sbfTport</type>
          <declname>tport</declname>
        </param>
        <param>
          <type><ref refid="sbf_queue_8h_1aa8b64a26e53f1e9c6eef9d3379d805e3" kindref="member">sbfQueue</ref></type>
          <declname>queue</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>topic</declname>
        </param>
        <param>
          <type><ref refid="sbf_request_sub_8h_1ae72f14267ed690077474259f953bad41" kindref="member">sbfRequestSubReadyCb</ref></type>
          <declname>readyCb</declname>
        </param>
        <param>
          <type><ref refid="sbf_request_sub_8h_1a0e6a16a7431befbcbd2eda1c7ac826ff" kindref="member">sbfRequestSubRequestCb</ref></type>
          <declname>requestCb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
<para>Creates a subscriber configured with the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tport</parametername>
</parameternamelist>
<parameterdescription>
<para>the port to initialise the communications. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>the queue to sublish the messages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>topic</parametername>
</parameternamelist>
<parameterdescription>
<para>the logical channel name for the messages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>readyCb</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback indicating that the channel is ready. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requestCb</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback indicating that the channel is ready. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>closure</parametername>
</parameternamelist>
<parameterdescription>
<para>the user data linked to the subscriber handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a subscriber configured with the given parameters. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="requestreply/sbfRequestSub.c" line="54" column="1" bodyfile="requestreply/sbfRequestSub.c" bodystart="54" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="sbf_request_sub_8c_1ab30d78106273929f9b4096bdfb876ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfRequestSub_destroy</definition>
        <argsstring>(sbfRequestSub sub)</argsstring>
        <name>sbfRequestSub_destroy</name>
        <param>
          <type><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref></type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Release all the resources allocated by the subscriber. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the subscriber handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="requestreply/sbfRequestSub.c" line="111" column="1" bodyfile="requestreply/sbfRequestSub.c" bodystart="111" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="sbf_request_sub_8c_1a76545074d59af600ec9f6dd312151dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sbfRequestSub_getTopic</definition>
        <argsstring>(sbfRequestSub sub)</argsstring>
        <name>sbfRequestSub_getTopic</name>
        <param>
          <type><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref></type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>returns the name of the topic associated with the given subscriber. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the subscriber handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null terminated string containing the name of the topic associated with the given subscriber. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="requestreply/sbfRequestSub.c" line="125" column="1" bodyfile="requestreply/sbfRequestSub.c" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="sbf_request_sub_8c_1a2062243d09a930f28564d0462b9a4241" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfRequestSub_reply</definition>
        <argsstring>(sbfRequestSub sub, sbfRequest req, void *data, size_t size)</argsstring>
        <name>sbfRequestSub_reply</name>
        <param>
          <type><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref></type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="sbf_request_reply_8h_1a73616a24e829d8ac5400e7f2986036ae" kindref="member">sbfRequest</ref></type>
          <declname>req</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="requestreply/sbfRequestSub.c" line="131" column="1" bodyfile="requestreply/sbfRequestSub.c" bodystart="131" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_request_reply_8h" kindref="compound">sbfRequestReply.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_request_reply_private_8h" kindref="compound">sbfRequestReplyPrivate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_request_sub_private_8h" kindref="compound">sbfRequestSubPrivate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">sbfRequestSubPubReadyCb<sp/>(sbfPub<sp/>pub,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref><sp/>sub<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mPubReady<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;mSubReady<sp/>&amp;&amp;<sp/>sub-&gt;mReadyCb<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;mReadyCb<sp/>(sub,<sp/>sub-&gt;mClosure);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">sbfRequestSubSubReadyCb<sp/>(sbfSub<sp/>sub0,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref><sp/>sub<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mSubReady<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;mPubReady<sp/>&amp;&amp;<sp/>sub-&gt;mReadyCb<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;mReadyCb<sp/>(sub,<sp/>sub-&gt;mClosure);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">sbfRequestSubSubMessageCb<sp/>(sbfSub<sp/>sub0,<sp/>sbfBuffer<sp/>buffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref><sp/><sp/><sp/><sp/><sp/>sub<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_reply_private_8h_1a287ef027733349451b0cb2ea13292e59" kindref="member">sbfRequestHeader</ref>*<sp/>hdr<sp/>=<sp/>sbfBuffer_getData<sp/>(buffer);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>sbfBuffer_getSize<sp/>(buffer);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfBuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_reply_8h_1a73616a24e829d8ac5400e7f2986036ae" kindref="member">sbfRequest</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*hdr)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>req<sp/>=<sp/>xcalloc<sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*req);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;mSub<sp/>=<sp/>sub;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfRefCount_init<sp/>(&amp;req-&gt;mRefCount,<sp/>1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfGuid_copy<sp/>(&amp;req-&gt;mGuid,<sp/>&amp;hdr-&gt;mGuid);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;mRequestCb<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>sbfBuffer_wrap<sp/>(hdr<sp/>+<sp/>1,<sp/>size<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*hdr,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;mRequestCb<sp/>(sub,<sp/>req,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/>sub-&gt;mClosure);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfBuffer_destroy<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_reply_8c_1acaa6ac8247a2a4a849015ea0b2517228" kindref="member">sbfRequest_destroy</ref><sp/>(req);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref></highlight></codeline>
<codeline lineno="54" refid="sbf_request_sub_8h_1ad3d0a9ad4edaf098f039f7a3a6b3b862" refkind="member"><highlight class="normal"><ref refid="sbf_request_sub_8c_1ad3d0a9ad4edaf098f039f7a3a6b3b862" kindref="member">sbfRequestSub_create</ref><sp/>(sbfTport<sp/>tport,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_queue_8h_1aa8b64a26e53f1e9c6eef9d3379d805e3" kindref="member">sbfQueue</ref><sp/>queue,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_request_sub_8h_1ae72f14267ed690077474259f953bad41" kindref="member">sbfRequestSubReadyCb</ref><sp/>readyCb,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_request_sub_8h_1a0e6a16a7431befbcbd2eda1c7ac826ff" kindref="member">sbfRequestSubRequestCb</ref><sp/>requestCb,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref><sp/>sub;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestTopic[SBF_TOPIC_SIZE_LIMIT];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replyTopic[SBF_TOPIC_SIZE_LIMIT];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>used<sp/>=<sp/>snprintf<sp/>(requestTopic,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>requestTopic,<sp/></highlight><highlight class="stringliteral">&quot;%s@request&quot;</highlight><highlight class="normal">,<sp/>topic);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(used<sp/>&lt;<sp/>0<sp/>||<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)used<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>requestTopic)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>used<sp/>=<sp/>snprintf<sp/>(replyTopic,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>replyTopic,<sp/></highlight><highlight class="stringliteral">&quot;%s@reply&quot;</highlight><highlight class="normal">,<sp/>topic);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(used<sp/>&lt;<sp/>0<sp/>||<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)used<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>replyTopic)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>sub<sp/>=<sp/>xcalloc<sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*sub);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mLog<sp/>=<sp/><ref refid="sbf_mw_8c_1aa7e45fc4943d4080534faf9d4b2f394f" kindref="member">sbfMw_getLog</ref><sp/>(sbfTport_getMw<sp/>(tport));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mTopic<sp/>=<sp/>xstrdup<sp/>(topic);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfLog_debug<sp/>(sub-&gt;mLog,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;creating<sp/>request<sp/>subscription<sp/>%p:<sp/>topic<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mReadyCb<sp/>=<sp/>readyCb;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mRequestCb<sp/>=<sp/>requestCb;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mClosure<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mPub<sp/>=<sp/>sbfPub_create<sp/>(tport,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replyTopic,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfRequestSubPubReadyCb,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;mPub<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;mSub<sp/>=<sp/>sbfSub_create<sp/>(tport,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestTopic,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfRequestSubSubReadyCb,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfRequestSubSubMessageCb,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;mSub<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">fail:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_sub_8c_1ab30d78106273929f9b4096bdfb876ec5" kindref="member">sbfRequestSub_destroy</ref><sp/>(sub);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="sbf_request_sub_8h_1ab30d78106273929f9b4096bdfb876ec5" refkind="member"><highlight class="normal"><ref refid="sbf_request_sub_8c_1ab30d78106273929f9b4096bdfb876ec5" kindref="member">sbfRequestSub_destroy</ref><sp/>(<ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref><sp/>sub)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfLog_debug<sp/>(sub-&gt;mLog,<sp/></highlight><highlight class="stringliteral">&quot;destroying<sp/>request<sp/>subscription<sp/>%p&quot;</highlight><highlight class="normal">,<sp/>sub);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;mPub<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfPub_destroy<sp/>(sub-&gt;mPub);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;mSub<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSub_destroy<sp/>(sub-&gt;mSub);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)sub-&gt;mTopic);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(sub);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="125" refid="sbf_request_sub_8h_1a76545074d59af600ec9f6dd312151dad" refkind="member"><highlight class="normal"><ref refid="sbf_request_sub_8c_1a76545074d59af600ec9f6dd312151dad" kindref="member">sbfRequestSub_getTopic</ref><sp/>(<ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref><sp/>sub)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub-&gt;mTopic;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="sbf_request_sub_8c_1a2062243d09a930f28564d0462b9a4241" refkind="member"><highlight class="normal"><ref refid="sbf_request_sub_8c_1a2062243d09a930f28564d0462b9a4241" kindref="member">sbfRequestSub_reply</ref><sp/>(<ref refid="sbf_request_sub_8h_1a6f43898e8b9affe12bb6c378cd5c08b3" kindref="member">sbfRequestSub</ref><sp/>sub,<sp/><ref refid="sbf_request_reply_8h_1a73616a24e829d8ac5400e7f2986036ae" kindref="member">sbfRequest</ref><sp/>req,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfBuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_request_reply_private_8h_1a287ef027733349451b0cb2ea13292e59" kindref="member">sbfRequestHeader</ref>*<sp/>hdr;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;mSub<sp/>!=<sp/>sub)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SBF_FATAL<sp/>(</highlight><highlight class="stringliteral">&quot;request<sp/>reply<sp/>on<sp/>wrong<sp/>subscription&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>sbfPub_getBuffer<sp/>(sub-&gt;mPub,<sp/>size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*hdr);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr<sp/>=<sp/>sbfBuffer_getData<sp/>(buffer);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfGuid_copy<sp/>(&amp;hdr-&gt;mGuid,<sp/>&amp;req-&gt;mGuid);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(hdr-&gt;mSpace,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>hdr-&gt;mSpace);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(hdr<sp/>+<sp/>1,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPub_sendBuffer<sp/>(sub-&gt;mPub,<sp/>buffer);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="requestreply/sbfRequestSub.c"/>
  </compounddef>
</doxygen>
