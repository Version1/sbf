<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_mw_8h" kind="file" language="C++">
    <compoundname>sbfMw.h</compoundname>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <includes refid="sbf_event_8h" local="yes">sbfEvent.h</includes>
    <includes refid="sbf_hi_res_timer_8h" local="yes">sbfHiResTimer.h</includes>
    <includes refid="sbf_key_value_8h" local="yes">sbfKeyValue.h</includes>
    <includes refid="sbf_queue_8h" local="yes">sbfQueue.h</includes>
    <includes refid="sbf_timer_8h" local="yes">sbfTimer.h</includes>
    <includedby refid="sbf_common_handler_8h" local="yes">handlers/common/sbfCommonHandler.h</includedby>
    <includedby refid="sbf_tcp_mesh_handler_8h" local="yes">handlers/tcpmesh/sbfTcpMeshHandler.h</includedby>
    <includedby refid="sbf_udp_handler_8h" local="yes">handlers/udp/sbfUdpHandler.h</includedby>
    <includedby refid="sbf_request_reply_8h" local="yes">requestreply/sbfRequestReply.h</includedby>
    <includedby refid="sbf_tport_8h" local="yes">transport/sbfTport.h</includedby>
    <incdepgraph>
      <node id="787">
        <label>event.h</label>
      </node>
      <node id="786">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="788">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="789" relation="include">
        </childnode>
      </node>
      <node id="795">
        <label>sbfEvent.h</label>
        <link refid="sbf_event_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="792">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="797">
        <label>sbfKeyValue.h</label>
        <link refid="sbf_key_value_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="796">
        <label>sbfHiResTimer.h</label>
        <link refid="sbf_hi_res_timer_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="789">
        <label>sys/types.h</label>
      </node>
      <node id="799">
        <label>sbfTimer.h</label>
        <link refid="sbf_timer_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="785">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="788" relation="include">
        </childnode>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
      </node>
      <node id="791">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="790">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="784">
        <label>core/sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="795" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
        <childnode refid="797" relation="include">
        </childnode>
        <childnode refid="798" relation="include">
        </childnode>
        <childnode refid="799" relation="include">
        </childnode>
      </node>
      <node id="793">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="798">
        <label>sbfQueue.h</label>
        <link refid="sbf_queue_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="794">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="801">
        <label>handlers/common/sbfCommonHandler.h</label>
        <link refid="sbf_common_handler_8h"/>
        <childnode refid="802" relation="include">
        </childnode>
      </node>
      <node id="807">
        <label>requestreply/sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="804" relation="include">
        </childnode>
      </node>
      <node id="802">
        <label>handlers/udp/sbfUdpHandler.h</label>
        <link refid="sbf_udp_handler_8h"/>
      </node>
      <node id="803">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.h</label>
        <link refid="sbf_tcp_mesh_handler_8h"/>
      </node>
      <node id="804">
        <label>requestreply/sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
      </node>
      <node id="808">
        <label>transport/sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="803" relation="include">
        </childnode>
        <childnode refid="802" relation="include">
        </childnode>
      </node>
      <node id="805">
        <label>transport/sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="801" relation="include">
        </childnode>
        <childnode refid="803" relation="include">
        </childnode>
        <childnode refid="802" relation="include">
        </childnode>
        <childnode refid="806" relation="include">
        </childnode>
        <childnode refid="807" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
      </node>
      <node id="800">
        <label>core/sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="801" relation="include">
        </childnode>
        <childnode refid="803" relation="include">
        </childnode>
        <childnode refid="802" relation="include">
        </childnode>
        <childnode refid="804" relation="include">
        </childnode>
        <childnode refid="805" relation="include">
        </childnode>
      </node>
      <node id="806">
        <label>requestreply/sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="804" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sbf_mw_8h_1aeeea08256821a686bc39abc372079d82" prot="public" static="no">
        <name>CAP_ALL_MASK</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Supported capabilities bitmap </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="22" column="9" bodyfile="core/sbfMw.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_mw_8h_1a0ac31433d3805f2469d6827a74034dbd" prot="public" static="no">
        <name>CAP_HI_RES_COUNTER</name>
        <initializer>1 &lt;&lt; 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="23" column="9" bodyfile="core/sbfMw.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_mw_8h_1a3a43b58a7ec394a4cba898f47c99d50f" prot="public" static="no">
        <name>SBF_MW_THREAD_LIMIT</name>
        <initializer>64</initializer>
        <briefdescription>
<para>Maximum number of threads. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="28" column="9" bodyfile="core/sbfMw.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_mw_8h_1a9bd654394f96810c80e05011e393a750" prot="public" static="no">
        <name>SBF_MW_ALL_THREADS</name>
        <initializer>(~0ULL)</initializer>
        <briefdescription>
<para>thread mask </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="30" column="9" bodyfile="core/sbfMw.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_mw_8h_1abf18b7c2721832ab6504c716791ce31c" prot="public" static="no">
        <name>sbfMw_getDefaultThread</name>
        <param><defname>mw</defname></param>
        <initializer><ref refid="sbf_mw_8h_1a0f0c2d3ddad45d49b67349f02a2ad772" kindref="member">sbfMw_getThread</ref> (mw, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the thread by default </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="67" column="9" bodyfile="core/sbfMw.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" prot="public" static="no">
        <type>typedefSBF_BEGIN_DECLS struct sbfMwImpl *</type>
        <definition>typedef typedefSBF_BEGIN_DECLS struct sbfMwImpl* sbfMw</definition>
        <argsstring></argsstring>
        <name>sbfMw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="18" column="1" bodyfile="core/sbfMw.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" prot="public" static="no">
        <type>struct sbfMwThreadImpl *</type>
        <definition>typedef struct sbfMwThreadImpl* sbfMwThread</definition>
        <argsstring></argsstring>
        <name>sbfMwThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="19" column="1" bodyfile="core/sbfMw.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_mw_8h_1a9f7c2a1535eb545d6e73bb8ebc33a209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref></type>
        <definition>sbfMw sbfMw_create</definition>
        <argsstring>(sbfLog log, sbfKeyValue properties)</argsstring>
        <name>sbfMw_create</name>
        <param>
          <type><ref refid="sbf_log_8h_1af52e123ee70a148a5492a53d34c16c37" kindref="member">sbfLog</ref></type>
          <declname>log</declname>
        </param>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>properties</declname>
        </param>
        <briefdescription>
<para>This function returns a middleware structure. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>log</parametername>
</parameternamelist>
<parameterdescription>
<para>log structure used for logging purposes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>key values defining the settings for the middleware. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to middleware structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1a4ac93cb7885ade2979c7663b557e119c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfMw_destroy</definition>
        <argsstring>(sbfMw mw)</argsstring>
        <name>sbfMw_destroy</name>
        <param>
          <type><ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref></type>
          <declname>mw</declname>
        </param>
        <briefdescription>
<para>Release the memory allocated by the middleware structure. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mw</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to middleware structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="sbf_mw_8h_1a9f7c2a1535eb545d6e73bb8ebc33a209" kindref="member">sbfMw_create</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1a286f53f7cda015578f2f78669fee0791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u_int</type>
        <definition>u_int sbfMw_getNumThreads</definition>
        <argsstring>(sbfMw mw)</argsstring>
        <name>sbfMw_getNumThreads</name>
        <param>
          <type><ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref></type>
          <declname>mw</declname>
        </param>
        <briefdescription>
<para>Returns the number of thread defined at the middleware. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mw</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to middleware structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of thread defined at the middleware. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1a0f0c2d3ddad45d49b67349f02a2ad772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref></type>
        <definition>sbfMwThread sbfMw_getThread</definition>
        <argsstring>(sbfMw mw, u_int index)</argsstring>
        <name>sbfMw_getThread</name>
        <param>
          <type><ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref></type>
          <declname>mw</declname>
        </param>
        <param>
          <type>u_int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the thread for the given index in the range [0, sbfMw_getNumThreads]. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mw</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to middleware structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the thread in the thread pool. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of thread defined at the middleware. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1aa7e45fc4943d4080534faf9d4b2f394f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_log_8h_1af52e123ee70a148a5492a53d34c16c37" kindref="member">sbfLog</ref></type>
        <definition>sbfLog sbfMw_getLog</definition>
        <argsstring>(sbfMw mw)</argsstring>
        <name>sbfMw_getLog</name>
        <param>
          <type><ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref></type>
          <declname>mw</declname>
        </param>
        <briefdescription>
<para>Returns the log associated to the middleware. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mw</parametername>
</parameternamelist>
<parameterdescription>
<para>the middleware. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the log associated to the middleware. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1a655078066f200c13dfa63a1bdd650f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
        <definition>sbfKeyValue sbfMw_getProperties</definition>
        <argsstring>(sbfMw mw)</argsstring>
        <name>sbfMw_getProperties</name>
        <param>
          <type><ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref></type>
          <declname>mw</declname>
        </param>
        <briefdescription>
<para>Returns the properties settings for the middleware. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mw</parametername>
</parameternamelist>
<parameterdescription>
<para>the middleware. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the properties settings for the middleware. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1aa183ff642fc7b83bf48a3d6757f79e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u_int</type>
        <definition>u_int sbfMw_getThreadIndex</definition>
        <argsstring>(sbfMwThread thread)</argsstring>
        <name>sbfMw_getThreadIndex</name>
        <param>
          <type><ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref></type>
          <declname>thread</declname>
        </param>
        <briefdescription>
<para>Returns the index of a thread handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread</parametername>
</parameternamelist>
<parameterdescription>
<para>the thread handler being querried. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of a thread handler. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1a68205584a281f9eba76af89248eb71f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t sbfMw_getThreadMask</definition>
        <argsstring>(sbfMwThread thread)</argsstring>
        <name>sbfMw_getThreadMask</name>
        <param>
          <type><ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref></type>
          <declname>thread</declname>
        </param>
        <briefdescription>
<para>Returns the mask for a given thread handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the mask for a given thread handler. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread</parametername>
</parameternamelist>
<parameterdescription>
<para>the thread handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1a49eee9c382b8543bbb6e5822b6c7d554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct event_base *</type>
        <definition>struct event_base* sbfMw_getThreadEventBase</definition>
        <argsstring>(sbfMwThread thread)</argsstring>
        <name>sbfMw_getThreadEventBase</name>
        <param>
          <type><ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref></type>
          <declname>thread</declname>
        </param>
        <briefdescription>
<para>Returns the event base for a given thread. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread</parametername>
</parameternamelist>
<parameterdescription>
<para>the thread handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the event base for a given thread. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_mw_8h_1a5a8e2c391543eff264a5cf1c0f34fa49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t sbfMw_checkSupported</definition>
        <argsstring>(uint32_t cap_mask)</argsstring>
        <name>sbfMw_checkSupported</name>
        <param>
          <type>uint32_t</type>
          <declname>cap_mask</declname>
        </param>
        <briefdescription>
<para>Returns a mask with the supported capabilities. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cap_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>the mask indicating the capabilities to be check. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>capabilities supported. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfMw.h" line="113" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file represents the middleware API. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>© Copyright 2016 Neueda all rights reserved. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>_SBF_MW_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_MW_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_event_8h" kindref="compound">sbfEvent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_hi_res_timer_8h" kindref="compound">sbfHiResTimer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_key_value_8h" kindref="compound">sbfKeyValue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_queue_8h" kindref="compound">sbfQueue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_timer_8h" kindref="compound">sbfTimer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sbfMwImpl*<sp/><ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref>;</highlight></codeline>
<codeline lineno="19" refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sbfMwThreadImpl*<sp/><ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="sbf_mw_8h_1aeeea08256821a686bc39abc372079d82" refkind="member"><highlight class="preprocessor">#define<sp/>CAP_ALL_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000001<sp/>//<sp/>All<sp/>available<sp/>capabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="sbf_mw_8h_1a0ac31433d3805f2469d6827a74034dbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAP_HI_RES_COUNTER<sp/><sp/><sp/><sp/>1<sp/>&lt;&lt;<sp/>0<sp/><sp/><sp/><sp/><sp/>//<sp/>Hi<sp/>resolution<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Extends<sp/>other<sp/>capabilities<sp/>here...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="sbf_mw_8h_1a3a43b58a7ec394a4cba898f47c99d50f" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_MW_THREAD_LIMIT<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="sbf_mw_8h_1a9bd654394f96810c80e05011e393a750" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_MW_ALL_THREADS<sp/>(~0ULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Middleware<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref><sp/><ref refid="sbf_mw_8h_1a9f7c2a1535eb545d6e73bb8ebc33a209" kindref="member">sbfMw_create</ref><sp/>(<ref refid="sbf_log_8h_1af52e123ee70a148a5492a53d34c16c37" kindref="member">sbfLog</ref><sp/>log,<sp/><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>properties);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_mw_8h_1a4ac93cb7885ade2979c7663b557e119c" kindref="member">sbfMw_destroy</ref><sp/>(<ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref><sp/>mw);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">u_int<sp/><ref refid="sbf_mw_8h_1a286f53f7cda015578f2f78669fee0791" kindref="member">sbfMw_getNumThreads</ref><sp/>(<ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref><sp/>mw);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref><sp/><ref refid="sbf_mw_8h_1a0f0c2d3ddad45d49b67349f02a2ad772" kindref="member">sbfMw_getThread</ref><sp/>(<ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref><sp/>mw,<sp/>u_int<sp/>index);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="sbf_mw_8h_1abf18b7c2721832ab6504c716791ce31c" refkind="member"><highlight class="preprocessor">#define<sp/>sbfMw_getDefaultThread(mw)<sp/>sbfMw_getThread<sp/>(mw,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="sbf_log_8h_1af52e123ee70a148a5492a53d34c16c37" kindref="member">sbfLog</ref><sp/><ref refid="sbf_mw_8h_1aa7e45fc4943d4080534faf9d4b2f394f" kindref="member">sbfMw_getLog</ref><sp/>(<ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref><sp/>mw);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/><ref refid="sbf_mw_8h_1a655078066f200c13dfa63a1bdd650f5e" kindref="member">sbfMw_getProperties</ref><sp/>(<ref refid="sbf_mw_8h_1a40f56d06e9998d8db409f556482fce21" kindref="member">sbfMw</ref><sp/>mw);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread<sp/>helper<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">u_int<sp/><ref refid="sbf_mw_8h_1aa183ff642fc7b83bf48a3d6757f79e06" kindref="member">sbfMw_getThreadIndex</ref><sp/>(<ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref><sp/>thread);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">uint64_t<sp/><ref refid="sbf_mw_8h_1a68205584a281f9eba76af89248eb71f9" kindref="member">sbfMw_getThreadMask</ref><sp/>(<ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref><sp/>thread);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">event_base*<sp/><ref refid="sbf_mw_8h_1a49eee9c382b8543bbb6e5822b6c7d554" kindref="member">sbfMw_getThreadEventBase</ref><sp/>(<ref refid="sbf_mw_8h_1aa3f5e9034630ab7894fc62735044c133" kindref="member">sbfMwThread</ref><sp/>thread);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">uint32_t<sp/><ref refid="sbf_mw_8h_1a5a8e2c391543eff264a5cf1c0f34fa49" kindref="member">sbfMw_checkSupported</ref>(uint32_t<sp/>cap_mask);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_MW_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="core/sbfMw.h"/>
  </compounddef>
</doxygen>
