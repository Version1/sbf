<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_perf_counter_8h" kind="file" language="C++">
    <compoundname>sbfPerfCounter.h</compoundname>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <includedby refid="sbf_perf_counter_8c" local="yes">common/sbfPerfCounter.c</includedby>
    <includedby refid="sbf_hi_res_timer_private_8h" local="yes">core/sbfHiResTimerPrivate.h</includedby>
    <includedby refid="sbf_publisher_8c" local="yes">tools/publisher/sbfPublisher.c</includedby>
    <includedby refid="sbf_subscriber_8c" local="yes">tools/subscriber/sbfSubscriber.c</includedby>
    <incdepgraph>
      <node id="1255">
        <label>event.h</label>
      </node>
      <node id="1254">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="1256">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="1257" relation="include">
        </childnode>
      </node>
      <node id="1260">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="1253" relation="include">
        </childnode>
      </node>
      <node id="1257">
        <label>sys/types.h</label>
      </node>
      <node id="1253">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="1254" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1256" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
      </node>
      <node id="1259">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="1258">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="1252">
        <label>common/sbfPerfCounter.h</label>
        <link refid="sbf_perf_counter_8h"/>
        <childnode refid="1253" relation="include">
        </childnode>
      </node>
      <node id="1261">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="1253" relation="include">
        </childnode>
      </node>
      <node id="1262">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="1253" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1265">
        <label>core/sbfHiResTimerPrivate.h</label>
        <link refid="sbf_hi_res_timer_private_8h"/>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
      </node>
      <node id="1267">
        <label>core/sbfQueuePrivate.h</label>
        <link refid="sbf_queue_private_8h"/>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
      </node>
      <node id="1269">
        <label>tools/publisher/sbfPublisher.c</label>
        <link refid="sbf_publisher_8c"/>
      </node>
      <node id="1266">
        <label>core/sbfHiResTimer.c</label>
        <link refid="sbf_hi_res_timer_8c"/>
      </node>
      <node id="1270">
        <label>tools/subscriber/sbfSubscriber.c</label>
        <link refid="sbf_subscriber_8c"/>
      </node>
      <node id="1264">
        <label>common/sbfPerfCounter.c</label>
        <link refid="sbf_perf_counter_8c"/>
      </node>
      <node id="1263">
        <label>common/sbfPerfCounter.h</label>
        <link refid="sbf_perf_counter_8h"/>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
      </node>
      <node id="1268">
        <label>core/sbfQueue.c</label>
        <link refid="sbf_queue_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_perf_counter_8h_1a227a3f61360c9301b49abd0cef2fb75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref> uint64_t</type>
        <definition>SBF_BEGIN_DECLS uint64_t sbfPerfCounter_frequency</definition>
        <argsstring>(void)</argsstring>
        <name>sbfPerfCounter_frequency</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPerfCounter.h" line="8" column="1" bodyfile="common/sbfPerfCounter.c" bodystart="32" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="sbf_perf_counter_8h_1a4d8c605c4a8cfe71e07299029389e292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t sbfPerfCounter_ticks</definition>
        <argsstring>(double microseconds)</argsstring>
        <name>sbfPerfCounter_ticks</name>
        <param>
          <type>double</type>
          <declname>microseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPerfCounter.h" line="10" column="1" bodyfile="common/sbfPerfCounter.c" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="sbf_perf_counter_8h_1aeffb9edc51128417ceef91ccd9af0aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double sbfPerfCounter_microseconds</definition>
        <argsstring>(uint64_t ticks)</argsstring>
        <name>sbfPerfCounter_microseconds</name>
        <param>
          <type>uint64_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPerfCounter.h" line="11" column="1" bodyfile="common/sbfPerfCounter.c" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="sbf_perf_counter_8h_1a29d8d51bca4c8d203e07a471bcb2b179" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> uint64_t</type>
        <definition>static SBF_INLINE uint64_t sbfPerfCounter_get</definition>
        <argsstring>(void)</argsstring>
        <name>sbfPerfCounter_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPerfCounter.h" line="24" column="1" bodyfile="common/sbfPerfCounter.h" bodystart="24" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_SBF_PERF_COUNTER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_PERF_COUNTER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">uint64_t<sp/><ref refid="sbf_perf_counter_8h_1a227a3f61360c9301b49abd0cef2fb75f" kindref="member">sbfPerfCounter_frequency</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>per<sp/>microsecond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">uint64_t<sp/><ref refid="sbf_perf_counter_8h_1a4d8c605c4a8cfe71e07299029389e292" kindref="member">sbfPerfCounter_ticks</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>microseconds);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sbf_perf_counter_8h_1aeffb9edc51128417ceef91ccd9af0aa8" kindref="member">sbfPerfCounter_microseconds</ref><sp/>(uint64_t<sp/>ticks);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/>uint64_t</highlight></codeline>
<codeline lineno="15"><highlight class="normal">sbfPerfCounter_get<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>LARGE_INTEGER<sp/>v;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>QueryPerformanceCounter<sp/>(&amp;v);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.QuadPart;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/>uint64_t</highlight></codeline>
<codeline lineno="24"><highlight class="normal">sbfPerfCounter_get<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>lo;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>hi;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight><highlight class="stringliteral">&quot;rdtsc&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal"><sp/>(lo),<sp/></highlight><highlight class="stringliteral">&quot;=d&quot;</highlight><highlight class="normal"><sp/>(hi));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint64_t)hi<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>lo;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_PERF_COUNTER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="common/sbfPerfCounter.h"/>
  </compounddef>
</doxygen>
