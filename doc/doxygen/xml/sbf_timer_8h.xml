<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_timer_8h" kind="file" language="C++">
    <compoundname>sbfTimer.h</compoundname>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <includedby refid="sbf_mw_8h" local="yes">core/sbfMw.h</includedby>
    <includedby refid="sbf_timer_8c" local="yes">core/sbfTimer.c</includedby>
    <incdepgraph>
      <node id="2580">
        <label>event.h</label>
      </node>
      <node id="2579">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="2581">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="2582" relation="include">
        </childnode>
      </node>
      <node id="2585">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="2578" relation="include">
        </childnode>
      </node>
      <node id="2582">
        <label>sys/types.h</label>
      </node>
      <node id="2577">
        <label>core/sbfTimer.h</label>
        <link refid="sbf_timer_8h"/>
        <childnode refid="2578" relation="include">
        </childnode>
      </node>
      <node id="2578">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="2579" relation="include">
        </childnode>
        <childnode refid="2580" relation="include">
        </childnode>
        <childnode refid="2581" relation="include">
        </childnode>
        <childnode refid="2583" relation="include">
        </childnode>
        <childnode refid="2584" relation="include">
        </childnode>
        <childnode refid="2585" relation="include">
        </childnode>
        <childnode refid="2586" relation="include">
        </childnode>
        <childnode refid="2587" relation="include">
        </childnode>
      </node>
      <node id="2584">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="2583">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="2586">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="2578" relation="include">
        </childnode>
      </node>
      <node id="2587">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="2578" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2596">
        <label>core/sbfHiResTimerPrivate.h</label>
        <link refid="sbf_hi_res_timer_private_8h"/>
        <childnode refid="2597" relation="include">
        </childnode>
        <childnode refid="2598" relation="include">
        </childnode>
      </node>
      <node id="2598">
        <label>core/sbfQueuePrivate.h</label>
        <link refid="sbf_queue_private_8h"/>
        <childnode refid="2597" relation="include">
        </childnode>
        <childnode refid="2599" relation="include">
        </childnode>
      </node>
      <node id="2604">
        <label>handlers/common/sbfCommonHandler.c</label>
        <link refid="sbf_common_handler_8c"/>
      </node>
      <node id="2603">
        <label>handlers/common/sbfCommonHandler.h</label>
        <link refid="sbf_common_handler_8h"/>
        <childnode refid="2604" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
      </node>
      <node id="2630">
        <label>transport/sbfTportWeight.c</label>
        <link refid="sbf_tport_weight_8c"/>
      </node>
      <node id="2613">
        <label>requestreply/sbfRequestSub.c</label>
        <link refid="sbf_request_sub_8c"/>
      </node>
      <node id="2619">
        <label>requestreply/sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="2610" relation="include">
        </childnode>
      </node>
      <node id="2614">
        <label>tools/replier/sbfReplier.c</label>
        <link refid="sbf_replier_8c"/>
      </node>
      <node id="2626">
        <label>transport/sbfSub.c</label>
        <link refid="sbf_sub_8c"/>
      </node>
      <node id="2627">
        <label>transport/sbfTopic.c</label>
        <link refid="sbf_topic_8c"/>
      </node>
      <node id="2607">
        <label>handlers/common/sbfCommonHandlerPrivate.h</label>
        <link refid="sbf_common_handler_private_8h"/>
        <childnode refid="2604" relation="include">
        </childnode>
      </node>
      <node id="2593">
        <label>common/sbfTcpListenerPrivate.h</label>
        <link refid="sbf_tcp_listener_private_8h"/>
        <childnode refid="2592" relation="include">
        </childnode>
      </node>
      <node id="2606">
        <label>handlers/udp/sbfUdpHandler.c</label>
        <link refid="sbf_udp_handler_8c"/>
      </node>
      <node id="2605">
        <label>handlers/udp/sbfUdpHandler.h</label>
        <link refid="sbf_udp_handler_8h"/>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2594">
        <label>core/sbfEventPrivate.h</label>
        <link refid="sbf_event_private_8h"/>
        <childnode refid="2595" relation="include">
        </childnode>
      </node>
      <node id="2616">
        <label>tools/publisher/sbfPublisher.c</label>
        <link refid="sbf_publisher_8c"/>
      </node>
      <node id="2595">
        <label>core/sbfEvent.c</label>
        <link refid="sbf_event_8c"/>
      </node>
      <node id="2621">
        <label>transport/sbfBatch.c</label>
        <link refid="sbf_batch_8c"/>
      </node>
      <node id="2615">
        <label>tools/requester/sbfRequester.c</label>
        <link refid="sbf_requester_8c"/>
      </node>
      <node id="2597">
        <label>core/sbfHiResTimer.c</label>
        <link refid="sbf_hi_res_timer_8c"/>
      </node>
      <node id="2590">
        <label>common/sbfTcpConnectionPrivate.h</label>
        <link refid="sbf_tcp_connection_private_8h"/>
        <childnode refid="2591" relation="include">
        </childnode>
        <childnode refid="2592" relation="include">
        </childnode>
      </node>
      <node id="2617">
        <label>tools/subscriber/sbfSubscriber.c</label>
        <link refid="sbf_subscriber_8c"/>
      </node>
      <node id="2609">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.c</label>
        <link refid="sbf_tcp_mesh_handler_8c"/>
      </node>
      <node id="2608">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.h</label>
        <link refid="sbf_tcp_mesh_handler_8h"/>
        <childnode refid="2609" relation="include">
        </childnode>
      </node>
      <node id="2625">
        <label>transport/sbfPub.c</label>
        <link refid="sbf_pub_8c"/>
      </node>
      <node id="2591">
        <label>common/sbfTcpConnection.c</label>
        <link refid="sbf_tcp_connection_8c"/>
      </node>
      <node id="2601">
        <label>core/sbfTimerPrivate.h</label>
        <link refid="sbf_timer_private_8h"/>
        <childnode refid="2602" relation="include">
        </childnode>
      </node>
      <node id="2612">
        <label>requestreply/sbfRequestReply.c</label>
        <link refid="sbf_request_reply_8c"/>
      </node>
      <node id="2610">
        <label>requestreply/sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
        <childnode refid="2611" relation="include">
        </childnode>
        <childnode refid="2612" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2615" relation="include">
        </childnode>
      </node>
      <node id="2624">
        <label>transport/sbfHandler.c</label>
        <link refid="sbf_handler_8c"/>
      </node>
      <node id="2622">
        <label>transport/sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="2607" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
        <childnode refid="2623" relation="include">
        </childnode>
      </node>
      <node id="2602">
        <label>core/sbfTimer.c</label>
        <link refid="sbf_timer_8c"/>
      </node>
      <node id="2588">
        <label>core/sbfTimer.h</label>
        <link refid="sbf_timer_8h"/>
        <childnode refid="2589" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
      </node>
      <node id="2623">
        <label>transport/sbfTportPrivate.h</label>
        <link refid="sbf_tport_private_8h"/>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2625" relation="include">
        </childnode>
        <childnode refid="2626" relation="include">
        </childnode>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2628" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
        <childnode refid="2630" relation="include">
        </childnode>
      </node>
      <node id="2629">
        <label>transport/sbfTportFragments.c</label>
        <link refid="sbf_tport_fragments_8c"/>
      </node>
      <node id="2628">
        <label>transport/sbfTport.c</label>
        <link refid="sbf_tport_8c"/>
      </node>
      <node id="2618">
        <label>transport/sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2607" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
        <childnode refid="2619" relation="include">
        </childnode>
        <childnode refid="2620" relation="include">
        </childnode>
        <childnode refid="2616" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2615" relation="include">
        </childnode>
        <childnode refid="2617" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2622" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2625" relation="include">
        </childnode>
        <childnode refid="2626" relation="include">
        </childnode>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2628" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
        <childnode refid="2630" relation="include">
        </childnode>
      </node>
      <node id="2600">
        <label>core/sbfMw.c</label>
        <link refid="sbf_mw_8c"/>
      </node>
      <node id="2589">
        <label>core/sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="2590" relation="include">
        </childnode>
        <childnode refid="2593" relation="include">
        </childnode>
        <childnode refid="2594" relation="include">
        </childnode>
        <childnode refid="2596" relation="include">
        </childnode>
        <childnode refid="2598" relation="include">
        </childnode>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2601" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2607" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2616" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2615" relation="include">
        </childnode>
        <childnode refid="2617" relation="include">
        </childnode>
        <childnode refid="2618" relation="include">
        </childnode>
      </node>
      <node id="2592">
        <label>common/sbfTcpListener.c</label>
        <link refid="sbf_tcp_listener_8c"/>
      </node>
      <node id="2599">
        <label>core/sbfQueue.c</label>
        <link refid="sbf_queue_8c"/>
      </node>
      <node id="2611">
        <label>requestreply/sbfRequestPub.c</label>
        <link refid="sbf_request_pub_8c"/>
      </node>
      <node id="2620">
        <label>requestreply/sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="2610" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sbf_timer_8h_1a5fe71016a949366101c0a61e5f62c3fd" prot="public" static="no">
        <name>SBF_TIMER_MILLISECONDS</name>
        <param><defname>n</defname></param>
        <initializer>((n)/1000.0)</initializer>
        <briefdescription>
<para>The milliseconds for the given seconds. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfTimer.h" line="28" column="9" bodyfile="core/sbfTimer.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_timer_8h_1a44bb79a590d1ed47a18ef8b540ce3650" prot="public" static="no">
        <name>SBF_TIMER_MICROSECONDS</name>
        <param><defname>n</defname></param>
        <initializer>((n)/1000000.0)</initializer>
        <briefdescription>
<para>The micro seconds for the given seconds. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfTimer.h" line="31" column="9" bodyfile="core/sbfTimer.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sbf_timer_8h_1a107fc98170a20456ae5fbea0e5862ec2" prot="public" static="no">
        <type>struct <ref refid="structsbf_timer_impl" kindref="compound">sbfTimerImpl</ref> *</type>
        <definition>typedef struct sbfTimerImpl* sbfTimer</definition>
        <argsstring></argsstring>
        <name>sbfTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfTimer.h" line="18" column="1" bodyfile="core/sbfTimer.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="sbf_timer_8h_1ad4886ffe6e46a398e2c741ebd64fe552" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sbfTimerCb) (sbfTimer timer, void *closure)</definition>
        <argsstring>)(sbfTimer timer, void *closure)</argsstring>
        <name>sbfTimerCb</name>
        <briefdescription>
<para>callback invoked when item needs to be processed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>the timer handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>closure</parametername>
</parameternamelist>
<parameterdescription>
<para>the user data associated to the queue item. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfTimer.h" line="25" column="1" bodyfile="core/sbfTimer.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_timer_8h_1a8812947aab58049baba5c8fa4c1b966b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_timer_8h_1a107fc98170a20456ae5fbea0e5862ec2" kindref="member">sbfTimer</ref></type>
        <definition>sbfTimer sbfTimer_create</definition>
        <argsstring>(struct sbfMwThreadImpl *thread, struct sbfQueueImpl *queue, sbfTimerCb cb, void *closure, double interval)</argsstring>
        <name>sbfTimer_create</name>
        <param>
          <type>struct <ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref> *</type>
          <declname>thread</declname>
        </param>
        <param>
          <type>struct <ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="sbf_timer_8h_1ad4886ffe6e46a398e2c741ebd64fe552" kindref="member">sbfTimerCb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <param>
          <type>double</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
<para>Create a timer with the given arguments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread</parametername>
</parameternamelist>
<parameterdescription>
<para>the thread handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>a queue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>High resolution timer callback. It will be invoked when the timer expires. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>closure</parametername>
</parameternamelist>
<parameterdescription>
<para>user data associated to this high resolution timer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interval</parametername>
</parameternamelist>
<parameterdescription>
<para>the interval, in seconds, the timer is configured to fire the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a timer handler. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfTimer.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_timer_8h_1af5cdfdf64302d94b1197ca7ea5fece24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfTimer_destroy</definition>
        <argsstring>(sbfTimer timer)</argsstring>
        <name>sbfTimer_destroy</name>
        <param>
          <type><ref refid="sbf_timer_8h_1a107fc98170a20456ae5fbea0e5862ec2" kindref="member">sbfTimer</ref></type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Release the memory allocated by the high resolution timer. This also stops the timer so no callback will be raised. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>the timer handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfTimer.h" line="55" column="1" bodyfile="core/sbfTimer.c" bodystart="72" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="sbf_timer_8h_1a61b6a284186fcc95558f0f716b6e0f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double sbfTimer_getInterval</definition>
        <argsstring>(sbfTimer timer)</argsstring>
        <name>sbfTimer_getInterval</name>
        <param>
          <type><ref refid="sbf_timer_8h_1a107fc98170a20456ae5fbea0e5862ec2" kindref="member">sbfTimer</ref></type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>returns the interval the timer was configured. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>the timer handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the interval, in seconds, the timer is configured to fire the callback. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfTimer.h" line="63" column="1" bodyfile="core/sbfTimer.c" bodystart="84" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file declares the interface for handling queues. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>© Copyright 2016 Neueda all rights reserved. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#ifndef<sp/>_SBF_TIMER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_TIMER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="sbf_timer_8h_1a107fc98170a20456ae5fbea0e5862ec2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_timer_impl" kindref="compound">sbfTimerImpl</ref>*<sp/><ref refid="sbf_timer_8h_1a107fc98170a20456ae5fbea0e5862ec2" kindref="member">sbfTimer</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="sbf_timer_8h_1ad4886ffe6e46a398e2c741ebd64fe552" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="sbf_timer_8h_1ad4886ffe6e46a398e2c741ebd64fe552" kindref="member">sbfTimerCb</ref>)<sp/>(sbfTimer<sp/>timer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="sbf_timer_8h_1a5fe71016a949366101c0a61e5f62c3fd" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_TIMER_MILLISECONDS(n)<sp/>((n)/1000.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="sbf_timer_8h_1a44bb79a590d1ed47a18ef8b540ce3650" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_TIMER_MICROSECONDS(n)<sp/>((n)/1000000.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">sbfTimer<sp/><ref refid="sbf_timer_8h_1a8812947aab58049baba5c8fa4c1b966b" kindref="member">sbfTimer_create</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref>*<sp/>thread,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref>*<sp/>queue,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_timer_8h_1ad4886ffe6e46a398e2c741ebd64fe552" kindref="member">sbfTimerCb</ref><sp/>cb,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>interval);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_timer_8h_1af5cdfdf64302d94b1197ca7ea5fece24" kindref="member">sbfTimer_destroy</ref><sp/>(sbfTimer<sp/>timer);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sbf_timer_8h_1a61b6a284186fcc95558f0f716b6e0f49" kindref="member">sbfTimer_getInterval</ref><sp/>(sbfTimer<sp/>timer);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_TIMER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="core/sbfTimer.h"/>
  </compounddef>
</doxygen>
