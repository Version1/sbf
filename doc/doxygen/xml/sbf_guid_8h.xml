<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_guid_8h" kind="file" language="C++">
    <compoundname>sbfGuid.h</compoundname>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <includedby refid="sbf_guid_8c" local="yes">common/sbfGuid.c</includedby>
    <includedby refid="sbf_request_reply_private_8h" local="yes">requestreply/sbfRequestReplyPrivate.h</includedby>
    <incdepgraph>
      <node id="715">
        <label>event.h</label>
      </node>
      <node id="714">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="716">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="717" relation="include">
        </childnode>
      </node>
      <node id="720">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="713" relation="include">
        </childnode>
      </node>
      <node id="717">
        <label>sys/types.h</label>
      </node>
      <node id="713">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="722" relation="include">
        </childnode>
      </node>
      <node id="719">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="712">
        <label>common/sbfGuid.h</label>
        <link refid="sbf_guid_8h"/>
        <childnode refid="713" relation="include">
        </childnode>
      </node>
      <node id="718">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="721">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="713" relation="include">
        </childnode>
      </node>
      <node id="722">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="713" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="725">
        <label>requestreply/sbfRequestReplyPrivate.h</label>
        <link refid="sbf_request_reply_private_8h"/>
        <childnode refid="726" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
        <childnode refid="728" relation="include">
        </childnode>
      </node>
      <node id="728">
        <label>requestreply/sbfRequestSub.c</label>
        <link refid="sbf_request_sub_8c"/>
      </node>
      <node id="727">
        <label>requestreply/sbfRequestReply.c</label>
        <link refid="sbf_request_reply_8c"/>
      </node>
      <node id="724">
        <label>common/sbfGuid.c</label>
        <link refid="sbf_guid_8c"/>
      </node>
      <node id="723">
        <label>common/sbfGuid.h</label>
        <link refid="sbf_guid_8h"/>
        <childnode refid="724" relation="include">
        </childnode>
        <childnode refid="725" relation="include">
        </childnode>
      </node>
      <node id="726">
        <label>requestreply/sbfRequestPub.c</label>
        <link refid="sbf_request_pub_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sbf_guid_8h_1ac24ffe50abc3d1a1bb31ca706d75691c" prot="public" static="no">
        <name>SBF_GUID_STRING_SIZE</name>
        <initializer>68</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="14" column="9" bodyfile="common/sbfGuid.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" prot="public" static="no">
        <type>struct sbfGuidImpl</type>
        <definition>typedef struct sbfGuidImpl sbfGuid</definition>
        <argsstring></argsstring>
        <name>sbfGuid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="8" column="1" bodyfile="common/sbfGuid.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_guid_8h_1a61e7b74202e5bb18e5e073426f8c2290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></type>
        <definition>SBF_BEGIN_DECLS SBF_PACKED</definition>
        <argsstring>(struct sbfGuidImpl { uint64_t mParts[4];})</argsstring>
        <name>SBF_PACKED</name>
        <param>
          <type>struct sbfGuidImpl { uint64_t mParts[4];}</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a496cdec479c65623e1b38226db8dd018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfGuid_new</definition>
        <argsstring>(sbfLog log, sbfGuid *g)</argsstring>
        <name>sbfGuid_new</name>
        <param>
          <type><ref refid="sbf_log_8h_1af52e123ee70a148a5492a53d34c16c37" kindref="member">sbfLog</ref></type>
          <declname>log</declname>
        </param>
        <param>
          <type><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="16" column="1" bodyfile="common/sbfGuid.c" bodystart="7" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a17f5f6228c0b6a7d4334a650f9e19150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sbfGuid_compare</definition>
        <argsstring>(const sbfGuid *g1, const sbfGuid *g2)</argsstring>
        <name>sbfGuid_compare</name>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g1</declname>
        </param>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="17" column="1" bodyfile="common/sbfGuid.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1af4671e2d60327e9a1b5f01a3b5e766fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sbfGuid_compareFixed</definition>
        <argsstring>(const sbfGuid *g1, const sbfGuid *g2)</argsstring>
        <name>sbfGuid_compareFixed</name>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g1</declname>
        </param>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="18" column="1" bodyfile="common/sbfGuid.c" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a7867ed4656ece458087f09fc58c91445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfGuid_copy</definition>
        <argsstring>(sbfGuid *to, const sbfGuid *from)</argsstring>
        <name>sbfGuid_copy</name>
        <param>
          <type><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="19" column="1" bodyfile="common/sbfGuid.c" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a62b8e1e15ce72e483c983f207b6b6071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t sbfGuid_get</definition>
        <argsstring>(sbfGuid *g)</argsstring>
        <name>sbfGuid_get</name>
        <param>
          <type><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="21" column="1" bodyfile="common/sbfGuid.c" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a8e383f9ed18fc2c1ea88478cbc06473d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfGuid_set</definition>
        <argsstring>(sbfGuid *g, uint64_t to)</argsstring>
        <name>sbfGuid_set</name>
        <param>
          <type><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="22" column="1" bodyfile="common/sbfGuid.c" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1ad443d462762bf972aaf6947a45da225e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t sbfGuid_increment</definition>
        <argsstring>(sbfGuid *g, uint64_t by)</argsstring>
        <name>sbfGuid_increment</name>
        <param>
          <type><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="23" column="1" bodyfile="common/sbfGuid.c" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a57d3e99400cfbcc3cb2c5a400acb6d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sbfGuid_fromString</definition>
        <argsstring>(sbfGuid *g, const char *s)</argsstring>
        <name>sbfGuid_fromString</name>
        <param>
          <type><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="25" column="1" bodyfile="common/sbfGuid.c" bodystart="64" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a917e40347da313e2e3679524e20d38bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sbfGuid_toString</definition>
        <argsstring>(const sbfGuid *g)</argsstring>
        <name>sbfGuid_toString</name>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="26" column="1" bodyfile="common/sbfGuid.c" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a234988149532885cac7fbfe9cd2b9279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* sbfGuid_toStringBuffer</definition>
        <argsstring>(const sbfGuid *g, char *buf, size_t len)</argsstring>
        <name>sbfGuid_toStringBuffer</name>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="27" column="1" bodyfile="common/sbfGuid.c" bodystart="85" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1ae39fc7bae3cc1bda929b7d7bb8d2d8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sbfGuid_toStringFixed</definition>
        <argsstring>(const sbfGuid *g)</argsstring>
        <name>sbfGuid_toStringFixed</name>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="28" column="1" bodyfile="common/sbfGuid.c" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="sbf_guid_8h_1a7e224270a3c2d6f5a59d994ade421a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* sbfGuid_toStringFixedBuffer</definition>
        <argsstring>(const sbfGuid *g, char *buf, size_t len)</argsstring>
        <name>sbfGuid_toStringFixedBuffer</name>
        <param>
          <type>const <ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfGuid.h" line="29" column="1" bodyfile="common/sbfGuid.c" bodystart="106" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_SBF_GUID_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_GUID_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="sbf_guid_8h_1a61e7b74202e5bb18e5e073426f8c2290" kindref="member">SBF_PACKED</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sbfGuidImpl</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>mParts[4];</highlight></codeline>
<codeline lineno="11"><highlight class="normal">});</highlight></codeline>
<codeline lineno="12" refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sbfGuidImpl<sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="sbf_guid_8h_1ac24ffe50abc3d1a1bb31ca706d75691c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBF_GUID_STRING_SIZE<sp/>68</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a496cdec479c65623e1b38226db8dd018" kindref="member">sbfGuid_new</ref><sp/>(<ref refid="structsbf_log_impl" kindref="compound">sbfLog</ref><sp/>log,<sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a17f5f6228c0b6a7d4334a650f9e19150" kindref="member">sbfGuid_compare</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g2);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1af4671e2d60327e9a1b5f01a3b5e766fe" kindref="member">sbfGuid_compareFixed</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g2);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a7867ed4656ece458087f09fc58c91445" kindref="member">sbfGuid_copy</ref><sp/>(<ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>from);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">uint64_t<sp/><ref refid="sbf_guid_8h_1a62b8e1e15ce72e483c983f207b6b6071" kindref="member">sbfGuid_get</ref><sp/>(<ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a8e383f9ed18fc2c1ea88478cbc06473d" kindref="member">sbfGuid_set</ref><sp/>(<ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g,<sp/>uint64_t<sp/>to);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">uint64_t<sp/><ref refid="sbf_guid_8h_1ad443d462762bf972aaf6947a45da225e" kindref="member">sbfGuid_increment</ref><sp/>(<ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g,<sp/>uint64_t<sp/>by);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a57d3e99400cfbcc3cb2c5a400acb6d6b" kindref="member">sbfGuid_fromString</ref><sp/>(<ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sbf_guid_8h_1a917e40347da313e2e3679524e20d38bb" kindref="member">sbfGuid_toString</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sbf_guid_8h_1a234988149532885cac7fbfe9cd2b9279" kindref="member">sbfGuid_toStringBuffer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sbf_guid_8h_1ae39fc7bae3cc1bda929b7d7bb8d2d8be" kindref="member">sbfGuid_toStringFixed</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sbf_guid_8h_1a7e224270a3c2d6f5a59d994ade421a6d" kindref="member">sbfGuid_toStringFixedBuffer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="sbf_guid_8h_1a36001b189a6dd7b95858bd266dbe4404" kindref="member">sbfGuid</ref>*<sp/>g,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_GUID_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="common/sbfGuid.h"/>
  </compounddef>
</doxygen>
