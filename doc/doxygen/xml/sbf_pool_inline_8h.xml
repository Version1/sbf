<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_pool_inline_8h" kind="file" language="C++">
    <compoundname>sbfPoolInline.h</compoundname>
    <includedby refid="sbf_pool_8h" local="yes">common/sbfPool.h</includedby>
    <invincdepgraph>
      <node id="1346">
        <label>common/sbfPool.h</label>
        <link refid="sbf_pool_8h"/>
        <childnode refid="1347" relation="include">
        </childnode>
        <childnode refid="1385" relation="include">
        </childnode>
        <childnode refid="1387" relation="include">
        </childnode>
        <childnode refid="1388" relation="include">
        </childnode>
      </node>
      <node id="1388">
        <label>core/sbfQueuePrivate.h</label>
        <link refid="sbf_queue_private_8h"/>
        <childnode refid="1389" relation="include">
        </childnode>
        <childnode refid="1390" relation="include">
        </childnode>
      </node>
      <node id="1355">
        <label>handlers/common/sbfCommonHandler.c</label>
        <link refid="sbf_common_handler_8c"/>
      </node>
      <node id="1360">
        <label>handlers/common/sbfCommonHandler.h</label>
        <link refid="sbf_common_handler_8h"/>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1356" relation="include">
        </childnode>
      </node>
      <node id="1382">
        <label>transport/sbfTportWeight.c</label>
        <link refid="sbf_tport_weight_8c"/>
      </node>
      <node id="1367">
        <label>requestreply/sbfRequestSub.c</label>
        <link refid="sbf_request_sub_8c"/>
      </node>
      <node id="1363">
        <label>requestreply/sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="1364" relation="include">
        </childnode>
      </node>
      <node id="1368">
        <label>tools/replier/sbfReplier.c</label>
        <link refid="sbf_replier_8c"/>
      </node>
      <node id="1378">
        <label>transport/sbfSub.c</label>
        <link refid="sbf_sub_8c"/>
      </node>
      <node id="1384">
        <label>transport/sbfSub.h</label>
        <link refid="sbf_sub_8h"/>
        <childnode refid="1359" relation="include">
        </childnode>
      </node>
      <node id="1379">
        <label>transport/sbfTopic.c</label>
        <link refid="sbf_topic_8c"/>
      </node>
      <node id="1354">
        <label>handlers/common/sbfCommonHandlerPrivate.h</label>
        <link refid="sbf_common_handler_private_8h"/>
        <childnode refid="1355" relation="include">
        </childnode>
      </node>
      <node id="1357">
        <label>handlers/udp/sbfUdpHandler.c</label>
        <link refid="sbf_udp_handler_8c"/>
      </node>
      <node id="1356">
        <label>handlers/udp/sbfUdpHandler.h</label>
        <link refid="sbf_udp_handler_8h"/>
        <childnode refid="1357" relation="include">
        </childnode>
      </node>
      <node id="1371">
        <label>tools/publisher/sbfPublisher.c</label>
        <link refid="sbf_publisher_8c"/>
      </node>
      <node id="1373">
        <label>transport/sbfBatch.c</label>
        <link refid="sbf_batch_8c"/>
      </node>
      <node id="1358">
        <label>transport/sbfBatch.h</label>
        <link refid="sbf_batch_8h"/>
        <childnode refid="1359" relation="include">
        </childnode>
      </node>
      <node id="1369">
        <label>tools/requester/sbfRequester.c</label>
        <link refid="sbf_requester_8c"/>
      </node>
      <node id="1386">
        <label>common/sbfDeque.c</label>
        <link refid="sbf_deque_8c"/>
      </node>
      <node id="1348">
        <label>common/sbfBuffer.c</label>
        <link refid="sbf_buffer_8c"/>
      </node>
      <node id="1347">
        <label>common/sbfBuffer.h</label>
        <link refid="sbf_buffer_8h"/>
        <childnode refid="1348" relation="include">
        </childnode>
        <childnode refid="1349" relation="include">
        </childnode>
        <childnode refid="1352" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
        <childnode refid="1383" relation="include">
        </childnode>
        <childnode refid="1384" relation="include">
        </childnode>
      </node>
      <node id="1385">
        <label>common/sbfDequePrivate.h</label>
        <link refid="sbf_deque_private_8h"/>
        <childnode refid="1386" relation="include">
        </childnode>
      </node>
      <node id="1389">
        <label>core/sbfHiResTimer.c</label>
        <link refid="sbf_hi_res_timer_8c"/>
      </node>
      <node id="1372">
        <label>tools/subscriber/sbfSubscriber.c</label>
        <link refid="sbf_subscriber_8c"/>
      </node>
      <node id="1362">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.c</label>
        <link refid="sbf_tcp_mesh_handler_8c"/>
      </node>
      <node id="1361">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.h</label>
        <link refid="sbf_tcp_mesh_handler_8h"/>
        <childnode refid="1362" relation="include">
        </childnode>
      </node>
      <node id="1377">
        <label>transport/sbfPub.c</label>
        <link refid="sbf_pub_8c"/>
      </node>
      <node id="1383">
        <label>transport/sbfPub.h</label>
        <link refid="sbf_pub_8h"/>
        <childnode refid="1359" relation="include">
        </childnode>
      </node>
      <node id="1350">
        <label>common/sbfTcpConnection.c</label>
        <link refid="sbf_tcp_connection_8c"/>
      </node>
      <node id="1349">
        <label>common/sbfTcpConnection.h</label>
        <link refid="sbf_tcp_connection_8h"/>
        <childnode refid="1350" relation="include">
        </childnode>
        <childnode refid="1351" relation="include">
        </childnode>
      </node>
      <node id="1366">
        <label>requestreply/sbfRequestReply.c</label>
        <link refid="sbf_request_reply_8c"/>
      </node>
      <node id="1364">
        <label>requestreply/sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
        <childnode refid="1365" relation="include">
        </childnode>
        <childnode refid="1366" relation="include">
        </childnode>
        <childnode refid="1367" relation="include">
        </childnode>
        <childnode refid="1368" relation="include">
        </childnode>
        <childnode refid="1369" relation="include">
        </childnode>
      </node>
      <node id="1376">
        <label>transport/sbfHandler.c</label>
        <link refid="sbf_handler_8c"/>
      </node>
      <node id="1374">
        <label>transport/sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1356" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
      </node>
      <node id="1353">
        <label>common/sbfUdpMulticast.c</label>
        <link refid="sbf_udp_multicast_8c"/>
      </node>
      <node id="1375">
        <label>transport/sbfTportPrivate.h</label>
        <link refid="sbf_tport_private_8h"/>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1377" relation="include">
        </childnode>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1381" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
      </node>
      <node id="1352">
        <label>common/sbfUdpMulticast.h</label>
        <link refid="sbf_udp_multicast_8h"/>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1356" relation="include">
        </childnode>
      </node>
      <node id="1381">
        <label>transport/sbfTportFragments.c</label>
        <link refid="sbf_tport_fragments_8c"/>
      </node>
      <node id="1380">
        <label>transport/sbfTport.c</label>
        <link refid="sbf_tport_8c"/>
      </node>
      <node id="1359">
        <label>transport/sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="1360" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1356" relation="include">
        </childnode>
        <childnode refid="1363" relation="include">
        </childnode>
        <childnode refid="1370" relation="include">
        </childnode>
        <childnode refid="1371" relation="include">
        </childnode>
        <childnode refid="1368" relation="include">
        </childnode>
        <childnode refid="1369" relation="include">
        </childnode>
        <childnode refid="1372" relation="include">
        </childnode>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1374" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1377" relation="include">
        </childnode>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1381" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
      </node>
      <node id="1351">
        <label>common/sbfTcpListener.c</label>
        <link refid="sbf_tcp_listener_8c"/>
      </node>
      <node id="1390">
        <label>core/sbfQueue.c</label>
        <link refid="sbf_queue_8c"/>
      </node>
      <node id="1365">
        <label>requestreply/sbfRequestPub.c</label>
        <link refid="sbf_request_pub_8c"/>
      </node>
      <node id="1345">
        <label>common/sbfPoolInline.h</label>
        <link refid="sbf_pool_inline_8h"/>
        <childnode refid="1346" relation="include">
        </childnode>
      </node>
      <node id="1370">
        <label>requestreply/sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="1364" relation="include">
        </childnode>
      </node>
      <node id="1387">
        <label>common/sbfPool.c</label>
        <link refid="sbf_pool_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structsbf_pool_count_impl" prot="public">sbfPoolCountImpl</innerclass>
    <innerclass refid="structsbf_pool_item_impl" prot="public">sbfPoolItemImpl</innerclass>
    <innerclass refid="structsbf_pool_impl" prot="public">sbfPoolImpl</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sbf_pool_inline_8h_1afd4119d5de42a3e0ec12b3a3c5c430ee" prot="public" static="no">
        <type>struct <ref refid="structsbf_pool_count_impl" kindref="compound">sbfPoolCountImpl</ref> *</type>
        <definition>typedef struct sbfPoolCountImpl* sbfPoolCount</definition>
        <argsstring></argsstring>
        <name>sbfPoolCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="18" column="1" bodyfile="common/sbfPoolInline.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" prot="public" static="no">
        <type>struct <ref refid="structsbf_pool_item_impl" kindref="compound">sbfPoolItemImpl</ref> *</type>
        <definition>typedef struct sbfPoolItemImpl* sbfPoolItem</definition>
        <argsstring></argsstring>
        <name>sbfPoolItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="26" column="1" bodyfile="common/sbfPoolInline.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_pool_inline_8h_1ab4a61a6b6ddf65fc21992963ce1140dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> <ref refid="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" kindref="member">sbfPoolItem</ref></type>
        <definition>static SBF_INLINE sbfPoolItem sbfPoolNew</definition>
        <argsstring>(sbfPool pool)</argsstring>
        <name>sbfPoolNew</name>
        <param>
          <type><ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref></type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="44" column="1" bodyfile="common/sbfPoolInline.h" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="sbf_pool_inline_8h_1a5bfaef2a7d25d244eca652f6f1136c8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> <ref refid="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" kindref="member">sbfPoolItem</ref></type>
        <definition>static SBF_INLINE sbfPoolItem sbfPoolNewZero</definition>
        <argsstring>(sbfPool pool)</argsstring>
        <name>sbfPoolNewZero</name>
        <param>
          <type><ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref></type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="57" column="1" bodyfile="common/sbfPoolInline.h" bodystart="57" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="sbf_pool_inline_8h_1a10d891843e87dd86d6e88faeef4f7cd2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> <ref refid="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" kindref="member">sbfPoolItem</ref></type>
        <definition>static SBF_INLINE sbfPoolItem sbfPoolNextItem</definition>
        <argsstring>(sbfPool pool)</argsstring>
        <name>sbfPoolNextItem</name>
        <param>
          <type><ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref></type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="70" column="1" bodyfile="common/sbfPoolInline.h" bodystart="70" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="sbf_pool_inline_8h_1a953aaaebd14fca858742598754ab9939" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> size_t</type>
        <definition>static SBF_INLINE size_t sbfPool_getItemSize</definition>
        <argsstring>(sbfPool pool)</argsstring>
        <name>sbfPool_getItemSize</name>
        <param>
          <type><ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref></type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="87" column="1" bodyfile="common/sbfPoolInline.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="sbf_pool_inline_8h_1a9cc7f53e5c2d0b383fb07a4a50635e97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> void *</type>
        <definition>static SBF_INLINE void* sbfPool_get</definition>
        <argsstring>(sbfPool pool)</argsstring>
        <name>sbfPool_get</name>
        <param>
          <type><ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref></type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="93" column="1" bodyfile="common/sbfPoolInline.h" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="sbf_pool_inline_8h_1ac8570b7b708289d672f78b8c33011368" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> void *</type>
        <definition>static SBF_INLINE void* sbfPool_getZero</definition>
        <argsstring>(sbfPool pool)</argsstring>
        <name>sbfPool_getZero</name>
        <param>
          <type><ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref></type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="106" column="1" bodyfile="common/sbfPoolInline.h" bodystart="106" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="sbf_pool_inline_8h_1af636a63e2f36d7abeb2ff12371572b25" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> void</type>
        <definition>static SBF_INLINE void sbfPool_put</definition>
        <argsstring>(void *data)</argsstring>
        <name>sbfPool_put</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfPoolInline.h" line="121" column="1" bodyfile="common/sbfPoolInline.h" bodystart="121" bodyend="131"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_SBF_POOL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;must<sp/>be<sp/>included<sp/>from<sp/>sbfPool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="structsbf_pool_count_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_pool_count_impl" kindref="compound">sbfPoolCountImpl</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7" refid="structsbf_pool_count_impl_1a3f620f85d9c9f73c1cc7038a37f09883" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_count_impl_1a3f620f85d9c9f73c1cc7038a37f09883" kindref="member">mFunction</ref>;</highlight></codeline>
<codeline lineno="8" refid="structsbf_pool_count_impl_1af601317fe4f101f30b7894c2fe7feb8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_count_impl_1af601317fe4f101f30b7894c2fe7feb8b" kindref="member">mLine</ref>;</highlight></codeline>
<codeline lineno="9" refid="structsbf_pool_count_impl_1abf1b08e4acde9b8a309c58bae3b394b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_count_impl_1abf1b08e4acde9b8a309c58bae3b394b0" kindref="member">mPools</ref>;</highlight></codeline>
<codeline lineno="10" refid="structsbf_pool_count_impl_1a92f5a4f9748b1b3905126bdf9507bb64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_count_impl_1a92f5a4f9748b1b3905126bdf9507bb64" kindref="member">mSize</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structsbf_pool_count_impl_1a616af8922f0d530ca33106b2e3028475" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_count_impl_1a616af8922f0d530ca33106b2e3028475" kindref="member">mGets</ref>;</highlight></codeline>
<codeline lineno="13" refid="structsbf_pool_count_impl_1a2804c7e09e38c0a31e56c9aaf517309f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_count_impl_1a2804c7e09e38c0a31e56c9aaf517309f" kindref="member">mPuts</ref>;</highlight></codeline>
<codeline lineno="14" refid="structsbf_pool_count_impl_1afdaabef4da9accd66ba125a62c81fa2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_count_impl_1afdaabef4da9accd66ba125a62c81fa2c" kindref="member">mNews</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_count_impl_1a2917c07e007a8e0ef5fa7252f9b637d4" kindref="member">RB_ENTRY</ref><sp/>(<ref refid="structsbf_pool_count_impl" kindref="compound">sbfPoolCountImpl</ref>)<sp/>mTreeEntry;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18" refid="sbf_pool_inline_8h_1afd4119d5de42a3e0ec12b3a3c5c430ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_pool_count_impl" kindref="compound">sbfPoolCountImpl</ref>*<sp/><ref refid="sbf_pool_inline_8h_1afd4119d5de42a3e0ec12b3a3c5c430ee" kindref="member">sbfPoolCount</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structsbf_pool_item_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_pool_item_impl" kindref="compound">sbfPoolItemImpl</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="structsbf_pool_item_impl_1adda3f30580aed10951c8796a0a7e0155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_item_impl_1adda3f30580aed10951c8796a0a7e0155" kindref="member">mPool</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structsbf_pool_item_impl_1a67c4e9d9f08c207fb4b4b7b0d8c30bd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_pool_item_impl" kindref="compound">sbfPoolItemImpl</ref>*<sp/><ref refid="structsbf_pool_item_impl_1a67c4e9d9f08c207fb4b4b7b0d8c30bd5" kindref="member">mNext</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26" refid="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_pool_item_impl" kindref="compound">sbfPoolItemImpl</ref>*<sp/><ref refid="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" kindref="member">sbfPoolItem</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structsbf_pool_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_pool_impl" kindref="compound">sbfPoolImpl</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="structsbf_pool_impl_1addbf24032a5724d1c8e964854d7db7dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_impl_1addbf24032a5724d1c8e964854d7db7dd" kindref="member">mItemSize</ref>;</highlight></codeline>
<codeline lineno="31" refid="structsbf_pool_impl_1a92e592f3bb25e8fdc448b257b1b49f9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_impl_1a92e592f3bb25e8fdc448b257b1b49f9d" kindref="member">mSize</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structsbf_pool_impl_1a0be977b1bd03508d19e389219250375f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1abec418ac4ae7d965f5d1196a4acd5067" kindref="member">sbfSpinLock</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_impl_1a0be977b1bd03508d19e389219250375f" kindref="member">mLock</ref>;</highlight></codeline>
<codeline lineno="34" refid="structsbf_pool_impl_1ae10ebc19996e95fa81361deceba818c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_pool_item_impl" kindref="compound">sbfPoolItemImpl</ref>*<sp/><sp/><sp/><ref refid="structsbf_pool_impl_1ae10ebc19996e95fa81361deceba818c5" kindref="member">mAvailable</ref>;</highlight></codeline>
<codeline lineno="35" refid="structsbf_pool_impl_1aa15a7376ac5206171424ab4ed01b6159" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_pool_item_impl" kindref="compound">sbfPoolItemImpl</ref>*<sp/><sp/><sp/><ref refid="structsbf_pool_impl_1aa15a7376ac5206171424ab4ed01b6159" kindref="member">mFree</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structsbf_pool_impl_1ae2e1edeb5e50b52e7d99b72d97a510bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPoolCount<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_impl_1ae2e1edeb5e50b52e7d99b72d97a510bc" kindref="member">mCount</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1af71bfd90dc9d00fb03545fe66c67d673" kindref="member">TAILQ_ENTRY</ref><sp/>(<ref refid="structsbf_pool_impl" kindref="compound">sbfPoolImpl</ref>)<sp/>mListEntry;</highlight></codeline>
<codeline lineno="40" refid="structsbf_pool_impl_1acc731d94db38962f2cbc20d6d1fe1064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_pool_impl_1acc731d94db38962f2cbc20d6d1fe1064" kindref="member">mAtExit</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/>sbfPoolItem</highlight></codeline>
<codeline lineno="44"><highlight class="normal">sbfPoolNew<sp/>(<ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref><sp/>pool)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPoolItem<sp/>item;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>__sync_fetch_and_add<sp/>(&amp;pool-&gt;mCount-&gt;mNews,<sp/>1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>(<ref refid="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" kindref="member">sbfPoolItem</ref>)<ref refid="sbf_memory_8h_1a6af5faec3f9662b20ffc9903f923dec0" kindref="member">xmalloc</ref><sp/>(pool-&gt;mSize);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_pool_item_impl_1adda3f30580aed10951c8796a0a7e0155" kindref="member">mPool</ref><sp/>=<sp/>pool;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_pool_item_impl_1a67c4e9d9f08c207fb4b4b7b0d8c30bd5" kindref="member">mNext</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/>sbfPoolItem</highlight></codeline>
<codeline lineno="57"><highlight class="normal">sbfPoolNewZero<sp/>(<ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref><sp/>pool)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPoolItem<sp/>item;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>__sync_fetch_and_add<sp/>(&amp;pool-&gt;mCount-&gt;mNews,<sp/>1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>(<ref refid="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" kindref="member">sbfPoolItem</ref>)<ref refid="sbf_memory_8h_1ade8988c3fcdbca51eb623eb5f7ad5150" kindref="member">xcalloc</ref><sp/>(1,<sp/>pool-&gt;mSize);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_pool_item_impl_1adda3f30580aed10951c8796a0a7e0155" kindref="member">mPool</ref><sp/>=<sp/>pool;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_pool_item_impl_1a67c4e9d9f08c207fb4b4b7b0d8c30bd5" kindref="member">mNext</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/>sbfPoolItem</highlight></codeline>
<codeline lineno="70"><highlight class="normal">sbfPoolNextItem<sp/>(<ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref><sp/>pool)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPoolItem<sp/>item;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1aa933b8808fbcd8ee224c1f1eb748dffd" kindref="member">sbfSpinLock_lock</ref><sp/>(&amp;pool-&gt;mLock);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>pool-&gt;mAvailable;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="sbf_atomic_8h_1ae3ce06094663800b2d1c6f519b34c0fa" kindref="member">sbfAtomic_swapP</ref><sp/>(&amp;pool-&gt;mFree,<sp/>NULL);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool-&gt;mAvailable<sp/>=<sp/>item-&gt;<ref refid="structsbf_pool_item_impl_1a67c4e9d9f08c207fb4b4b7b0d8c30bd5" kindref="member">mNext</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1a91c84ef009ce03cef5e03370bf674217" kindref="member">sbfSpinLock_unlock</ref><sp/>(&amp;pool-&gt;mLock);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">sbfPool_getItemSize<sp/>(<ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref><sp/>pool)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pool-&gt;mItemSize;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="93"><highlight class="normal">sbfPool_get<sp/>(<ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref><sp/>pool)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPoolItem<sp/>item;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>__sync_fetch_and_add<sp/>(&amp;pool-&gt;mCount-&gt;mGets,<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>sbfPoolNextItem<sp/>(pool);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>sbfPoolNew<sp/>(pool);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="106"><highlight class="normal">sbfPool_getZero<sp/>(<ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref><sp/>pool)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPoolItem<sp/>item;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>__sync_fetch_and_add<sp/>(&amp;pool-&gt;mCount-&gt;mGets,<sp/>1);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>sbfPoolNextItem<sp/>(pool);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>sbfPoolNewZero<sp/>(pool);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(item<sp/>+<sp/>1,<sp/>0,<sp/>pool-&gt;mItemSize);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">sbfPool_put<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPoolItem<sp/>item<sp/>=<sp/>(<ref refid="sbf_pool_inline_8h_1a4f86f687e7aef922dd4c85241171dfa1" kindref="member">sbfPoolItem</ref>)data<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_pool_8h_1aa33450533ed8791755450ca2ae6bdd22" kindref="member">sbfPool</ref><sp/><sp/><sp/><sp/><sp/>pool<sp/>=<sp/>item-&gt;<ref refid="structsbf_pool_item_impl_1adda3f30580aed10951c8796a0a7e0155" kindref="member">mPool</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>__sync_fetch_and_add<sp/>(&amp;pool-&gt;mCount-&gt;mPuts,<sp/>1);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_pool_item_impl_1a67c4e9d9f08c207fb4b4b7b0d8c30bd5" kindref="member">mNext</ref><sp/>=<sp/>pool-&gt;mFree;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="sbf_atomic_8h_1a86ad4ce08cbe9ebe0bbc8bf6ae438530" kindref="member">sbfAtomic_compareAndSwapP</ref><sp/>(&amp;pool-&gt;mFree,<sp/>item-&gt;<ref refid="structsbf_pool_item_impl_1a67c4e9d9f08c207fb4b4b7b0d8c30bd5" kindref="member">mNext</ref>,<sp/>item));</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="common/sbfPoolInline.h"/>
  </compounddef>
</doxygen>
