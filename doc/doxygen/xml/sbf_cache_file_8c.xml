<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_cache_file_8c" kind="file" language="C++">
    <compoundname>sbfCacheFile.c</compoundname>
    <includes refid="sbf_cache_file_8h" local="yes">sbfCacheFile.h</includes>
    <includes refid="sbf_cache_file_private_8h" local="yes">sbfCacheFilePrivate.h</includes>
    <incdepgraph>
      <node id="225">
        <label>event.h</label>
      </node>
      <node id="221">
        <label>common/sbfCacheFile.c</label>
        <link refid="sbf_cache_file_8c"/>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>sbfCacheFile.h</label>
        <link refid="sbf_cache_file_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="224">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="226">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="227" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>sys/types.h</label>
      </node>
      <node id="223">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="228">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="233">
        <label>sbfCacheFilePrivate.h</label>
        <link refid="sbf_cache_file_private_8h"/>
      </node>
      <node id="231">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_cache_file_8c_1aab9f35e2b1adee1eab382f2a93166f30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> <ref refid="sbf_cache_file_8h_1aad399e05f69629ae8b82cd766e7d1dd0" kindref="member">sbfCacheFileItem</ref></type>
        <definition>static SBF_INLINE sbfCacheFileItem sbfCacheFileNewItem</definition>
        <argsstring>(sbfCacheFile file, size_t offset)</argsstring>
        <name>sbfCacheFileNewItem</name>
        <param>
          <type><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref></type>
          <declname>file</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCacheFile.c" line="5" column="1" bodyfile="common/sbfCacheFile.c" bodystart="5" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="sbf_cache_file_8c_1a6ff6e582b3ebeb8b2d125552eee49bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref></type>
        <definition>sbfCacheFile sbfCacheFile_open</definition>
        <argsstring>(const char *path, size_t itemSize, int always_create, int *created, sbfCacheFileItemCb cb, void *closure)</argsstring>
        <name>sbfCacheFile_open</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>itemSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>always_create</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>created</declname>
        </param>
        <param>
          <type><ref refid="sbf_cache_file_8h_1a14e01efd738983536133d1578ed20206" kindref="member">sbfCacheFileItemCb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCacheFile.c" line="17" column="1" bodyfile="common/sbfCacheFile.c" bodystart="17" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="sbf_cache_file_8c_1ae3199d8d410343dca6c92e0fc12d3bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfCacheFile_close</definition>
        <argsstring>(sbfCacheFile file)</argsstring>
        <name>sbfCacheFile_close</name>
        <param>
          <type><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref></type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCacheFile.c" line="86" column="1" bodyfile="common/sbfCacheFile.c" bodystart="86" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="sbf_cache_file_8c_1a8a11bafc40a7045ab7e05311eb9e0684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_cache_file_8h_1aad399e05f69629ae8b82cd766e7d1dd0" kindref="member">sbfCacheFileItem</ref></type>
        <definition>sbfCacheFileItem sbfCacheFile_add</definition>
        <argsstring>(sbfCacheFile file, void *itemData)</argsstring>
        <name>sbfCacheFile_add</name>
        <param>
          <type><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref></type>
          <declname>file</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>itemData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCacheFile.c" line="102" column="1" bodyfile="common/sbfCacheFile.c" bodystart="102" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="sbf_cache_file_8c_1a647e0a35e84e0a92ef180154c5d4c0f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref></type>
        <definition>sbfError sbfCacheFile_write</definition>
        <argsstring>(sbfCacheFileItem item, void *itemData)</argsstring>
        <name>sbfCacheFile_write</name>
        <param>
          <type><ref refid="sbf_cache_file_8h_1aad399e05f69629ae8b82cd766e7d1dd0" kindref="member">sbfCacheFileItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>itemData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCacheFile.c" line="117" column="1" bodyfile="common/sbfCacheFile.c" bodystart="117" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="sbf_cache_file_8c_1a5c0746c9ab8e903fbdbb83f964698713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref></type>
        <definition>sbfError sbfCacheFile_writeOffset</definition>
        <argsstring>(sbfCacheFileItem item, size_t offset, void *data, size_t size)</argsstring>
        <name>sbfCacheFile_writeOffset</name>
        <param>
          <type><ref refid="sbf_cache_file_8h_1aad399e05f69629ae8b82cd766e7d1dd0" kindref="member">sbfCacheFileItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCacheFile.c" line="129" column="1" bodyfile="common/sbfCacheFile.c" bodystart="129" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="sbf_cache_file_8c_1a577be5a835fb3e1b5ca3b11f2a67711e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfCacheFile_flush</definition>
        <argsstring>(sbfCacheFile file)</argsstring>
        <name>sbfCacheFile_flush</name>
        <param>
          <type><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref></type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCacheFile.c" line="147" column="1" bodyfile="common/sbfCacheFile.c" bodystart="147" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_cache_file_8h" kindref="compound">sbfCacheFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_cache_file_private_8h" kindref="compound">sbfCacheFilePrivate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/><ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">sbfCacheFileNewItem<sp/>(<ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref><sp/>file,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="sbf_memory_8h_1ade8988c3fcdbca51eb623eb5f7ad5150" kindref="member">xcalloc</ref><sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*item);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_cache_file_item_impl_1a604d9aa1dc343d76a37e2093e191587c" kindref="member">mParent</ref><sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_cache_file_item_impl_1a57f09f4e72f2f6cccad0835d4cf6adfd" kindref="member">mOffset</ref><sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1a512bee16b46f601078c96c776d2648c3" kindref="member">TAILQ_INSERT_TAIL</ref><sp/>(&amp;file-&gt;mItems,<sp/>item,<sp/>mEntry);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref></highlight></codeline>
<codeline lineno="17" refid="sbf_cache_file_8h_1a6ff6e582b3ebeb8b2d125552eee49bb8" refkind="member"><highlight class="normal"><ref refid="sbf_cache_file_8c_1a6ff6e582b3ebeb8b2d125552eee49bb8" kindref="member">sbfCacheFile_open</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>itemSize,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>always_create,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>created,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_cache_file_8h_1a14e01efd738983536133d1578ed20206" kindref="member">sbfCacheFileItemCb</ref><sp/>cb,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref><sp/><sp/><sp/><sp/><sp/>file;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="sbf_common_win32_8h_1a149da0702b060478da4d59ffe807adac" kindref="member">stat</ref><sp/><sp/><sp/><sp/><sp/><sp/>sb;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(created<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>created<sp/>=<sp/>&amp;tmp;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!always_create)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*created<sp/>=<sp/>(<ref refid="sbf_common_win32_8h_1a149da0702b060478da4d59ffe807adac" kindref="member">stat</ref><sp/>(path,<sp/>&amp;sb)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*created<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>ENOENT)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*created<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*created)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>fopen<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;w+b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>fopen<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;r+b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*created)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>sb.st_size;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((size<sp/>%<sp/>itemSize)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/><ref refid="sbf_memory_8h_1ade8988c3fcdbca51eb623eb5f7ad5150" kindref="member">xcalloc</ref><sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*file);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;mFile<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;mUsed<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;mItemSize<sp/>=<sp/>itemSize;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1a449d224023780e46253b83b61e0a50a9" kindref="member">TAILQ_INIT</ref><sp/>(&amp;file-&gt;mItems);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*created<sp/>&amp;&amp;<sp/>size<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>cb<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/><ref refid="sbf_common_win32_8c_1adcdc6990a7641f7ba05f5dd2a603b992" kindref="member">mmap</ref><sp/>(NULL,<sp/>size,<sp/><ref refid="sbf_common_win32_8h_1a15bf68ce8b590838b3a5c0b639d8d519" kindref="member">PROT_READ</ref>,<sp/><ref refid="sbf_common_win32_8h_1a398ef47a991a44389aa9818c98a28d24" kindref="member">MAP_PRIVATE</ref>,<sp/>fileno<sp/>(f),<sp/>0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp<sp/>==<sp/><ref refid="sbf_common_win32_8h_1a8523dcf952f6ff059a3bed717e4f1296" kindref="member">MAP_FAILED</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(offset<sp/>=<sp/>0;<sp/>offset<sp/>&lt;<sp/>size;<sp/>offset<sp/>+=<sp/>itemSize)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>sbfCacheFileNewItem<sp/>(file,<sp/>offset);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>(file,<sp/>item,<sp/>cp<sp/>+<sp/>offset,<sp/>itemSize,<sp/>closure);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_common_win32_8c_1a7d888f95854ef9b7a9990f3b513bfef2" kindref="member">munmap</ref><sp/>(cp,<sp/>size);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">fail:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_cache_file_8c_1ae3199d8d410343dca6c92e0fc12d3bcb" kindref="member">sbfCacheFile_close</ref><sp/>(file);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="sbf_cache_file_8h_1ae3199d8d410343dca6c92e0fc12d3bcb" refkind="member"><highlight class="normal"><ref refid="sbf_cache_file_8c_1ae3199d8d410343dca6c92e0fc12d3bcb" kindref="member">sbfCacheFile_close</ref><sp/>(<ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref><sp/>file)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref><sp/>item1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1a2a85f19896399eecd0ebf91cb8176166" kindref="member">TAILQ_FOREACH_SAFE</ref><sp/>(item,<sp/>&amp;file-&gt;mItems,<sp/>mEntry,<sp/>item1)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1aaae87ca18c28066e1a96221e762d1209" kindref="member">TAILQ_REMOVE</ref><sp/>(&amp;file-&gt;mItems,<sp/>item,<sp/>mEntry);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(item);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose<sp/>(file-&gt;mFile);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(file);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref></highlight></codeline>
<codeline lineno="102" refid="sbf_cache_file_8h_1a8a11bafc40a7045ab7e05311eb9e0684" refkind="member"><highlight class="normal"><ref refid="sbf_cache_file_8c_1a8a11bafc40a7045ab7e05311eb9e0684" kindref="member">sbfCacheFile_add</ref><sp/>(<ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref><sp/>file,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>itemData)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/>sbfCacheFileNewItem<sp/>(file,<sp/>file-&gt;mUsed);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;mUsed<sp/>+=<sp/>file-&gt;mItemSize;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itemData<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_cache_file_8c_1a647e0a35e84e0a92ef180154c5d4c0f0" kindref="member">sbfCacheFile_write</ref><sp/>(item,<sp/>itemData);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref></highlight></codeline>
<codeline lineno="117" refid="sbf_cache_file_8h_1a647e0a35e84e0a92ef180154c5d4c0f0" refkind="member"><highlight class="normal"><ref refid="sbf_cache_file_8c_1a647e0a35e84e0a92ef180154c5d4c0f0" kindref="member">sbfCacheFile_write</ref><sp/>(<ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref><sp/>item,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>itemData)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref><sp/>file<sp/>=<sp/>item-&gt;<ref refid="structsbf_cache_file_item_impl_1a604d9aa1dc343d76a37e2093e191587c" kindref="member">mParent</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sbf_common_win32_8h_1a227875b8399b0589b1124555d3ae4007" kindref="member">fseeko</ref><sp/>(file-&gt;mFile,<sp/>item-&gt;<ref refid="structsbf_cache_file_item_impl_1a57f09f4e72f2f6cccad0835d4cf6adfd" kindref="member">mOffset</ref>,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite<sp/>(itemData,<sp/>file-&gt;mItemSize,<sp/>1,<sp/>file-&gt;mFile)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref></highlight></codeline>
<codeline lineno="129" refid="sbf_cache_file_8h_1a5c0746c9ab8e903fbdbb83f964698713" refkind="member"><highlight class="normal"><ref refid="sbf_cache_file_8c_1a5c0746c9ab8e903fbdbb83f964698713" kindref="member">sbfCacheFile_writeOffset</ref><sp/>(<ref refid="structsbf_cache_file_item_impl" kindref="compound">sbfCacheFileItem</ref><sp/>item,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref><sp/>file<sp/>=<sp/>item-&gt;<ref refid="structsbf_cache_file_item_impl_1a604d9aa1dc343d76a37e2093e191587c" kindref="member">mParent</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;<sp/>file-&gt;mItemSize<sp/>||<sp/>offset<sp/>+<sp/>size<sp/>&gt;<sp/>file-&gt;mItemSize)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EINVAL;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sbf_common_win32_8h_1a227875b8399b0589b1124555d3ae4007" kindref="member">fseeko</ref><sp/>(file-&gt;mFile,<sp/>item-&gt;<ref refid="structsbf_cache_file_item_impl_1a57f09f4e72f2f6cccad0835d4cf6adfd" kindref="member">mOffset</ref><sp/>+<sp/>offset,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite<sp/>(data,<sp/>size,<sp/>1,<sp/>file-&gt;mFile)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="sbf_cache_file_8h_1a577be5a835fb3e1b5ca3b11f2a67711e" refkind="member"><highlight class="normal"><ref refid="sbf_cache_file_8c_1a577be5a835fb3e1b5ca3b11f2a67711e" kindref="member">sbfCacheFile_flush</ref><sp/>(<ref refid="sbf_cache_file_8h_1a2ad4f3345eb66c3a92cb89941d813a0f" kindref="member">sbfCacheFile</ref><sp/>file)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush<sp/>(file-&gt;mFile);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="common/sbfCacheFile.c"/>
  </compounddef>
</doxygen>
