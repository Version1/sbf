<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_event_8h" kind="file" language="C++">
    <compoundname>sbfEvent.h</compoundname>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <includedby refid="sbf_event_8c" local="yes">core/sbfEvent.c</includedby>
    <includedby refid="sbf_mw_8h" local="yes">core/sbfMw.h</includedby>
    <incdepgraph>
      <node id="2133">
        <label>event.h</label>
      </node>
      <node id="2132">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="2134">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="2135" relation="include">
        </childnode>
      </node>
      <node id="2130">
        <label>core/sbfEvent.h</label>
        <link refid="sbf_event_8h"/>
        <childnode refid="2131" relation="include">
        </childnode>
      </node>
      <node id="2138">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="2131" relation="include">
        </childnode>
      </node>
      <node id="2135">
        <label>sys/types.h</label>
      </node>
      <node id="2131">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="2132" relation="include">
        </childnode>
        <childnode refid="2133" relation="include">
        </childnode>
        <childnode refid="2134" relation="include">
        </childnode>
        <childnode refid="2136" relation="include">
        </childnode>
        <childnode refid="2137" relation="include">
        </childnode>
        <childnode refid="2138" relation="include">
        </childnode>
        <childnode refid="2139" relation="include">
        </childnode>
        <childnode refid="2140" relation="include">
        </childnode>
      </node>
      <node id="2137">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="2136">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="2139">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="2131" relation="include">
        </childnode>
      </node>
      <node id="2140">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="2131" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2149">
        <label>core/sbfHiResTimerPrivate.h</label>
        <link refid="sbf_hi_res_timer_private_8h"/>
        <childnode refid="2150" relation="include">
        </childnode>
        <childnode refid="2151" relation="include">
        </childnode>
      </node>
      <node id="2151">
        <label>core/sbfQueuePrivate.h</label>
        <link refid="sbf_queue_private_8h"/>
        <childnode refid="2150" relation="include">
        </childnode>
        <childnode refid="2152" relation="include">
        </childnode>
      </node>
      <node id="2157">
        <label>handlers/common/sbfCommonHandler.c</label>
        <link refid="sbf_common_handler_8c"/>
      </node>
      <node id="2156">
        <label>handlers/common/sbfCommonHandler.h</label>
        <link refid="sbf_common_handler_8h"/>
        <childnode refid="2157" relation="include">
        </childnode>
        <childnode refid="2158" relation="include">
        </childnode>
      </node>
      <node id="2183">
        <label>transport/sbfTportWeight.c</label>
        <link refid="sbf_tport_weight_8c"/>
      </node>
      <node id="2166">
        <label>requestreply/sbfRequestSub.c</label>
        <link refid="sbf_request_sub_8c"/>
      </node>
      <node id="2172">
        <label>requestreply/sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="2163" relation="include">
        </childnode>
      </node>
      <node id="2167">
        <label>tools/replier/sbfReplier.c</label>
        <link refid="sbf_replier_8c"/>
      </node>
      <node id="2179">
        <label>transport/sbfSub.c</label>
        <link refid="sbf_sub_8c"/>
      </node>
      <node id="2180">
        <label>transport/sbfTopic.c</label>
        <link refid="sbf_topic_8c"/>
      </node>
      <node id="2160">
        <label>handlers/common/sbfCommonHandlerPrivate.h</label>
        <link refid="sbf_common_handler_private_8h"/>
        <childnode refid="2157" relation="include">
        </childnode>
      </node>
      <node id="2147">
        <label>common/sbfTcpListenerPrivate.h</label>
        <link refid="sbf_tcp_listener_private_8h"/>
        <childnode refid="2146" relation="include">
        </childnode>
      </node>
      <node id="2159">
        <label>handlers/udp/sbfUdpHandler.c</label>
        <link refid="sbf_udp_handler_8c"/>
      </node>
      <node id="2158">
        <label>handlers/udp/sbfUdpHandler.h</label>
        <link refid="sbf_udp_handler_8h"/>
        <childnode refid="2159" relation="include">
        </childnode>
      </node>
      <node id="2148">
        <label>core/sbfEventPrivate.h</label>
        <link refid="sbf_event_private_8h"/>
        <childnode refid="2142" relation="include">
        </childnode>
      </node>
      <node id="2169">
        <label>tools/publisher/sbfPublisher.c</label>
        <link refid="sbf_publisher_8c"/>
      </node>
      <node id="2142">
        <label>core/sbfEvent.c</label>
        <link refid="sbf_event_8c"/>
      </node>
      <node id="2141">
        <label>core/sbfEvent.h</label>
        <link refid="sbf_event_8h"/>
        <childnode refid="2142" relation="include">
        </childnode>
        <childnode refid="2143" relation="include">
        </childnode>
      </node>
      <node id="2174">
        <label>transport/sbfBatch.c</label>
        <link refid="sbf_batch_8c"/>
      </node>
      <node id="2168">
        <label>tools/requester/sbfRequester.c</label>
        <link refid="sbf_requester_8c"/>
      </node>
      <node id="2150">
        <label>core/sbfHiResTimer.c</label>
        <link refid="sbf_hi_res_timer_8c"/>
      </node>
      <node id="2144">
        <label>common/sbfTcpConnectionPrivate.h</label>
        <link refid="sbf_tcp_connection_private_8h"/>
        <childnode refid="2145" relation="include">
        </childnode>
        <childnode refid="2146" relation="include">
        </childnode>
      </node>
      <node id="2170">
        <label>tools/subscriber/sbfSubscriber.c</label>
        <link refid="sbf_subscriber_8c"/>
      </node>
      <node id="2162">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.c</label>
        <link refid="sbf_tcp_mesh_handler_8c"/>
      </node>
      <node id="2161">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.h</label>
        <link refid="sbf_tcp_mesh_handler_8h"/>
        <childnode refid="2162" relation="include">
        </childnode>
      </node>
      <node id="2178">
        <label>transport/sbfPub.c</label>
        <link refid="sbf_pub_8c"/>
      </node>
      <node id="2145">
        <label>common/sbfTcpConnection.c</label>
        <link refid="sbf_tcp_connection_8c"/>
      </node>
      <node id="2154">
        <label>core/sbfTimerPrivate.h</label>
        <link refid="sbf_timer_private_8h"/>
        <childnode refid="2155" relation="include">
        </childnode>
      </node>
      <node id="2165">
        <label>requestreply/sbfRequestReply.c</label>
        <link refid="sbf_request_reply_8c"/>
      </node>
      <node id="2163">
        <label>requestreply/sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
        <childnode refid="2164" relation="include">
        </childnode>
        <childnode refid="2165" relation="include">
        </childnode>
        <childnode refid="2166" relation="include">
        </childnode>
        <childnode refid="2167" relation="include">
        </childnode>
        <childnode refid="2168" relation="include">
        </childnode>
      </node>
      <node id="2177">
        <label>transport/sbfHandler.c</label>
        <link refid="sbf_handler_8c"/>
      </node>
      <node id="2175">
        <label>transport/sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="2160" relation="include">
        </childnode>
        <childnode refid="2161" relation="include">
        </childnode>
        <childnode refid="2158" relation="include">
        </childnode>
        <childnode refid="2176" relation="include">
        </childnode>
      </node>
      <node id="2155">
        <label>core/sbfTimer.c</label>
        <link refid="sbf_timer_8c"/>
      </node>
      <node id="2176">
        <label>transport/sbfTportPrivate.h</label>
        <link refid="sbf_tport_private_8h"/>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2179" relation="include">
        </childnode>
        <childnode refid="2180" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2182" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
      </node>
      <node id="2182">
        <label>transport/sbfTportFragments.c</label>
        <link refid="sbf_tport_fragments_8c"/>
      </node>
      <node id="2181">
        <label>transport/sbfTport.c</label>
        <link refid="sbf_tport_8c"/>
      </node>
      <node id="2171">
        <label>transport/sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="2156" relation="include">
        </childnode>
        <childnode refid="2160" relation="include">
        </childnode>
        <childnode refid="2161" relation="include">
        </childnode>
        <childnode refid="2158" relation="include">
        </childnode>
        <childnode refid="2172" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2169" relation="include">
        </childnode>
        <childnode refid="2167" relation="include">
        </childnode>
        <childnode refid="2168" relation="include">
        </childnode>
        <childnode refid="2170" relation="include">
        </childnode>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2175" relation="include">
        </childnode>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2179" relation="include">
        </childnode>
        <childnode refid="2180" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2182" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
      </node>
      <node id="2153">
        <label>core/sbfMw.c</label>
        <link refid="sbf_mw_8c"/>
      </node>
      <node id="2143">
        <label>core/sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="2144" relation="include">
        </childnode>
        <childnode refid="2147" relation="include">
        </childnode>
        <childnode refid="2148" relation="include">
        </childnode>
        <childnode refid="2149" relation="include">
        </childnode>
        <childnode refid="2151" relation="include">
        </childnode>
        <childnode refid="2153" relation="include">
        </childnode>
        <childnode refid="2154" relation="include">
        </childnode>
        <childnode refid="2156" relation="include">
        </childnode>
        <childnode refid="2160" relation="include">
        </childnode>
        <childnode refid="2161" relation="include">
        </childnode>
        <childnode refid="2158" relation="include">
        </childnode>
        <childnode refid="2163" relation="include">
        </childnode>
        <childnode refid="2169" relation="include">
        </childnode>
        <childnode refid="2167" relation="include">
        </childnode>
        <childnode refid="2168" relation="include">
        </childnode>
        <childnode refid="2170" relation="include">
        </childnode>
        <childnode refid="2171" relation="include">
        </childnode>
      </node>
      <node id="2146">
        <label>common/sbfTcpListener.c</label>
        <link refid="sbf_tcp_listener_8c"/>
      </node>
      <node id="2152">
        <label>core/sbfQueue.c</label>
        <link refid="sbf_queue_8c"/>
      </node>
      <node id="2164">
        <label>requestreply/sbfRequestPub.c</label>
        <link refid="sbf_request_pub_8c"/>
      </node>
      <node id="2173">
        <label>requestreply/sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="2163" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sbf_event_8h_1a494548cb11d745b8f5425840061d09ba" prot="public" static="no">
        <name>SBF_EVENT_READ</name>
        <initializer>0x2</initializer>
        <briefdescription>
<para>Event indicating a read operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfEvent.h" line="24" column="9" bodyfile="core/sbfEvent.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_event_8h_1a21f4a3663ea050be7419c3f7cdeaf006" prot="public" static="no">
        <name>SBF_EVENT_WRITE</name>
        <initializer>0x4</initializer>
        <briefdescription>
<para>Event indicating a write operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfEvent.h" line="26" column="9" bodyfile="core/sbfEvent.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sbf_event_8h_1a24da4e6ee40913a2f525332dd05c69e8" prot="public" static="no">
        <type>struct <ref refid="structsbf_event_impl" kindref="compound">sbfEventImpl</ref> *</type>
        <definition>typedef struct sbfEventImpl* sbfEvent</definition>
        <argsstring></argsstring>
        <name>sbfEvent</name>
        <briefdescription>
<para>public event structure </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfEvent.h" line="21" column="1" bodyfile="core/sbfEvent.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="sbf_event_8h_1a6e3644b66167f52db7691dcd1d152c21" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sbfEventCb) (sbfEvent event, int events, void *closure)</definition>
        <argsstring>)(sbfEvent event, int events, void *closure)</argsstring>
        <name>sbfEventCb</name>
        <briefdescription>
<para>Callback function indicating there are events to process. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to events objects. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>number of events. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>closure</parametername>
</parameternamelist>
<parameterdescription>
<para>the data associated to the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfEvent.h" line="34" column="1" bodyfile="core/sbfEvent.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_event_8h_1a67c0591f8cee07af670dd520bcd75648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_event_8h_1a24da4e6ee40913a2f525332dd05c69e8" kindref="member">sbfEvent</ref></type>
        <definition>sbfEvent sbfEvent_create</definition>
        <argsstring>(struct sbfMwThreadImpl *thread, struct sbfQueueImpl *queue, sbfEventCb cb, void *closure, int descriptor, int events)</argsstring>
        <name>sbfEvent_create</name>
        <param>
          <type>struct <ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref> *</type>
          <declname>thread</declname>
        </param>
        <param>
          <type>struct <ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="sbf_event_8h_1a6e3644b66167f52db7691dcd1d152c21" kindref="member">sbfEventCb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <param>
          <type>int</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>events</declname>
        </param>
        <briefdescription>
<para>Returns an event handler with the provided information. Events is one or both of SBF_EVENT_READ and SBF_EVENT_WRITE. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thread</parametername>
</parameternamelist>
<parameterdescription>
<para>the thread handling the reception of events. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>queue where events are stored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>the event&apos;s callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>closure</parametername>
</parameternamelist>
<parameterdescription>
<para>a data to be associated to the event to be used in callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>the descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of events. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an event handler with the provided information. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfEvent.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_event_8h_1aec0d16c84dded19519f2eaf3f8ca8c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfEvent_destroy</definition>
        <argsstring>(sbfEvent event)</argsstring>
        <name>sbfEvent_destroy</name>
        <param>
          <type><ref refid="sbf_event_8h_1a24da4e6ee40913a2f525332dd05c69e8" kindref="member">sbfEvent</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Releases the memory allocated by the given memory handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the event handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core/sbfEvent.h" line="59" column="1" bodyfile="core/sbfEvent.c" bodystart="80" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file declares the event structures and functions for event handling. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>© Copyright 2016 Neueda all rights reserved. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#ifndef<sp/>_SBF_EVENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_EVENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="sbf_event_8h_1a24da4e6ee40913a2f525332dd05c69e8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_event_impl" kindref="compound">sbfEventImpl</ref>*<sp/><ref refid="sbf_event_8h_1a24da4e6ee40913a2f525332dd05c69e8" kindref="member">sbfEvent</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="sbf_event_8h_1a494548cb11d745b8f5425840061d09ba" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_EVENT_READ<sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="sbf_event_8h_1a21f4a3663ea050be7419c3f7cdeaf006" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_EVENT_WRITE<sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="sbf_event_8h_1a6e3644b66167f52db7691dcd1d152c21" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="sbf_event_8h_1a6e3644b66167f52db7691dcd1d152c21" kindref="member">sbfEventCb</ref>)<sp/>(sbfEvent<sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>events,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>.<sp/>*/</highlight></codeline>
<codeline lineno="48"><highlight class="normal">sbfEvent<sp/><ref refid="sbf_event_8h_1a67c0591f8cee07af670dd520bcd75648" kindref="member">sbfEvent_create</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref>*<sp/>thread,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref>*<sp/>queue,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_event_8h_1a6e3644b66167f52db7691dcd1d152c21" kindref="member">sbfEventCb</ref><sp/>cb,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>descriptor,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>events);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_event_8h_1aec0d16c84dded19519f2eaf3f8ca8c40" kindref="member">sbfEvent_destroy</ref><sp/>(sbfEvent<sp/>event);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_EVENT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="core/sbfEvent.h"/>
  </compounddef>
</doxygen>
