<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_tcp_connection_8h" kind="file" language="C++">
    <compoundname>sbfTcpConnection.h</compoundname>
    <includes refid="sbf_buffer_8h" local="yes">sbfBuffer.h</includes>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <includedby refid="sbf_tcp_connection_8c" local="yes">common/sbfTcpConnection.c</includedby>
    <includedby refid="sbf_tcp_listener_8c" local="yes">common/sbfTcpListener.c</includedby>
    <incdepgraph>
      <node id="1535">
        <label>sbfPool.h</label>
        <link refid="sbf_pool_8h"/>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
      </node>
      <node id="1527">
        <label>event.h</label>
      </node>
      <node id="1536">
        <label>sbfAtomic.h</label>
        <link refid="sbf_atomic_8h"/>
        <childnode refid="1525" relation="include">
        </childnode>
      </node>
      <node id="1526">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="1528">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="1529" relation="include">
        </childnode>
      </node>
      <node id="1532">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="1525" relation="include">
        </childnode>
      </node>
      <node id="1524">
        <label>sbfBuffer.h</label>
        <link refid="sbf_buffer_8h"/>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1538" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
      </node>
      <node id="1529">
        <label>sys/types.h</label>
      </node>
      <node id="1539">
        <label>sbfBufferInline.h</label>
        <link refid="sbf_buffer_inline_8h"/>
      </node>
      <node id="1523">
        <label>common/sbfTcpConnection.h</label>
        <link refid="sbf_tcp_connection_8h"/>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
      </node>
      <node id="1538">
        <label>sbfRefCount.h</label>
        <link refid="sbf_ref_count_8h"/>
        <childnode refid="1525" relation="include">
        </childnode>
      </node>
      <node id="1525">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
      </node>
      <node id="1531">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="1530">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="1533">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="1525" relation="include">
        </childnode>
      </node>
      <node id="1534">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="1525" relation="include">
        </childnode>
      </node>
      <node id="1537">
        <label>sbfPoolInline.h</label>
        <link refid="sbf_pool_inline_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1541">
        <label>common/sbfTcpConnection.c</label>
        <link refid="sbf_tcp_connection_8c"/>
      </node>
      <node id="1540">
        <label>common/sbfTcpConnection.h</label>
        <link refid="sbf_tcp_connection_8h"/>
        <childnode refid="1541" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
      </node>
      <node id="1542">
        <label>common/sbfTcpListener.c</label>
        <link refid="sbf_tcp_listener_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" prot="public" static="no">
        <type>struct <ref refid="structsbf_tcp_connection_impl" kindref="compound">sbfTcpConnectionImpl</ref> *</type>
        <definition>typedef struct sbfTcpConnectionImpl* sbfTcpConnection</definition>
        <argsstring></argsstring>
        <name>sbfTcpConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="12" column="1" bodyfile="common/sbfTcpConnection.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="sbf_tcp_connection_8h_1ae204a24bb024d4047c38b1c40f9a46fb" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sbfTcpConnectionReadyCb) (sbfTcpConnection tc, void *closure)</definition>
        <argsstring>)(sbfTcpConnection tc, void *closure)</argsstring>
        <name>sbfTcpConnectionReadyCb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="14" column="1" bodyfile="common/sbfTcpConnection.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="sbf_tcp_connection_8h_1a889c83f2386f8caf26449ea8777e43a0" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sbfTcpConnectionErrorCb) (sbfTcpConnection tc, void *closure)</definition>
        <argsstring>)(sbfTcpConnection tc, void *closure)</argsstring>
        <name>sbfTcpConnectionErrorCb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="15" column="1" bodyfile="common/sbfTcpConnection.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="sbf_tcp_connection_8h_1aea1b0b9f9203fa9f5681271b5e0e2ca4" prot="public" static="no">
        <type>size_t(*</type>
        <definition>typedef size_t(* sbfTcpConnectionReadCb) (sbfTcpConnection tc, void *data, size_t size, void *closure)</definition>
        <argsstring>)(sbfTcpConnection tc, void *data, size_t size, void *closure)</argsstring>
        <name>sbfTcpConnectionReadCb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="18" column="1" bodyfile="common/sbfTcpConnection.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_tcp_connection_8h_1ad2f6cdc25efcb87c6a48cc305ea4398a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" kindref="member">sbfTcpConnection</ref></type>
        <definition>sbfTcpConnection sbfTcpConnection_create</definition>
        <argsstring>(sbfLog log, struct sbfMwThreadImpl *thread, struct sbfQueueImpl *queue, struct sockaddr_in *sin, sbfTcpConnectionReadyCb readyCb, sbfTcpConnectionErrorCb errorCb, sbfTcpConnectionReadCb readCb, void *closure)</argsstring>
        <name>sbfTcpConnection_create</name>
        <param>
          <type><ref refid="sbf_log_8h_1af52e123ee70a148a5492a53d34c16c37" kindref="member">sbfLog</ref></type>
          <declname>log</declname>
        </param>
        <param>
          <type>struct <ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref> *</type>
          <declname>thread</declname>
        </param>
        <param>
          <type>struct <ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>struct sockaddr_in *</type>
          <declname>sin</declname>
        </param>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1ae204a24bb024d4047c38b1c40f9a46fb" kindref="member">sbfTcpConnectionReadyCb</ref></type>
          <declname>readyCb</declname>
        </param>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1a889c83f2386f8caf26449ea8777e43a0" kindref="member">sbfTcpConnectionErrorCb</ref></type>
          <declname>errorCb</declname>
        </param>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1aea1b0b9f9203fa9f5681271b5e0e2ca4" kindref="member">sbfTcpConnectionReadCb</ref></type>
          <declname>readCb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_tcp_connection_8h_1ad28df3d489618e8bbdae2473c46185c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfTcpConnection_destroy</definition>
        <argsstring>(sbfTcpConnection tc)</argsstring>
        <name>sbfTcpConnection_destroy</name>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" kindref="member">sbfTcpConnection</ref></type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="31" column="1" bodyfile="common/sbfTcpConnection.c" bodystart="232" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="sbf_tcp_connection_8h_1aef10e695b3090c63e62060881c36b95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref></type>
        <definition>sbfError sbfTcpConnection_accept</definition>
        <argsstring>(sbfTcpConnection tc, struct sbfMwThreadImpl *thread, struct sbfQueueImpl *queue, sbfTcpConnectionReadyCb readyCb, sbfTcpConnectionErrorCb errorCb, sbfTcpConnectionReadCb readCb, void *closure)</argsstring>
        <name>sbfTcpConnection_accept</name>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" kindref="member">sbfTcpConnection</ref></type>
          <declname>tc</declname>
        </param>
        <param>
          <type>struct <ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref> *</type>
          <declname>thread</declname>
        </param>
        <param>
          <type>struct <ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1ae204a24bb024d4047c38b1c40f9a46fb" kindref="member">sbfTcpConnectionReadyCb</ref></type>
          <declname>readyCb</declname>
        </param>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1a889c83f2386f8caf26449ea8777e43a0" kindref="member">sbfTcpConnectionErrorCb</ref></type>
          <declname>errorCb</declname>
        </param>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1aea1b0b9f9203fa9f5681271b5e0e2ca4" kindref="member">sbfTcpConnectionReadCb</ref></type>
          <declname>readCb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sbf_tcp_connection_8h_1afa66b62f0e78721f20f853501d975bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfTcpConnection_send</definition>
        <argsstring>(sbfTcpConnection tc, const void *data, size_t size)</argsstring>
        <name>sbfTcpConnection_send</name>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" kindref="member">sbfTcpConnection</ref></type>
          <declname>tc</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="41" column="1" bodyfile="common/sbfTcpConnection.c" bodystart="284" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="sbf_tcp_connection_8h_1a36bb97a18db6b8f2fb94b5ee954b7617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfTcpConnection_sendBuffer</definition>
        <argsstring>(sbfTcpConnection tc, sbfBuffer buffer)</argsstring>
        <name>sbfTcpConnection_sendBuffer</name>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" kindref="member">sbfTcpConnection</ref></type>
          <declname>tc</declname>
        </param>
        <param>
          <type><ref refid="sbf_buffer_8h_1a1e025c4644df2171527745712604be3b" kindref="member">sbfBuffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="44" column="1" bodyfile="common/sbfTcpConnection.c" bodystart="290" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="sbf_tcp_connection_8h_1a3df96e0249d292935e801545ac450a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct sockaddr_in *</type>
        <definition>struct sockaddr_in* sbfTcpConnection_getPeer</definition>
        <argsstring>(sbfTcpConnection tc)</argsstring>
        <name>sbfTcpConnection_getPeer</name>
        <param>
          <type><ref refid="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" kindref="member">sbfTcpConnection</ref></type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfTcpConnection.h" line="46" column="1" bodyfile="common/sbfTcpConnection.c" bodystart="302" bodyend="305"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_SBF_TCP_CONNECTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_TCP_CONNECTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_buffer_8h" kindref="compound">sbfBuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_tcp_connection_impl" kindref="compound">sbfTcpConnectionImpl</ref>*<sp/><ref refid="sbf_tcp_connection_8h_1a53a1045ff30759b8b00d4d0449a325d6" kindref="member">sbfTcpConnection</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="sbf_tcp_connection_8h_1ae204a24bb024d4047c38b1c40f9a46fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="sbf_tcp_connection_8h_1ae204a24bb024d4047c38b1c40f9a46fb" kindref="member">sbfTcpConnectionReadyCb</ref>)<sp/>(sbfTcpConnection<sp/>tc,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure);</highlight></codeline>
<codeline lineno="15" refid="sbf_tcp_connection_8h_1a889c83f2386f8caf26449ea8777e43a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="sbf_tcp_connection_8h_1a889c83f2386f8caf26449ea8777e43a0" kindref="member">sbfTcpConnectionErrorCb</ref>)<sp/>(sbfTcpConnection<sp/>tc,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Read<sp/>callback<sp/>should<sp/>return<sp/>how<sp/>much<sp/>of<sp/>buffer<sp/>was<sp/>used.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="sbf_tcp_connection_8h_1aea1b0b9f9203fa9f5681271b5e0e2ca4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>size_t<sp/>(*<ref refid="sbf_tcp_connection_8h_1aea1b0b9f9203fa9f5681271b5e0e2ca4" kindref="member">sbfTcpConnectionReadCb</ref>)<sp/>(sbfTcpConnection<sp/>tc,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">sbfTcpConnection<sp/><ref refid="sbf_tcp_connection_8h_1ad2f6cdc25efcb87c6a48cc305ea4398a" kindref="member">sbfTcpConnection_create</ref><sp/>(<ref refid="structsbf_log_impl" kindref="compound">sbfLog</ref><sp/>log,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref>*<sp/>thread,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref>*<sp/>queue,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr_in*<sp/>sin,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_tcp_connection_8h_1ae204a24bb024d4047c38b1c40f9a46fb" kindref="member">sbfTcpConnectionReadyCb</ref><sp/>readyCb,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_tcp_connection_8h_1a889c83f2386f8caf26449ea8777e43a0" kindref="member">sbfTcpConnectionErrorCb</ref><sp/>errorCb,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_tcp_connection_8h_1aea1b0b9f9203fa9f5681271b5e0e2ca4" kindref="member">sbfTcpConnectionReadCb</ref><sp/>readCb,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_tcp_connection_8h_1ad28df3d489618e8bbdae2473c46185c6" kindref="member">sbfTcpConnection_destroy</ref><sp/>(sbfTcpConnection<sp/>tc);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref><sp/><ref refid="sbf_tcp_connection_8h_1aef10e695b3090c63e62060881c36b95d" kindref="member">sbfTcpConnection_accept</ref><sp/>(sbfTcpConnection<sp/>tc,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_mw_thread_impl" kindref="compound">sbfMwThreadImpl</ref>*<sp/>thread,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_queue_impl" kindref="compound">sbfQueueImpl</ref>*<sp/>queue,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_tcp_connection_8h_1ae204a24bb024d4047c38b1c40f9a46fb" kindref="member">sbfTcpConnectionReadyCb</ref><sp/>readyCb,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_tcp_connection_8h_1a889c83f2386f8caf26449ea8777e43a0" kindref="member">sbfTcpConnectionErrorCb</ref><sp/>errorCb,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_tcp_connection_8h_1aea1b0b9f9203fa9f5681271b5e0e2ca4" kindref="member">sbfTcpConnectionReadCb</ref><sp/>readCb,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_tcp_connection_8h_1afa66b62f0e78721f20f853501d975bed" kindref="member">sbfTcpConnection_send</ref><sp/>(sbfTcpConnection<sp/>tc,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sbf_tcp_connection_8h_1a36bb97a18db6b8f2fb94b5ee954b7617" kindref="member">sbfTcpConnection_sendBuffer</ref><sp/>(sbfTcpConnection<sp/>tc,<sp/><ref refid="sbf_buffer_8h_1a1e025c4644df2171527745712604be3b" kindref="member">sbfBuffer</ref><sp/>buffer);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in*<sp/><ref refid="sbf_tcp_connection_8h_1a3df96e0249d292935e801545ac450a86" kindref="member">sbfTcpConnection_getPeer</ref><sp/>(sbfTcpConnection<sp/>tc);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_TCP_CONNECTION_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="common/sbfTcpConnection.h"/>
  </compounddef>
</doxygen>
