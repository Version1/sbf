<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sysqueue_8h" kind="file" language="C++">
    <compoundname>sysqueue.h</compoundname>
    <includedby refid="sbf_common_8h" local="yes">common/sbfCommon.h</includedby>
    <invincdepgraph>
      <node id="1926">
        <label>common/sbfPool.h</label>
        <link refid="sbf_pool_8h"/>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1958" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
      </node>
      <node id="1994">
        <label>common/sbfNumberString.c</label>
        <link refid="sbf_number_string_8c"/>
      </node>
      <node id="1908">
        <label>common/sbfProperties.c</label>
        <link refid="sbf_properties_8c"/>
      </node>
      <node id="1993">
        <label>common/sbfNumberString.h</label>
        <link refid="sbf_number_string_8h"/>
        <childnode refid="1994" relation="include">
        </childnode>
      </node>
      <node id="1969">
        <label>common/sbfCacheFile.c</label>
        <link refid="sbf_cache_file_8c"/>
      </node>
      <node id="1907">
        <label>common/sbfProperties.h</label>
        <link refid="sbf_properties_8h"/>
        <childnode refid="1908" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1964">
        <label>core/sbfHiResTimerPrivate.h</label>
        <link refid="sbf_hi_res_timer_private_8h"/>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
      </node>
      <node id="1968">
        <label>common/sbfCacheFile.h</label>
        <link refid="sbf_cache_file_8h"/>
        <childnode refid="1969" relation="include">
        </childnode>
      </node>
      <node id="1967">
        <label>requestreply/sbfRequestReplyPrivate.h</label>
        <link refid="sbf_request_reply_private_8h"/>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1946" relation="include">
        </childnode>
        <childnode refid="1947" relation="include">
        </childnode>
      </node>
      <node id="1909">
        <label>core/sbfQueuePrivate.h</label>
        <link refid="sbf_queue_private_8h"/>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
      </node>
      <node id="1935">
        <label>handlers/common/sbfCommonHandler.c</label>
        <link refid="sbf_common_handler_8c"/>
      </node>
      <node id="1940">
        <label>handlers/common/sbfCommonHandler.h</label>
        <link refid="sbf_common_handler_8h"/>
        <childnode refid="1935" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="1920">
        <label>transport/sbfTportWeight.c</label>
        <link refid="sbf_tport_weight_8c"/>
      </node>
      <node id="1947">
        <label>requestreply/sbfRequestSub.c</label>
        <link refid="sbf_request_sub_8c"/>
      </node>
      <node id="1943">
        <label>requestreply/sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="1944" relation="include">
        </childnode>
      </node>
      <node id="1948">
        <label>tools/replier/sbfReplier.c</label>
        <link refid="sbf_replier_8c"/>
      </node>
      <node id="1925">
        <label>common/sbfAtomic.h</label>
        <link refid="sbf_atomic_8h"/>
        <childnode refid="1926" relation="include">
        </childnode>
      </node>
      <node id="1916">
        <label>transport/sbfSub.c</label>
        <link refid="sbf_sub_8c"/>
      </node>
      <node id="1955">
        <label>transport/sbfSub.h</label>
        <link refid="sbf_sub_8h"/>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1917">
        <label>transport/sbfTopic.c</label>
        <link refid="sbf_topic_8c"/>
      </node>
      <node id="2002">
        <label>transport/sbfTopic.h</label>
        <link refid="sbf_topic_8h"/>
        <childnode refid="1944" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1934">
        <label>handlers/common/sbfCommonHandlerPrivate.h</label>
        <link refid="sbf_common_handler_private_8h"/>
        <childnode refid="1935" relation="include">
        </childnode>
      </node>
      <node id="1924">
        <label>common/sbfArguments.c</label>
        <link refid="sbf_arguments_8c"/>
      </node>
      <node id="1923">
        <label>common/sbfArguments.h</label>
        <link refid="sbf_arguments_8h"/>
        <childnode refid="1924" relation="include">
        </childnode>
      </node>
      <node id="1961">
        <label>common/sbfTcpListenerPrivate.h</label>
        <link refid="sbf_tcp_listener_private_8h"/>
        <childnode refid="1931" relation="include">
        </childnode>
      </node>
      <node id="1972">
        <label>common/sbfCommonWin32.c</label>
        <link refid="sbf_common_win32_8c"/>
      </node>
      <node id="1937">
        <label>handlers/udp/sbfUdpHandler.c</label>
        <link refid="sbf_udp_handler_8c"/>
      </node>
      <node id="1936">
        <label>handlers/udp/sbfUdpHandler.h</label>
        <link refid="sbf_udp_handler_8h"/>
        <childnode refid="1937" relation="include">
        </childnode>
      </node>
      <node id="1962">
        <label>core/sbfEventPrivate.h</label>
        <link refid="sbf_event_private_8h"/>
        <childnode refid="1963" relation="include">
        </childnode>
      </node>
      <node id="1951">
        <label>tools/publisher/sbfPublisher.c</label>
        <link refid="sbf_publisher_8c"/>
      </node>
      <node id="1963">
        <label>core/sbfEvent.c</label>
        <link refid="sbf_event_8c"/>
      </node>
      <node id="1998">
        <label>core/sbfEvent.h</label>
        <link refid="sbf_event_8h"/>
        <childnode refid="1963" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
      </node>
      <node id="1913">
        <label>transport/sbfBatch.c</label>
        <link refid="sbf_batch_8c"/>
      </node>
      <node id="1938">
        <label>transport/sbfBatch.h</label>
        <link refid="sbf_batch_8h"/>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1904">
        <label>common/sbfFatal.c</label>
        <link refid="sbf_fatal_8c"/>
      </node>
      <node id="1903">
        <label>common/sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
      <node id="1984">
        <label>common/sbfKeyValue.c</label>
        <link refid="sbf_key_value_8c"/>
      </node>
      <node id="1949">
        <label>tools/requester/sbfRequester.c</label>
        <link refid="sbf_requester_8c"/>
      </node>
      <node id="1983">
        <label>common/sbfKeyValue.h</label>
        <link refid="sbf_key_value_8h"/>
        <childnode refid="1984" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1902">
        <label>common/getopt.c</label>
        <link refid="getopt_8c"/>
      </node>
      <node id="1957">
        <label>common/sbfDeque.c</label>
        <link refid="sbf_deque_8c"/>
      </node>
      <node id="1975">
        <label>common/sbfDeque.h</label>
        <link refid="sbf_deque_8h"/>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
      </node>
      <node id="1928">
        <label>common/sbfBuffer.c</label>
        <link refid="sbf_buffer_8c"/>
      </node>
      <node id="1927">
        <label>common/sbfBuffer.h</label>
        <link refid="sbf_buffer_8h"/>
        <childnode refid="1928" relation="include">
        </childnode>
        <childnode refid="1929" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1938" relation="include">
        </childnode>
        <childnode refid="1954" relation="include">
        </childnode>
        <childnode refid="1955" relation="include">
        </childnode>
      </node>
      <node id="1982">
        <label>common/sbfHugePages.c</label>
        <link refid="sbf_huge_pages_8c"/>
      </node>
      <node id="1956">
        <label>common/sbfDequePrivate.h</label>
        <link refid="sbf_deque_private_8h"/>
        <childnode refid="1957" relation="include">
        </childnode>
      </node>
      <node id="1981">
        <label>common/sbfHugePages.h</label>
        <link refid="sbf_huge_pages_8h"/>
        <childnode refid="1982" relation="include">
        </childnode>
      </node>
      <node id="1910">
        <label>core/sbfHiResTimer.c</label>
        <link refid="sbf_hi_res_timer_8c"/>
      </node>
      <node id="1999">
        <label>core/sbfHiResTimer.h</label>
        <link refid="sbf_hi_res_timer_8h"/>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1910" relation="include">
        </childnode>
      </node>
      <node id="1960">
        <label>common/sbfTcpConnectionPrivate.h</label>
        <link refid="sbf_tcp_connection_private_8h"/>
        <childnode refid="1930" relation="include">
        </childnode>
        <childnode refid="1931" relation="include">
        </childnode>
      </node>
      <node id="1952">
        <label>tools/subscriber/sbfSubscriber.c</label>
        <link refid="sbf_subscriber_8c"/>
      </node>
      <node id="1942">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.c</label>
        <link refid="sbf_tcp_mesh_handler_8c"/>
      </node>
      <node id="1941">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.h</label>
        <link refid="sbf_tcp_mesh_handler_8h"/>
        <childnode refid="1942" relation="include">
        </childnode>
      </node>
      <node id="1915">
        <label>transport/sbfPub.c</label>
        <link refid="sbf_pub_8c"/>
      </node>
      <node id="1954">
        <label>transport/sbfPub.h</label>
        <link refid="sbf_pub_8h"/>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1930">
        <label>common/sbfTcpConnection.c</label>
        <link refid="sbf_tcp_connection_8c"/>
      </node>
      <node id="1980">
        <label>common/sbfInterface.c</label>
        <link refid="sbf_interface_8c"/>
      </node>
      <node id="1965">
        <label>core/sbfTimerPrivate.h</label>
        <link refid="sbf_timer_private_8h"/>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1929">
        <label>common/sbfTcpConnection.h</label>
        <link refid="sbf_tcp_connection_8h"/>
        <childnode refid="1930" relation="include">
        </childnode>
        <childnode refid="1931" relation="include">
        </childnode>
      </node>
      <node id="1979">
        <label>common/sbfInterface.h</label>
        <link refid="sbf_interface_8h"/>
        <childnode refid="1978" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1940" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="1992">
        <label>common/sbfPath.c</label>
        <link refid="sbf_path_8c"/>
      </node>
      <node id="1991">
        <label>common/sbfPath.h</label>
        <link refid="sbf_path_8h"/>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1992" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
      </node>
      <node id="1946">
        <label>requestreply/sbfRequestReply.c</label>
        <link refid="sbf_request_reply_8c"/>
      </node>
      <node id="1959">
        <label>common/sbfRefCount.h</label>
        <link refid="sbf_ref_count_8h"/>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1960" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1962" relation="include">
        </childnode>
        <childnode refid="1964" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1967" relation="include">
        </childnode>
      </node>
      <node id="1944">
        <label>requestreply/sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
        <childnode refid="1945" relation="include">
        </childnode>
        <childnode refid="1946" relation="include">
        </childnode>
        <childnode refid="1947" relation="include">
        </childnode>
        <childnode refid="1948" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
      </node>
      <node id="1987">
        <label>common/sbfLogPrivate.h</label>
        <link refid="sbf_log_private_8h"/>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1914">
        <label>transport/sbfHandler.c</label>
        <link refid="sbf_handler_8c"/>
      </node>
      <node id="1990">
        <label>common/sbfLogFilePrivate.h</label>
        <link refid="sbf_log_file_private_8h"/>
        <childnode refid="1989" relation="include">
        </childnode>
      </node>
      <node id="1953">
        <label>transport/sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1966">
        <label>core/sbfTimer.c</label>
        <link refid="sbf_timer_8c"/>
      </node>
      <node id="2001">
        <label>core/sbfTimer.h</label>
        <link refid="sbf_timer_8h"/>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1901">
        <label>common/sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1921" relation="include">
        </childnode>
        <childnode refid="1923" relation="include">
        </childnode>
        <childnode refid="1925" relation="include">
        </childnode>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1926" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1968" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
        <childnode refid="1979" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1929" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1998" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1999" relation="include">
        </childnode>
        <childnode refid="2000" relation="include">
        </childnode>
        <childnode refid="2001" relation="include">
        </childnode>
        <childnode refid="1944" relation="include">
        </childnode>
        <childnode refid="1943" relation="include">
        </childnode>
        <childnode refid="1950" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1948" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
        <childnode refid="1938" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
        <childnode refid="1954" relation="include">
        </childnode>
        <childnode refid="1955" relation="include">
        </childnode>
        <childnode refid="2002" relation="include">
        </childnode>
        <childnode refid="1953" relation="include">
        </childnode>
      </node>
      <node id="1933">
        <label>common/sbfUdpMulticast.c</label>
        <link refid="sbf_udp_multicast_8c"/>
      </node>
      <node id="1912">
        <label>transport/sbfTportPrivate.h</label>
        <link refid="sbf_tport_private_8h"/>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
        <childnode refid="1916" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1919" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
      </node>
      <node id="1932">
        <label>common/sbfUdpMulticast.h</label>
        <link refid="sbf_udp_multicast_8h"/>
        <childnode refid="1933" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
      </node>
      <node id="1919">
        <label>transport/sbfTportFragments.c</label>
        <link refid="sbf_tport_fragments_8c"/>
      </node>
      <node id="1971">
        <label>common/sbfCommonLinux.c</label>
        <link refid="sbf_common_linux_8c"/>
      </node>
      <node id="1918">
        <label>transport/sbfTport.c</label>
        <link refid="sbf_tport_8c"/>
      </node>
      <node id="1939">
        <label>transport/sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="1940" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
        <childnode refid="1943" relation="include">
        </childnode>
        <childnode refid="1950" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1948" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1953" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
        <childnode refid="1916" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1919" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
      </node>
      <node id="1978">
        <label>common/sbfGuid.c</label>
        <link refid="sbf_guid_8c"/>
      </node>
      <node id="1977">
        <label>common/sbfGuid.h</label>
        <link refid="sbf_guid_8h"/>
        <childnode refid="1978" relation="include">
        </childnode>
        <childnode refid="1967" relation="include">
        </childnode>
      </node>
      <node id="1974">
        <label>common/sbfCsvParser.c</label>
        <link refid="sbf_csv_parser_8c"/>
      </node>
      <node id="1973">
        <label>common/sbfCsvParser.h</label>
        <link refid="sbf_csv_parser_8h"/>
        <childnode refid="1974" relation="include">
        </childnode>
      </node>
      <node id="1900">
        <label>common/sysqueue.h</label>
        <link refid="sysqueue_8h"/>
        <childnode refid="1901" relation="include">
        </childnode>
      </node>
      <node id="1986">
        <label>core/sbfMw.c</label>
        <link refid="sbf_mw_8c"/>
      </node>
      <node id="1985">
        <label>core/sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="1960" relation="include">
        </childnode>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1962" relation="include">
        </childnode>
        <childnode refid="1964" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1986" relation="include">
        </childnode>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1940" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
        <childnode refid="1944" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1948" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1996">
        <label>common/sbfPerfCounter.c</label>
        <link refid="sbf_perf_counter_8c"/>
      </node>
      <node id="1906">
        <label>common/sbfLog.c</label>
        <link refid="sbf_log_8c"/>
      </node>
      <node id="1995">
        <label>common/sbfPerfCounter.h</label>
        <link refid="sbf_perf_counter_8h"/>
        <childnode refid="1996" relation="include">
        </childnode>
        <childnode refid="1964" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
      </node>
      <node id="1931">
        <label>common/sbfTcpListener.c</label>
        <link refid="sbf_tcp_listener_8c"/>
      </node>
      <node id="1905">
        <label>common/sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
      </node>
      <node id="1997">
        <label>common/sbfTcpListener.h</label>
        <link refid="sbf_tcp_listener_8h"/>
        <childnode refid="1931" relation="include">
        </childnode>
      </node>
      <node id="1911">
        <label>core/sbfQueue.c</label>
        <link refid="sbf_queue_8c"/>
      </node>
      <node id="1976">
        <label>transport/sbfBatchPrivate.h</label>
        <link refid="sbf_batch_private_8h"/>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1970">
        <label>common/sbfCommonDarwin.c</label>
        <link refid="sbf_common_darwin_8c"/>
      </node>
      <node id="1922">
        <label>common/sbfMemory.c</label>
        <link refid="sbf_memory_8c"/>
      </node>
      <node id="2000">
        <label>core/sbfQueue.h</label>
        <link refid="sbf_queue_8h"/>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1943" relation="include">
        </childnode>
        <childnode refid="1950" relation="include">
        </childnode>
        <childnode refid="1954" relation="include">
        </childnode>
        <childnode refid="1955" relation="include">
        </childnode>
      </node>
      <node id="1921">
        <label>common/sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1922" relation="include">
        </childnode>
      </node>
      <node id="1989">
        <label>common/sbfLogFile.c</label>
        <link refid="sbf_log_file_8c"/>
      </node>
      <node id="1988">
        <label>common/sbfLogFile.h</label>
        <link refid="sbf_log_file_8h"/>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
      </node>
      <node id="1945">
        <label>requestreply/sbfRequestPub.c</label>
        <link refid="sbf_request_pub_8c"/>
      </node>
      <node id="1950">
        <label>requestreply/sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="1944" relation="include">
        </childnode>
      </node>
      <node id="1958">
        <label>common/sbfPool.c</label>
        <link refid="sbf_pool_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" prot="public" static="no">
        <name>_Q_INVALIDATE</name>
        <param><defname>a</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="88" column="10" bodyfile="common/sysqueue.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ae72219f63b2fe9bce774a64e11404179" prot="public" static="no">
        <name>LIST_HEAD</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>struct name {								\
	struct type *lh_first;	/* first element */			\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="174" column="9" bodyfile="common/sysqueue.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a5d7b8e9f9968d3152a8519cd9a45312e" prot="public" static="no">
        <name>LIST_HEAD_INITIALIZER</name>
        <param><defname>head</defname></param>
        <initializer>{ NULL }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="179" column="9" bodyfile="common/sysqueue.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1aec2ccd0e8c215504508af23f04480be6" prot="public" static="no">
        <name>LIST_ENTRY</name>
        <param><defname>type</defname></param>
        <initializer>struct {								\
	struct type *le_next;	/* next element */			\
	struct type **le_prev;	/* address of previous next element */	\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="182" column="9" bodyfile="common/sysqueue.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a8f223070a7fe7c5f24033e9d8fbeb610" prot="public" static="no">
        <name>LIST_FIRST</name>
        <param><defname>head</defname></param>
        <initializer>((head)-&gt;lh_first)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="191" column="9" bodyfile="common/sysqueue.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a0687dc033d5b408a3883b5bf2bd9a935" prot="public" static="no">
        <name>LIST_END</name>
        <param><defname>head</defname></param>
        <initializer>NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="192" column="9" bodyfile="common/sysqueue.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1af59ab30a8f9a88af86422600c38125cf" prot="public" static="no">
        <name>LIST_EMPTY</name>
        <param><defname>head</defname></param>
        <initializer>(<ref refid="sysqueue_8h_1a8f223070a7fe7c5f24033e9d8fbeb610" kindref="member">LIST_FIRST</ref>(head) == <ref refid="sysqueue_8h_1a0687dc033d5b408a3883b5bf2bd9a935" kindref="member">LIST_END</ref>(head))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="193" column="9" bodyfile="common/sysqueue.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ad150fcc4dc3e0a56600101f1f1065ed5" prot="public" static="no">
        <name>LIST_NEXT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>((elm)-&gt;field.le_next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="194" column="9" bodyfile="common/sysqueue.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ac1543beeb6d9224b60feb7a2703b2a87" prot="public" static="no">
        <name>LIST_FOREACH</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <initializer>for((var) = <ref refid="sysqueue_8h_1a8f223070a7fe7c5f24033e9d8fbeb610" kindref="member">LIST_FIRST</ref>(head);					\
	    (var)!= <ref refid="sysqueue_8h_1a0687dc033d5b408a3883b5bf2bd9a935" kindref="member">LIST_END</ref>(head);					\
	    (var) = <ref refid="sysqueue_8h_1ad150fcc4dc3e0a56600101f1f1065ed5" kindref="member">LIST_NEXT</ref>(var, field))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="196" column="9" bodyfile="common/sysqueue.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a2dd4b5313ff322ed89827dede22589e8" prot="public" static="no">
        <name>LIST_FOREACH_SAFE</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <param><defname>tvar</defname></param>
        <initializer>for ((var) = <ref refid="sysqueue_8h_1a8f223070a7fe7c5f24033e9d8fbeb610" kindref="member">LIST_FIRST</ref>(head);				\
	    (var) &amp;&amp; ((tvar) = <ref refid="sysqueue_8h_1ad150fcc4dc3e0a56600101f1f1065ed5" kindref="member">LIST_NEXT</ref>(var, field), 1);		\
	    (var) = (tvar))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="201" column="9" bodyfile="common/sysqueue.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a304b5b7f7bdcba2793eaba9c890991c3" prot="public" static="no">
        <name>LIST_INIT</name>
        <param><defname>head</defname></param>
        <initializer>do {						\
	<ref refid="sysqueue_8h_1a8f223070a7fe7c5f24033e9d8fbeb610" kindref="member">LIST_FIRST</ref>(head) = <ref refid="sysqueue_8h_1a0687dc033d5b408a3883b5bf2bd9a935" kindref="member">LIST_END</ref>(head);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="209" column="9" bodyfile="common/sysqueue.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1aab62f53d4c94ab67bf7c4dc5c7670f64" prot="public" static="no">
        <name>LIST_INSERT_AFTER</name>
        <param><defname>listelm</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	if (((elm)-&gt;field.le_next = (listelm)-&gt;field.le_next) != NULL)	\
		(listelm)-&gt;field.le_next-&gt;field.le_prev =		\
		    &amp;(elm)-&gt;field.le_next;				\
	(listelm)-&gt;field.le_next = (elm);				\
	(elm)-&gt;field.le_prev = &amp;(listelm)-&gt;field.le_next;		\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="213" column="9" bodyfile="common/sysqueue.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a73d12127b84f84215eb03a4fb20feebb" prot="public" static="no">
        <name>LIST_INSERT_BEFORE</name>
        <param><defname>listelm</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	(elm)-&gt;field.le_prev = (listelm)-&gt;field.le_prev;		\
	(elm)-&gt;field.le_next = (listelm);				\
	*(listelm)-&gt;field.le_prev = (elm);				\
	(listelm)-&gt;field.le_prev = &amp;(elm)-&gt;field.le_next;		\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="221" column="9" bodyfile="common/sysqueue.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ad80d8d658fdb46a9f7cc81cb2ae54885" prot="public" static="no">
        <name>LIST_INSERT_HEAD</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {				\
	if (((elm)-&gt;field.le_next = (head)-&gt;lh_first) != NULL)		\
		(head)-&gt;lh_first-&gt;field.le_prev = &amp;(elm)-&gt;field.le_next;\
	(head)-&gt;lh_first = (elm);					\
	(elm)-&gt;field.le_prev = &amp;(head)-&gt;lh_first;			\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="228" column="9" bodyfile="common/sysqueue.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a4f60a3fedbebc5ef6edded99062dd98d" prot="public" static="no">
        <name>LIST_REMOVE</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {					\
	if ((elm)-&gt;field.le_next != NULL)				\
		(elm)-&gt;field.le_next-&gt;field.le_prev =			\
		    (elm)-&gt;field.le_prev;				\
	*(elm)-&gt;field.le_prev = (elm)-&gt;field.le_next;			\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.le_prev);				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.le_next);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="235" column="9" bodyfile="common/sysqueue.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1af76883409ca9ebd9845a64dc61702250" prot="public" static="no">
        <name>LIST_REPLACE</name>
        <param><defname>elm</defname></param>
        <param><defname>elm2</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {				\
	if (((elm2)-&gt;field.le_next = (elm)-&gt;field.le_next) != NULL)	\
		(elm2)-&gt;field.le_next-&gt;field.le_prev =			\
		    &amp;(elm2)-&gt;field.le_next;				\
	(elm2)-&gt;field.le_prev = (elm)-&gt;field.le_prev;			\
	*(elm2)-&gt;field.le_prev = (elm2);				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.le_prev);				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.le_next);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="244" column="9" bodyfile="common/sysqueue.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1adf0c29c386006b1f32435abe538d4398" prot="public" static="no">
        <name>SIMPLEQ_HEAD</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>struct name {								\
	struct type *sqh_first;	/* first element */			\
	struct type **sqh_last;	/* addr of last next element */		\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="257" column="9" bodyfile="common/sysqueue.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a89444236a1714f59b8e84608f18f6422" prot="public" static="no">
        <name>SIMPLEQ_HEAD_INITIALIZER</name>
        <param><defname>head</defname></param>
        <initializer>{ NULL, &amp;(head).sqh_first }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="263" column="9" bodyfile="common/sysqueue.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1af416c4e9e87270cb7b90152a27b8daa4" prot="public" static="no">
        <name>SIMPLEQ_ENTRY</name>
        <param><defname>type</defname></param>
        <initializer>struct {								\
	struct type *sqe_next;	/* next element */			\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="266" column="9" bodyfile="common/sysqueue.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a8aca010fb5702082a231bb2535e5a945" prot="public" static="no">
        <name>SIMPLEQ_FIRST</name>
        <param><defname>head</defname></param>
        <initializer>((head)-&gt;sqh_first)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="274" column="9" bodyfile="common/sysqueue.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1afb7f731c6fba7aac97b2b446ecd3a2bd" prot="public" static="no">
        <name>SIMPLEQ_END</name>
        <param><defname>head</defname></param>
        <initializer>NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="275" column="9" bodyfile="common/sysqueue.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ac5ae79041999d0acfad3bacf72979b88" prot="public" static="no">
        <name>SIMPLEQ_EMPTY</name>
        <param><defname>head</defname></param>
        <initializer>(<ref refid="sysqueue_8h_1a8aca010fb5702082a231bb2535e5a945" kindref="member">SIMPLEQ_FIRST</ref>(head) == <ref refid="sysqueue_8h_1afb7f731c6fba7aac97b2b446ecd3a2bd" kindref="member">SIMPLEQ_END</ref>(head))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="276" column="9" bodyfile="common/sysqueue.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a15537d2c45c0d176a75601d484b75432" prot="public" static="no">
        <name>SIMPLEQ_NEXT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>((elm)-&gt;field.sqe_next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="277" column="9" bodyfile="common/sysqueue.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a3efcdcb8bdde0bc0d013314ed12426b5" prot="public" static="no">
        <name>SIMPLEQ_FOREACH</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <initializer>for((var) = <ref refid="sysqueue_8h_1a8aca010fb5702082a231bb2535e5a945" kindref="member">SIMPLEQ_FIRST</ref>(head);				\
	    (var) != <ref refid="sysqueue_8h_1afb7f731c6fba7aac97b2b446ecd3a2bd" kindref="member">SIMPLEQ_END</ref>(head);					\
	    (var) = <ref refid="sysqueue_8h_1a15537d2c45c0d176a75601d484b75432" kindref="member">SIMPLEQ_NEXT</ref>(var, field))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="279" column="9" bodyfile="common/sysqueue.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a0bda1c13bc680d3c313aab25886be1eb" prot="public" static="no">
        <name>SIMPLEQ_FOREACH_SAFE</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <param><defname>tvar</defname></param>
        <initializer>for ((var) = <ref refid="sysqueue_8h_1a8aca010fb5702082a231bb2535e5a945" kindref="member">SIMPLEQ_FIRST</ref>(head);				\
	    (var) &amp;&amp; ((tvar) = <ref refid="sysqueue_8h_1a15537d2c45c0d176a75601d484b75432" kindref="member">SIMPLEQ_NEXT</ref>(var, field), 1);		\
	    (var) = (tvar))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="284" column="9" bodyfile="common/sysqueue.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a36c4353aafcd6f7d0dbf74473d761b08" prot="public" static="no">
        <name>SIMPLEQ_INIT</name>
        <param><defname>head</defname></param>
        <initializer>do {						\
	(head)-&gt;sqh_first = NULL;					\
	(head)-&gt;sqh_last = &amp;(head)-&gt;sqh_first;				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="292" column="9" bodyfile="common/sysqueue.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a8ea372a36daedcf8f29d805bbb49bb3f" prot="public" static="no">
        <name>SIMPLEQ_INSERT_HEAD</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	if (((elm)-&gt;field.sqe_next = (head)-&gt;sqh_first) == NULL)	\
		(head)-&gt;sqh_last = &amp;(elm)-&gt;field.sqe_next;		\
	(head)-&gt;sqh_first = (elm);					\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="297" column="9" bodyfile="common/sysqueue.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a3f31b4857ff4ccb0f970ca9d19e133b4" prot="public" static="no">
        <name>SIMPLEQ_INSERT_TAIL</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	(elm)-&gt;field.sqe_next = NULL;					\
	*(head)-&gt;sqh_last = (elm);					\
	(head)-&gt;sqh_last = &amp;(elm)-&gt;field.sqe_next;			\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="303" column="9" bodyfile="common/sysqueue.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a601bd9b7c5fffd4bb8c2d71969b53be2" prot="public" static="no">
        <name>SIMPLEQ_INSERT_AFTER</name>
        <param><defname>head</defname></param>
        <param><defname>listelm</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {		\
	if (((elm)-&gt;field.sqe_next = (listelm)-&gt;field.sqe_next) == NULL)\
		(head)-&gt;sqh_last = &amp;(elm)-&gt;field.sqe_next;		\
	(listelm)-&gt;field.sqe_next = (elm);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="309" column="9" bodyfile="common/sysqueue.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a595ba5db373de6d9e9daba311b1e458d" prot="public" static="no">
        <name>SIMPLEQ_REMOVE_HEAD</name>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	if (((head)-&gt;sqh_first = (head)-&gt;sqh_first-&gt;field.sqe_next) == NULL) \
		(head)-&gt;sqh_last = &amp;(head)-&gt;sqh_first;			\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="315" column="9" bodyfile="common/sysqueue.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1aa82715c946672378f360a8fb9d46c134" prot="public" static="no">
        <name>SIMPLEQ_REMOVE_NEXT</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	if (((elm)-&gt;field.sqe_next = (elm)-&gt;field.sqe_next-&gt;field.sqe_next) \
	    == NULL)							\
		(head)-&gt;sqh_last = &amp;(elm)-&gt;field.sqe_next;		\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="320" column="9" bodyfile="common/sysqueue.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a4abce769a262e090c1f601605b9d6c76" prot="public" static="no">
        <name>TAILQ_HEAD</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>struct name {								\
	struct type *tqh_first;	/* first element */			\
	struct type **tqh_last;	/* addr of last next element */		\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="329" column="9" bodyfile="common/sysqueue.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ac269df7d4126ed9885156cbad2cbf8af" prot="public" static="no">
        <name>TAILQ_HEAD_INITIALIZER</name>
        <param><defname>head</defname></param>
        <initializer>{ NULL, &amp;(head).tqh_first }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="335" column="9" bodyfile="common/sysqueue.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1af71bfd90dc9d00fb03545fe66c67d673" prot="public" static="no">
        <name>TAILQ_ENTRY</name>
        <param><defname>type</defname></param>
        <initializer>struct {								\
	struct type *tqe_next;	/* next element */			\
	struct type **tqe_prev;	/* address of previous next element */	\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="338" column="9" bodyfile="common/sysqueue.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a7d6894360bd1c41e0e6f6d84998c1362" prot="public" static="no">
        <name>TAILQ_FIRST</name>
        <param><defname>head</defname></param>
        <initializer>((head)-&gt;tqh_first)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="347" column="9" bodyfile="common/sysqueue.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a4322b8461a6ab7632435ff4f57bb3a2e" prot="public" static="no">
        <name>TAILQ_END</name>
        <param><defname>head</defname></param>
        <initializer>NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="348" column="9" bodyfile="common/sysqueue.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1abd57fe9bdea6007a602f8c7d61bd5265" prot="public" static="no">
        <name>TAILQ_NEXT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>((elm)-&gt;field.tqe_next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="349" column="9" bodyfile="common/sysqueue.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ac9154a9aebb3c15a3f2356349a1cc14f" prot="public" static="no">
        <name>TAILQ_LAST</name>
        <param><defname>head</defname></param>
        <param><defname>headname</defname></param>
        <initializer>(*(((struct headname *)((head)-&gt;tqh_last))-&gt;tqh_last))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="350" column="9" bodyfile="common/sysqueue.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a524f93a0c21c390683fab4c27e840a10" prot="public" static="no">
        <name>TAILQ_PREV</name>
        <param><defname>elm</defname></param>
        <param><defname>headname</defname></param>
        <param><defname>field</defname></param>
        <initializer>(*(((struct headname *)((elm)-&gt;field.tqe_prev))-&gt;tqh_last))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="353" column="9" bodyfile="common/sysqueue.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ac3c9da7ac712eacbbad5cc54d7a3477e" prot="public" static="no">
        <name>TAILQ_EMPTY</name>
        <param><defname>head</defname></param>
        <initializer>(<ref refid="sysqueue_8h_1a7d6894360bd1c41e0e6f6d84998c1362" kindref="member">TAILQ_FIRST</ref>(head) == <ref refid="sysqueue_8h_1a4322b8461a6ab7632435ff4f57bb3a2e" kindref="member">TAILQ_END</ref>(head))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="355" column="9" bodyfile="common/sysqueue.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a16e5fc168e7f3494d4b1df54447d871e" prot="public" static="no">
        <name>TAILQ_FOREACH</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <initializer>for((var) = <ref refid="sysqueue_8h_1a7d6894360bd1c41e0e6f6d84998c1362" kindref="member">TAILQ_FIRST</ref>(head);					\
	    (var) != <ref refid="sysqueue_8h_1a4322b8461a6ab7632435ff4f57bb3a2e" kindref="member">TAILQ_END</ref>(head);					\
	    (var) = <ref refid="sysqueue_8h_1abd57fe9bdea6007a602f8c7d61bd5265" kindref="member">TAILQ_NEXT</ref>(var, field))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="358" column="9" bodyfile="common/sysqueue.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a2a85f19896399eecd0ebf91cb8176166" prot="public" static="no">
        <name>TAILQ_FOREACH_SAFE</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <param><defname>tvar</defname></param>
        <initializer>for ((var) = <ref refid="sysqueue_8h_1a7d6894360bd1c41e0e6f6d84998c1362" kindref="member">TAILQ_FIRST</ref>(head);					\
	    (var) != <ref refid="sysqueue_8h_1a4322b8461a6ab7632435ff4f57bb3a2e" kindref="member">TAILQ_END</ref>(head) &amp;&amp;					\
	    ((tvar) = <ref refid="sysqueue_8h_1abd57fe9bdea6007a602f8c7d61bd5265" kindref="member">TAILQ_NEXT</ref>(var, field), 1);			\
	    (var) = (tvar))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="363" column="9" bodyfile="common/sysqueue.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1aa7f65c910cd4616fcfa9723c5763b1a5" prot="public" static="no">
        <name>TAILQ_FOREACH_REVERSE</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>headname</defname></param>
        <param><defname>field</defname></param>
        <initializer>for((var) = <ref refid="sysqueue_8h_1ac9154a9aebb3c15a3f2356349a1cc14f" kindref="member">TAILQ_LAST</ref>(head, headname);				\
	    (var) != <ref refid="sysqueue_8h_1a4322b8461a6ab7632435ff4f57bb3a2e" kindref="member">TAILQ_END</ref>(head);					\
	    (var) = <ref refid="sysqueue_8h_1a524f93a0c21c390683fab4c27e840a10" kindref="member">TAILQ_PREV</ref>(var, headname, field))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="370" column="9" bodyfile="common/sysqueue.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1aa7841e4f848e470b9f2bc676473d7a5b" prot="public" static="no">
        <name>TAILQ_FOREACH_REVERSE_SAFE</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>headname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>tvar</defname></param>
        <initializer>for ((var) = <ref refid="sysqueue_8h_1ac9154a9aebb3c15a3f2356349a1cc14f" kindref="member">TAILQ_LAST</ref>(head, headname);			\
	    (var) != <ref refid="sysqueue_8h_1a4322b8461a6ab7632435ff4f57bb3a2e" kindref="member">TAILQ_END</ref>(head) &amp;&amp;					\
	    ((tvar) = <ref refid="sysqueue_8h_1a524f93a0c21c390683fab4c27e840a10" kindref="member">TAILQ_PREV</ref>(var, headname, field), 1);		\
	    (var) = (tvar))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="375" column="9" bodyfile="common/sysqueue.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a449d224023780e46253b83b61e0a50a9" prot="public" static="no">
        <name>TAILQ_INIT</name>
        <param><defname>head</defname></param>
        <initializer>do {						\
	(head)-&gt;tqh_first = NULL;					\
	(head)-&gt;tqh_last = &amp;(head)-&gt;tqh_first;				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="384" column="9" bodyfile="common/sysqueue.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1af0f99e8f322ea4eef2d9deaa505239a6" prot="public" static="no">
        <name>TAILQ_INSERT_HEAD</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	if (((elm)-&gt;field.tqe_next = (head)-&gt;tqh_first) != NULL)	\
		(head)-&gt;tqh_first-&gt;field.tqe_prev =			\
		    &amp;(elm)-&gt;field.tqe_next;				\
	else								\
		(head)-&gt;tqh_last = &amp;(elm)-&gt;field.tqe_next;		\
	(head)-&gt;tqh_first = (elm);					\
	(elm)-&gt;field.tqe_prev = &amp;(head)-&gt;tqh_first;			\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="389" column="9" bodyfile="common/sysqueue.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a512bee16b46f601078c96c776d2648c3" prot="public" static="no">
        <name>TAILQ_INSERT_TAIL</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	(elm)-&gt;field.tqe_next = NULL;					\
	(elm)-&gt;field.tqe_prev = (head)-&gt;tqh_last;			\
	*(head)-&gt;tqh_last = (elm);					\
	(head)-&gt;tqh_last = &amp;(elm)-&gt;field.tqe_next;			\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="399" column="9" bodyfile="common/sysqueue.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1af972e33f5eacef659ee0bf0a13ca518c" prot="public" static="no">
        <name>TAILQ_INSERT_AFTER</name>
        <param><defname>head</defname></param>
        <param><defname>listelm</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {		\
	if (((elm)-&gt;field.tqe_next = (listelm)-&gt;field.tqe_next) != NULL)\
		(elm)-&gt;field.tqe_next-&gt;field.tqe_prev =			\
		    &amp;(elm)-&gt;field.tqe_next;				\
	else								\
		(head)-&gt;tqh_last = &amp;(elm)-&gt;field.tqe_next;		\
	(listelm)-&gt;field.tqe_next = (elm);				\
	(elm)-&gt;field.tqe_prev = &amp;(listelm)-&gt;field.tqe_next;		\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="406" column="9" bodyfile="common/sysqueue.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ac6a41e17dbc7d8df1f8b353a036754ff" prot="public" static="no">
        <name>TAILQ_INSERT_BEFORE</name>
        <param><defname>listelm</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	(elm)-&gt;field.tqe_prev = (listelm)-&gt;field.tqe_prev;		\
	(elm)-&gt;field.tqe_next = (listelm);				\
	*(listelm)-&gt;field.tqe_prev = (elm);				\
	(listelm)-&gt;field.tqe_prev = &amp;(elm)-&gt;field.tqe_next;		\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="416" column="9" bodyfile="common/sysqueue.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1aaae87ca18c28066e1a96221e762d1209" prot="public" static="no">
        <name>TAILQ_REMOVE</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {				\
	if (((elm)-&gt;field.tqe_next) != NULL)				\
		(elm)-&gt;field.tqe_next-&gt;field.tqe_prev =			\
		    (elm)-&gt;field.tqe_prev;				\
	else								\
		(head)-&gt;tqh_last = (elm)-&gt;field.tqe_prev;		\
	*(elm)-&gt;field.tqe_prev = (elm)-&gt;field.tqe_next;			\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.tqe_prev);				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.tqe_next);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="423" column="9" bodyfile="common/sysqueue.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a6c5948aec8d53d42983d92a23b517579" prot="public" static="no">
        <name>TAILQ_REPLACE</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>elm2</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	if (((elm2)-&gt;field.tqe_next = (elm)-&gt;field.tqe_next) != NULL)	\
		(elm2)-&gt;field.tqe_next-&gt;field.tqe_prev =		\
		    &amp;(elm2)-&gt;field.tqe_next;				\
	else								\
		(head)-&gt;tqh_last = &amp;(elm2)-&gt;field.tqe_next;		\
	(elm2)-&gt;field.tqe_prev = (elm)-&gt;field.tqe_prev;			\
	*(elm2)-&gt;field.tqe_prev = (elm2);				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.tqe_prev);				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.tqe_next);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="434" column="9" bodyfile="common/sysqueue.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ac564235b07f0c8c8db2a7957d37300ee" prot="public" static="no">
        <name>CIRCLEQ_HEAD</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>struct name {								\
	struct type *cqh_first;		/* first element */		\
	struct type *cqh_last;		/* last element */		\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="449" column="9" bodyfile="common/sysqueue.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a66bcae453448e43a4233428494aca741" prot="public" static="no">
        <name>CIRCLEQ_HEAD_INITIALIZER</name>
        <param><defname>head</defname></param>
        <initializer>{ <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(&amp;head), <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(&amp;head) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="455" column="9" bodyfile="common/sysqueue.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1abc5774651e7db6bcecf18d2b92259707" prot="public" static="no">
        <name>CIRCLEQ_ENTRY</name>
        <param><defname>type</defname></param>
        <initializer>struct {								\
	struct type *cqe_next;		/* next element */		\
	struct type *cqe_prev;		/* previous element */		\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="458" column="9" bodyfile="common/sysqueue.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ab6bde704fab7206d75cf540048cea723" prot="public" static="no">
        <name>CIRCLEQ_FIRST</name>
        <param><defname>head</defname></param>
        <initializer>((head)-&gt;cqh_first)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="467" column="9" bodyfile="common/sysqueue.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a5e9a63e6896e72acbf0bdbdf45baeb1a" prot="public" static="no">
        <name>CIRCLEQ_LAST</name>
        <param><defname>head</defname></param>
        <initializer>((head)-&gt;cqh_last)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="468" column="9" bodyfile="common/sysqueue.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" prot="public" static="no">
        <name>CIRCLEQ_END</name>
        <param><defname>head</defname></param>
        <initializer>((void *)(head))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="469" column="9" bodyfile="common/sysqueue.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a7d1437823e61cb4941eee6a05705f567" prot="public" static="no">
        <name>CIRCLEQ_NEXT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>((elm)-&gt;field.cqe_next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="470" column="9" bodyfile="common/sysqueue.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ae15b6cb06907211e1e5c621fdf0f4030" prot="public" static="no">
        <name>CIRCLEQ_PREV</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>((elm)-&gt;field.cqe_prev)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="471" column="9" bodyfile="common/sysqueue.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a5612649227a37a22f0b8b6420d5f2c92" prot="public" static="no">
        <name>CIRCLEQ_EMPTY</name>
        <param><defname>head</defname></param>
        <initializer>(<ref refid="sysqueue_8h_1ab6bde704fab7206d75cf540048cea723" kindref="member">CIRCLEQ_FIRST</ref>(head) == <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="472" column="9" bodyfile="common/sysqueue.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ae97f4eb5724477c63699fafea4614b46" prot="public" static="no">
        <name>CIRCLEQ_FOREACH</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <initializer>for((var) = <ref refid="sysqueue_8h_1ab6bde704fab7206d75cf540048cea723" kindref="member">CIRCLEQ_FIRST</ref>(head);				\
	    (var) != <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head);					\
	    (var) = <ref refid="sysqueue_8h_1a7d1437823e61cb4941eee6a05705f567" kindref="member">CIRCLEQ_NEXT</ref>(var, field))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="475" column="9" bodyfile="common/sysqueue.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1af86648dc74cd25049ffb45f792ff5d8c" prot="public" static="no">
        <name>CIRCLEQ_FOREACH_SAFE</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <param><defname>tvar</defname></param>
        <initializer>for ((var) = <ref refid="sysqueue_8h_1ab6bde704fab7206d75cf540048cea723" kindref="member">CIRCLEQ_FIRST</ref>(head);				\
	    (var) != <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head) &amp;&amp;				\
	    ((tvar) = <ref refid="sysqueue_8h_1a7d1437823e61cb4941eee6a05705f567" kindref="member">CIRCLEQ_NEXT</ref>(var, field), 1);			\
	    (var) = (tvar))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="480" column="9" bodyfile="common/sysqueue.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a212ecf8e0e17e1c74603b719cab4a9bc" prot="public" static="no">
        <name>CIRCLEQ_FOREACH_REVERSE</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>field</defname></param>
        <initializer>for((var) = <ref refid="sysqueue_8h_1a5e9a63e6896e72acbf0bdbdf45baeb1a" kindref="member">CIRCLEQ_LAST</ref>(head);					\
	    (var) != <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head);					\
	    (var) = <ref refid="sysqueue_8h_1ae15b6cb06907211e1e5c621fdf0f4030" kindref="member">CIRCLEQ_PREV</ref>(var, field))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="486" column="9" bodyfile="common/sysqueue.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a8171cb37e52482568fb13d573050a0c6" prot="public" static="no">
        <name>CIRCLEQ_FOREACH_REVERSE_SAFE</name>
        <param><defname>var</defname></param>
        <param><defname>head</defname></param>
        <param><defname>headname</defname></param>
        <param><defname>field</defname></param>
        <param><defname>tvar</defname></param>
        <initializer>for ((var) = <ref refid="sysqueue_8h_1a5e9a63e6896e72acbf0bdbdf45baeb1a" kindref="member">CIRCLEQ_LAST</ref>(head, headname);			\
	    (var) != <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head) &amp;&amp; 				\
	    ((tvar) = <ref refid="sysqueue_8h_1ae15b6cb06907211e1e5c621fdf0f4030" kindref="member">CIRCLEQ_PREV</ref>(var, headname, field), 1);		\
	    (var) = (tvar))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="491" column="9" bodyfile="common/sysqueue.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a2c12c697981b6dbe21822ccdfd8decfd" prot="public" static="no">
        <name>CIRCLEQ_INIT</name>
        <param><defname>head</defname></param>
        <initializer>do {						\
	(head)-&gt;cqh_first = <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head);				\
	(head)-&gt;cqh_last = <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="500" column="9" bodyfile="common/sysqueue.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a108b36ff00cbf59efbbf185baac770b4" prot="public" static="no">
        <name>CIRCLEQ_INSERT_AFTER</name>
        <param><defname>head</defname></param>
        <param><defname>listelm</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {		\
	(elm)-&gt;field.cqe_next = (listelm)-&gt;field.cqe_next;		\
	(elm)-&gt;field.cqe_prev = (listelm);				\
	if ((listelm)-&gt;field.cqe_next == <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))		\
		(head)-&gt;cqh_last = (elm);				\
	else								\
		(listelm)-&gt;field.cqe_next-&gt;field.cqe_prev = (elm);	\
	(listelm)-&gt;field.cqe_next = (elm);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="505" column="9" bodyfile="common/sysqueue.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1af5cda165eacfbfe150e86c12baa96089" prot="public" static="no">
        <name>CIRCLEQ_INSERT_BEFORE</name>
        <param><defname>head</defname></param>
        <param><defname>listelm</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {		\
	(elm)-&gt;field.cqe_next = (listelm);				\
	(elm)-&gt;field.cqe_prev = (listelm)-&gt;field.cqe_prev;		\
	if ((listelm)-&gt;field.cqe_prev == <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))		\
		(head)-&gt;cqh_first = (elm);				\
	else								\
		(listelm)-&gt;field.cqe_prev-&gt;field.cqe_next = (elm);	\
	(listelm)-&gt;field.cqe_prev = (elm);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="515" column="9" bodyfile="common/sysqueue.h" bodystart="515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a2826789c50d93610c6c1e2f76651259a" prot="public" static="no">
        <name>CIRCLEQ_INSERT_HEAD</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	(elm)-&gt;field.cqe_next = (head)-&gt;cqh_first;			\
	(elm)-&gt;field.cqe_prev = <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head);			\
	if ((head)-&gt;cqh_last == <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))			\
		(head)-&gt;cqh_last = (elm);				\
	else								\
		(head)-&gt;cqh_first-&gt;field.cqe_prev = (elm);		\
	(head)-&gt;cqh_first = (elm);					\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="525" column="9" bodyfile="common/sysqueue.h" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1aa2b767125267fa26ca10e21fa358008c" prot="public" static="no">
        <name>CIRCLEQ_INSERT_TAIL</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	(elm)-&gt;field.cqe_next = <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head);			\
	(elm)-&gt;field.cqe_prev = (head)-&gt;cqh_last;			\
	if ((head)-&gt;cqh_first == <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))			\
		(head)-&gt;cqh_first = (elm);				\
	else								\
		(head)-&gt;cqh_last-&gt;field.cqe_next = (elm);		\
	(head)-&gt;cqh_last = (elm);					\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="535" column="9" bodyfile="common/sysqueue.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1ae1b066e803ee2f2a3ead6e4c632b7e49" prot="public" static="no">
        <name>CIRCLEQ_REMOVE</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {				\
	if ((elm)-&gt;field.cqe_next == <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))			\
		(head)-&gt;cqh_last = (elm)-&gt;field.cqe_prev;		\
	else								\
		(elm)-&gt;field.cqe_next-&gt;field.cqe_prev =			\
		    (elm)-&gt;field.cqe_prev;				\
	if ((elm)-&gt;field.cqe_prev == <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))			\
		(head)-&gt;cqh_first = (elm)-&gt;field.cqe_next;		\
	else								\
		(elm)-&gt;field.cqe_prev-&gt;field.cqe_next =			\
		    (elm)-&gt;field.cqe_next;				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.cqe_prev);				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.cqe_next);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="545" column="9" bodyfile="common/sysqueue.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysqueue_8h_1a64b29c5e5070783142981b1e364a3c80" prot="public" static="no">
        <name>CIRCLEQ_REPLACE</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>elm2</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	if (((elm2)-&gt;field.cqe_next = (elm)-&gt;field.cqe_next) ==		\
	    <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))						\
		(head).cqh_last = (elm2);				\
	else								\
		(elm2)-&gt;field.cqe_next-&gt;field.cqe_prev = (elm2);	\
	if (((elm2)-&gt;field.cqe_prev = (elm)-&gt;field.cqe_prev) ==		\
	    <ref refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" kindref="member">CIRCLEQ_END</ref>(head))						\
		(head).cqh_first = (elm2);				\
	else								\
		(elm2)-&gt;field.cqe_prev-&gt;field.cqe_next = (elm2);	\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.cqe_prev);				\
	<ref refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" kindref="member">_Q_INVALIDATE</ref>((elm)-&gt;field.cqe_next);				\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sysqueue.h" line="560" column="9" bodyfile="common/sysqueue.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/>$OpenBSD:<sp/>queue.h,v<sp/>1.34<sp/>2011/07/09<sp/>00:19:45<sp/>pirofti<sp/>Exp<sp/>$<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>$NetBSD:<sp/>queue.h,v<sp/>1.11<sp/>1996/05/16<sp/>05:17:14<sp/>mycroft<sp/>Exp<sp/>$<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1991,<sp/>1993</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Regents<sp/>of<sp/>the<sp/>University<sp/>of<sp/>California.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>University<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>REGENTS<sp/>AND<sp/>CONTRIBUTORS<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>REGENTS<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>@(#)queue.h<sp/>8.5<sp/>(Berkeley)<sp/>8/20/94</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SYS_QUEUE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SYS_QUEUE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>defines<sp/>five<sp/>types<sp/>of<sp/>data<sp/>structures:<sp/>singly-linked<sp/>lists,<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>lists,<sp/>simple<sp/>queues,<sp/>tail<sp/>queues,<sp/>and<sp/>circular<sp/>queues.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>A<sp/>singly-linked<sp/>list<sp/>is<sp/>headed<sp/>by<sp/>a<sp/>single<sp/>forward<sp/>pointer.<sp/>The<sp/>elements</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>are<sp/>singly<sp/>linked<sp/>for<sp/>minimum<sp/>space<sp/>and<sp/>pointer<sp/>manipulation<sp/>overhead<sp/>at</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>the<sp/>expense<sp/>of<sp/>O(n)<sp/>removal<sp/>for<sp/>arbitrary<sp/>elements.<sp/>New<sp/>elements<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>added<sp/>to<sp/>the<sp/>list<sp/>after<sp/>an<sp/>existing<sp/>element<sp/>or<sp/>at<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Elements<sp/>being<sp/>removed<sp/>from<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list<sp/>should<sp/>use<sp/>the<sp/>explicit</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>macro<sp/>for<sp/>this<sp/>purpose<sp/>for<sp/>optimum<sp/>efficiency.<sp/>A<sp/>singly-linked<sp/>list<sp/>may</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>only<sp/>be<sp/>traversed<sp/>in<sp/>the<sp/>forward<sp/>direction.<sp/><sp/>Singly-linked<sp/>lists<sp/>are<sp/>ideal</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>for<sp/>applications<sp/>with<sp/>large<sp/>datasets<sp/>and<sp/>few<sp/>or<sp/>no<sp/>removals<sp/>or<sp/>for</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>implementing<sp/>a<sp/>LIFO<sp/>queue.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>A<sp/>list<sp/>is<sp/>headed<sp/>by<sp/>a<sp/>single<sp/>forward<sp/>pointer<sp/>(or<sp/>an<sp/>array<sp/>of<sp/>forward</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>pointers<sp/>for<sp/>a<sp/>hash<sp/>table<sp/>header).<sp/>The<sp/>elements<sp/>are<sp/>doubly<sp/>linked</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>so<sp/>that<sp/>an<sp/>arbitrary<sp/>element<sp/>can<sp/>be<sp/>removed<sp/>without<sp/>a<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>traverse<sp/>the<sp/>list.<sp/>New<sp/>elements<sp/>can<sp/>be<sp/>added<sp/>to<sp/>the<sp/>list<sp/>before</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>or<sp/>after<sp/>an<sp/>existing<sp/>element<sp/>or<sp/>at<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list.<sp/>A<sp/>list</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>may<sp/>only<sp/>be<sp/>traversed<sp/>in<sp/>the<sp/>forward<sp/>direction.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>A<sp/>simple<sp/>queue<sp/>is<sp/>headed<sp/>by<sp/>a<sp/>pair<sp/>of<sp/>pointers,<sp/>one<sp/>the<sp/>head<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>list<sp/>and<sp/>the<sp/>other<sp/>to<sp/>the<sp/>tail<sp/>of<sp/>the<sp/>list.<sp/>The<sp/>elements<sp/>are<sp/>singly</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>linked<sp/>to<sp/>save<sp/>space,<sp/>so<sp/>elements<sp/>can<sp/>only<sp/>be<sp/>removed<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>head<sp/>of<sp/>the<sp/>list.<sp/>New<sp/>elements<sp/>can<sp/>be<sp/>added<sp/>to<sp/>the<sp/>list<sp/>before<sp/>or<sp/>after</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>an<sp/>existing<sp/>element,<sp/>at<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list,<sp/>or<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>list.<sp/>A<sp/>simple<sp/>queue<sp/>may<sp/>only<sp/>be<sp/>traversed<sp/>in<sp/>the<sp/>forward<sp/>direction.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>A<sp/>tail<sp/>queue<sp/>is<sp/>headed<sp/>by<sp/>a<sp/>pair<sp/>of<sp/>pointers,<sp/>one<sp/>to<sp/>the<sp/>head<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>list<sp/>and<sp/>the<sp/>other<sp/>to<sp/>the<sp/>tail<sp/>of<sp/>the<sp/>list.<sp/>The<sp/>elements<sp/>are<sp/>doubly</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>linked<sp/>so<sp/>that<sp/>an<sp/>arbitrary<sp/>element<sp/>can<sp/>be<sp/>removed<sp/>without<sp/>a<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>traverse<sp/>the<sp/>list.<sp/>New<sp/>elements<sp/>can<sp/>be<sp/>added<sp/>to<sp/>the<sp/>list<sp/>before<sp/>or</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>after<sp/>an<sp/>existing<sp/>element,<sp/>at<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list,<sp/>or<sp/>at<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>the<sp/>list.<sp/>A<sp/>tail<sp/>queue<sp/>may<sp/>be<sp/>traversed<sp/>in<sp/>either<sp/>direction.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>A<sp/>circle<sp/>queue<sp/>is<sp/>headed<sp/>by<sp/>a<sp/>pair<sp/>of<sp/>pointers,<sp/>one<sp/>to<sp/>the<sp/>head<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>list<sp/>and<sp/>the<sp/>other<sp/>to<sp/>the<sp/>tail<sp/>of<sp/>the<sp/>list.<sp/>The<sp/>elements<sp/>are<sp/>doubly</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>linked<sp/>so<sp/>that<sp/>an<sp/>arbitrary<sp/>element<sp/>can<sp/>be<sp/>removed<sp/>without<sp/>a<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>traverse<sp/>the<sp/>list.<sp/>New<sp/>elements<sp/>can<sp/>be<sp/>added<sp/>to<sp/>the<sp/>list<sp/>before<sp/>or<sp/>after</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>an<sp/>existing<sp/>element,<sp/>at<sp/>the<sp/>head<sp/>of<sp/>the<sp/>list,<sp/>or<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>A<sp/>circle<sp/>queue<sp/>may<sp/>be<sp/>traversed<sp/>in<sp/>either<sp/>direction,<sp/>but<sp/>has<sp/>a<sp/>more</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>complex<sp/>end<sp/>of<sp/>list<sp/>detection.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>For<sp/>details<sp/>on<sp/>the<sp/>use<sp/>of<sp/>these<sp/>macros,<sp/>see<sp/>the<sp/>queue(3)<sp/>manual<sp/>page.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QUEUE_MACRO_DEBUG)<sp/>||<sp/>(defined(_KERNEL)<sp/>&amp;&amp;<sp/>defined(DIAGNOSTIC))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Q_INVALIDATE(a)<sp/>(a)<sp/>=<sp/>((void<sp/>*)-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="sysqueue_8h_1a628c2134ca520da4fdb6a53d27930977" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Q_INVALIDATE(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>use<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>Singly-linked<sp/>List<sp/>definitions.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_HEAD(name,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor">struct<sp/>name<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*slh_first;<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_HEAD_INITIALIZER(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>NULL<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_ENTRY(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor">struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*sle_next;<sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>Singly-linked<sp/>List<sp/>access<sp/>methods.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_FIRST(head)<sp/><sp/><sp/>((head)-&gt;slh_first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_END(head)<sp/><sp/><sp/><sp/><sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_EMPTY(head)<sp/><sp/><sp/>(SLIST_FIRST(head)<sp/>==<sp/>SLIST_END(head))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_NEXT(elm,<sp/>field)<sp/><sp/>((elm)-&gt;field.sle_next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_FOREACH(var,<sp/>head,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for((var)<sp/>=<sp/>SLIST_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>SLIST_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>SLIST_NEXT(var,<sp/>field))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_FOREACH_SAFE(var,<sp/>head,<sp/>field,<sp/>tvar)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((var)<sp/>=<sp/>SLIST_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>&amp;&amp;<sp/>((tvar)<sp/>=<sp/>SLIST_NEXT(var,<sp/>field),<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>(tvar))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_FOREACH_PREVPTR(var,<sp/>varp,<sp/>head,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((varp)<sp/>=<sp/>&amp;SLIST_FIRST((head));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((var)<sp/>=<sp/>*(varp))<sp/>!=<sp/>SLIST_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(varp)<sp/>=<sp/>&amp;SLIST_NEXT((var),<sp/>field))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>Singly-linked<sp/>List<sp/>functions.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_INIT(head)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SLIST_FIRST(head)<sp/>=<sp/>SLIST_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_INSERT_AFTER(slistelm,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.sle_next<sp/>=<sp/>(slistelm)-&gt;field.sle_next;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(slistelm)-&gt;field.sle_next<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_INSERT_HEAD(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.sle_next<sp/>=<sp/>(head)-&gt;slh_first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;slh_first<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_REMOVE_NEXT(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.sle_next<sp/>=<sp/>(elm)-&gt;field.sle_next-&gt;field.sle_next;<sp/><sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_REMOVE_HEAD(head,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;slh_first<sp/>=<sp/>(head)-&gt;slh_first-&gt;field.sle_next;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLIST_REMOVE(head,<sp/>elm,<sp/>type,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((head)-&gt;slh_first<sp/>==<sp/>(elm))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SLIST_REMOVE_HEAD((head),<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*curelm<sp/>=<sp/>(head)-&gt;slh_first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(curelm-&gt;field.sle_next<sp/>!=<sp/>(elm))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curelm<sp/>=<sp/>curelm-&gt;field.sle_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curelm-&gt;field.sle_next<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curelm-&gt;field.sle_next-&gt;field.sle_next;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.sle_next);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>List<sp/>definitions.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="sysqueue_8h_1ae72219f63b2fe9bce774a64e11404179" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_HEAD(name,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor">struct<sp/>name<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*lh_first;<sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="sysqueue_8h_1a5d7b8e9f9968d3152a8519cd9a45312e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_HEAD_INITIALIZER(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>NULL<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="sysqueue_8h_1aec2ccd0e8c215504508af23f04480be6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_ENTRY(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor">struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*le_next;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>**le_prev;<sp/><sp/></highlight><highlight class="comment">/*<sp/>address<sp/>of<sp/>previous<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>List<sp/>access<sp/>methods</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="sysqueue_8h_1a8f223070a7fe7c5f24033e9d8fbeb610" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_FIRST(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((head)-&gt;lh_first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="sysqueue_8h_1a0687dc033d5b408a3883b5bf2bd9a935" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_END(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="sysqueue_8h_1af59ab30a8f9a88af86422600c38125cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_EMPTY(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LIST_FIRST(head)<sp/>==<sp/>LIST_END(head))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="sysqueue_8h_1ad150fcc4dc3e0a56600101f1f1065ed5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_NEXT(elm,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((elm)-&gt;field.le_next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="sysqueue_8h_1ac1543beeb6d9224b60feb7a2703b2a87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_FOREACH(var,<sp/>head,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for((var)<sp/>=<sp/>LIST_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)!=<sp/>LIST_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>LIST_NEXT(var,<sp/>field))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="sysqueue_8h_1a2dd4b5313ff322ed89827dede22589e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_FOREACH_SAFE(var,<sp/>head,<sp/>field,<sp/>tvar)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((var)<sp/>=<sp/>LIST_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>&amp;&amp;<sp/>((tvar)<sp/>=<sp/>LIST_NEXT(var,<sp/>field),<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>(tvar))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>List<sp/>functions.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="sysqueue_8h_1a304b5b7f7bdcba2793eaba9c890991c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_INIT(head)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LIST_FIRST(head)<sp/>=<sp/>LIST_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="sysqueue_8h_1aab62f53d4c94ab67bf7c4dc5c7670f64" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_INSERT_AFTER(listelm,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm)-&gt;field.le_next<sp/>=<sp/>(listelm)-&gt;field.le_next)<sp/>!=<sp/>NULL)<sp/><sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(listelm)-&gt;field.le_next-&gt;field.le_prev<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(elm)-&gt;field.le_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(listelm)-&gt;field.le_next<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.le_prev<sp/>=<sp/>&amp;(listelm)-&gt;field.le_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="sysqueue_8h_1a73d12127b84f84215eb03a4fb20feebb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_INSERT_BEFORE(listelm,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.le_prev<sp/>=<sp/>(listelm)-&gt;field.le_prev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.le_next<sp/>=<sp/>(listelm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(listelm)-&gt;field.le_prev<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(listelm)-&gt;field.le_prev<sp/>=<sp/>&amp;(elm)-&gt;field.le_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="sysqueue_8h_1ad80d8d658fdb46a9f7cc81cb2ae54885" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_INSERT_HEAD(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm)-&gt;field.le_next<sp/>=<sp/>(head)-&gt;lh_first)<sp/>!=<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;lh_first-&gt;field.le_prev<sp/>=<sp/>&amp;(elm)-&gt;field.le_next;\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;lh_first<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.le_prev<sp/>=<sp/>&amp;(head)-&gt;lh_first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="sysqueue_8h_1a4f60a3fedbebc5ef6edded99062dd98d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_REMOVE(elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((elm)-&gt;field.le_next<sp/>!=<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.le_next-&gt;field.le_prev<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.le_prev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(elm)-&gt;field.le_prev<sp/>=<sp/>(elm)-&gt;field.le_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.le_prev);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.le_next);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="sysqueue_8h_1af76883409ca9ebd9845a64dc61702250" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIST_REPLACE(elm,<sp/>elm2,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm2)-&gt;field.le_next<sp/>=<sp/>(elm)-&gt;field.le_next)<sp/>!=<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm2)-&gt;field.le_next-&gt;field.le_prev<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(elm2)-&gt;field.le_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm2)-&gt;field.le_prev<sp/>=<sp/>(elm)-&gt;field.le_prev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(elm2)-&gt;field.le_prev<sp/>=<sp/>(elm2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.le_prev);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.le_next);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>Simple<sp/>queue<sp/>definitions.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="sysqueue_8h_1adf0c29c386006b1f32435abe538d4398" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_HEAD(name,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor">struct<sp/>name<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*sqh_first;<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>**sqh_last;<sp/></highlight><highlight class="comment">/*<sp/>addr<sp/>of<sp/>last<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="sysqueue_8h_1a89444236a1714f59b8e84608f18f6422" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_HEAD_INITIALIZER(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>NULL,<sp/>&amp;(head).sqh_first<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="sysqueue_8h_1af416c4e9e87270cb7b90152a27b8daa4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_ENTRY(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor">struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*sqe_next;<sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>Simple<sp/>queue<sp/>access<sp/>methods.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="sysqueue_8h_1a8aca010fb5702082a231bb2535e5a945" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_FIRST(head)<sp/><sp/><sp/><sp/><sp/>((head)-&gt;sqh_first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="sysqueue_8h_1afb7f731c6fba7aac97b2b446ecd3a2bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_END(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="sysqueue_8h_1ac5ae79041999d0acfad3bacf72979b88" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_EMPTY(head)<sp/><sp/><sp/><sp/><sp/>(SIMPLEQ_FIRST(head)<sp/>==<sp/>SIMPLEQ_END(head))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="sysqueue_8h_1a15537d2c45c0d176a75601d484b75432" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_NEXT(elm,<sp/>field)<sp/><sp/><sp/><sp/>((elm)-&gt;field.sqe_next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="sysqueue_8h_1a3efcdcb8bdde0bc0d013314ed12426b5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_FOREACH(var,<sp/>head,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for((var)<sp/>=<sp/>SIMPLEQ_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>SIMPLEQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>SIMPLEQ_NEXT(var,<sp/>field))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="sysqueue_8h_1a0bda1c13bc680d3c313aab25886be1eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_FOREACH_SAFE(var,<sp/>head,<sp/>field,<sp/>tvar)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((var)<sp/>=<sp/>SIMPLEQ_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>&amp;&amp;<sp/>((tvar)<sp/>=<sp/>SIMPLEQ_NEXT(var,<sp/>field),<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>(tvar))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>Simple<sp/>queue<sp/>functions.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="sysqueue_8h_1a36c4353aafcd6f7d0dbf74473d761b08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_INIT(head)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sqh_first<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sqh_last<sp/>=<sp/>&amp;(head)-&gt;sqh_first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="sysqueue_8h_1a8ea372a36daedcf8f29d805bbb49bb3f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_INSERT_HEAD(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm)-&gt;field.sqe_next<sp/>=<sp/>(head)-&gt;sqh_first)<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;sqh_last<sp/>=<sp/>&amp;(elm)-&gt;field.sqe_next;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sqh_first<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="sysqueue_8h_1a3f31b4857ff4ccb0f970ca9d19e133b4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_INSERT_TAIL(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.sqe_next<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(head)-&gt;sqh_last<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sqh_last<sp/>=<sp/>&amp;(elm)-&gt;field.sqe_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="sysqueue_8h_1a601bd9b7c5fffd4bb8c2d71969b53be2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_INSERT_AFTER(head,<sp/>listelm,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm)-&gt;field.sqe_next<sp/>=<sp/>(listelm)-&gt;field.sqe_next)<sp/>==<sp/>NULL)\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;sqh_last<sp/>=<sp/>&amp;(elm)-&gt;field.sqe_next;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(listelm)-&gt;field.sqe_next<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="sysqueue_8h_1a595ba5db373de6d9e9daba311b1e458d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_REMOVE_HEAD(head,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((head)-&gt;sqh_first<sp/>=<sp/>(head)-&gt;sqh_first-&gt;field.sqe_next)<sp/>==<sp/>NULL)<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;sqh_last<sp/>=<sp/>&amp;(head)-&gt;sqh_first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="sysqueue_8h_1aa82715c946672378f360a8fb9d46c134" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLEQ_REMOVE_NEXT(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm)-&gt;field.sqe_next<sp/>=<sp/>(elm)-&gt;field.sqe_next-&gt;field.sqe_next)<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;sqh_last<sp/>=<sp/>&amp;(elm)-&gt;field.sqe_next;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>Tail<sp/>queue<sp/>definitions.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="sysqueue_8h_1a4abce769a262e090c1f601605b9d6c76" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_HEAD(name,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor">struct<sp/>name<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*tqh_first;<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>**tqh_last;<sp/></highlight><highlight class="comment">/*<sp/>addr<sp/>of<sp/>last<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="sysqueue_8h_1ac269df7d4126ed9885156cbad2cbf8af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_HEAD_INITIALIZER(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>NULL,<sp/>&amp;(head).tqh_first<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="sysqueue_8h_1af71bfd90dc9d00fb03545fe66c67d673" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_ENTRY(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor">struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*tqe_next;<sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>**tqe_prev;<sp/></highlight><highlight class="comment">/*<sp/>address<sp/>of<sp/>previous<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>tail<sp/>queue<sp/>access<sp/>methods<sp/></highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="sysqueue_8h_1a7d6894360bd1c41e0e6f6d84998c1362" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_FIRST(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((head)-&gt;tqh_first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="sysqueue_8h_1a4322b8461a6ab7632435ff4f57bb3a2e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_END(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="sysqueue_8h_1abd57fe9bdea6007a602f8c7d61bd5265" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_NEXT(elm,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/>((elm)-&gt;field.tqe_next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="sysqueue_8h_1ac9154a9aebb3c15a3f2356349a1cc14f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_LAST(head,<sp/>headname)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(*(((struct<sp/>headname<sp/>*)((head)-&gt;tqh_last))-&gt;tqh_last))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>XXX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="sysqueue_8h_1a524f93a0c21c390683fab4c27e840a10" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_PREV(elm,<sp/>headname,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(*(((struct<sp/>headname<sp/>*)((elm)-&gt;field.tqe_prev))-&gt;tqh_last))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="sysqueue_8h_1ac3c9da7ac712eacbbad5cc54d7a3477e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_EMPTY(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(TAILQ_FIRST(head)<sp/>==<sp/>TAILQ_END(head))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="sysqueue_8h_1a16e5fc168e7f3494d4b1df54447d871e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_FOREACH(var,<sp/>head,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for((var)<sp/>=<sp/>TAILQ_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>TAILQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>TAILQ_NEXT(var,<sp/>field))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="sysqueue_8h_1a2a85f19896399eecd0ebf91cb8176166" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_FOREACH_SAFE(var,<sp/>head,<sp/>field,<sp/>tvar)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((var)<sp/>=<sp/>TAILQ_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>TAILQ_END(head)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tvar)<sp/>=<sp/>TAILQ_NEXT(var,<sp/>field),<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>(tvar))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="sysqueue_8h_1aa7f65c910cd4616fcfa9723c5763b1a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_FOREACH_REVERSE(var,<sp/>head,<sp/>headname,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for((var)<sp/>=<sp/>TAILQ_LAST(head,<sp/>headname);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>TAILQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>TAILQ_PREV(var,<sp/>headname,<sp/>field))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="sysqueue_8h_1aa7841e4f848e470b9f2bc676473d7a5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_FOREACH_REVERSE_SAFE(var,<sp/>head,<sp/>headname,<sp/>field,<sp/>tvar)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((var)<sp/>=<sp/>TAILQ_LAST(head,<sp/>headname);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>TAILQ_END(head)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tvar)<sp/>=<sp/>TAILQ_PREV(var,<sp/>headname,<sp/>field),<sp/>1);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>(tvar))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>Tail<sp/>queue<sp/>functions.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="sysqueue_8h_1a449d224023780e46253b83b61e0a50a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_INIT(head)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;tqh_first<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;tqh_last<sp/>=<sp/>&amp;(head)-&gt;tqh_first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="sysqueue_8h_1af0f99e8f322ea4eef2d9deaa505239a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_INSERT_HEAD(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm)-&gt;field.tqe_next<sp/>=<sp/>(head)-&gt;tqh_first)<sp/>!=<sp/>NULL)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;tqh_first-&gt;field.tqe_prev<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(elm)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;tqh_last<sp/>=<sp/>&amp;(elm)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;tqh_first<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_prev<sp/>=<sp/>&amp;(head)-&gt;tqh_first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="sysqueue_8h_1a512bee16b46f601078c96c776d2648c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_INSERT_TAIL(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_next<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_prev<sp/>=<sp/>(head)-&gt;tqh_last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(head)-&gt;tqh_last<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;tqh_last<sp/>=<sp/>&amp;(elm)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="sysqueue_8h_1af972e33f5eacef659ee0bf0a13ca518c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_INSERT_AFTER(head,<sp/>listelm,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm)-&gt;field.tqe_next<sp/>=<sp/>(listelm)-&gt;field.tqe_next)<sp/>!=<sp/>NULL)\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_next-&gt;field.tqe_prev<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(elm)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;tqh_last<sp/>=<sp/>&amp;(elm)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(listelm)-&gt;field.tqe_next<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_prev<sp/>=<sp/>&amp;(listelm)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="sysqueue_8h_1ac6a41e17dbc7d8df1f8b353a036754ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_INSERT_BEFORE(listelm,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_prev<sp/>=<sp/>(listelm)-&gt;field.tqe_prev;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_next<sp/>=<sp/>(listelm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(listelm)-&gt;field.tqe_prev<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(listelm)-&gt;field.tqe_prev<sp/>=<sp/>&amp;(elm)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="sysqueue_8h_1aaae87ca18c28066e1a96221e762d1209" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_REMOVE(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm)-&gt;field.tqe_next)<sp/>!=<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_next-&gt;field.tqe_prev<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.tqe_prev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;tqh_last<sp/>=<sp/>(elm)-&gt;field.tqe_prev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(elm)-&gt;field.tqe_prev<sp/>=<sp/>(elm)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.tqe_prev);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.tqe_next);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="sysqueue_8h_1a6c5948aec8d53d42983d92a23b517579" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILQ_REPLACE(head,<sp/>elm,<sp/>elm2,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm2)-&gt;field.tqe_next<sp/>=<sp/>(elm)-&gt;field.tqe_next)<sp/>!=<sp/>NULL)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm2)-&gt;field.tqe_next-&gt;field.tqe_prev<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(elm2)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;tqh_last<sp/>=<sp/>&amp;(elm2)-&gt;field.tqe_next;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm2)-&gt;field.tqe_prev<sp/>=<sp/>(elm)-&gt;field.tqe_prev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(elm2)-&gt;field.tqe_prev<sp/>=<sp/>(elm2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.tqe_prev);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.tqe_next);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>Circular<sp/>queue<sp/>definitions.</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="sysqueue_8h_1ac564235b07f0c8c8db2a7957d37300ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_HEAD(name,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor">struct<sp/>name<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*cqh_first;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*cqh_last;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>last<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="sysqueue_8h_1a66bcae453448e43a4233428494aca741" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_HEAD_INITIALIZER(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>CIRCLEQ_END(&amp;head),<sp/>CIRCLEQ_END(&amp;head)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="sysqueue_8h_1abc5774651e7db6bcecf18d2b92259707" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_ENTRY(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor">struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*cqe_next;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*cqe_prev;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>previous<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*<sp/>Circular<sp/>queue<sp/>access<sp/>methods<sp/></highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="sysqueue_8h_1ab6bde704fab7206d75cf540048cea723" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_FIRST(head)<sp/><sp/><sp/><sp/><sp/>((head)-&gt;cqh_first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="sysqueue_8h_1a5e9a63e6896e72acbf0bdbdf45baeb1a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_LAST(head)<sp/><sp/><sp/><sp/><sp/><sp/>((head)-&gt;cqh_last)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="sysqueue_8h_1ad5e0f98453ebaf5e7435b3cd393b8e36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_END(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void<sp/>*)(head))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="sysqueue_8h_1a7d1437823e61cb4941eee6a05705f567" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_NEXT(elm,<sp/>field)<sp/><sp/><sp/><sp/>((elm)-&gt;field.cqe_next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="sysqueue_8h_1ae15b6cb06907211e1e5c621fdf0f4030" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_PREV(elm,<sp/>field)<sp/><sp/><sp/><sp/>((elm)-&gt;field.cqe_prev)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="sysqueue_8h_1a5612649227a37a22f0b8b6420d5f2c92" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_EMPTY(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(CIRCLEQ_FIRST(head)<sp/>==<sp/>CIRCLEQ_END(head))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="sysqueue_8h_1ae97f4eb5724477c63699fafea4614b46" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_FOREACH(var,<sp/>head,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for((var)<sp/>=<sp/>CIRCLEQ_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>CIRCLEQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>CIRCLEQ_NEXT(var,<sp/>field))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="sysqueue_8h_1af86648dc74cd25049ffb45f792ff5d8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_FOREACH_SAFE(var,<sp/>head,<sp/>field,<sp/>tvar)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((var)<sp/>=<sp/>CIRCLEQ_FIRST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>CIRCLEQ_END(head)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tvar)<sp/>=<sp/>CIRCLEQ_NEXT(var,<sp/>field),<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>(tvar))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="sysqueue_8h_1a212ecf8e0e17e1c74603b719cab4a9bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_FOREACH_REVERSE(var,<sp/>head,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for((var)<sp/>=<sp/>CIRCLEQ_LAST(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>CIRCLEQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>CIRCLEQ_PREV(var,<sp/>field))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="sysqueue_8h_1a8171cb37e52482568fb13d573050a0c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_FOREACH_REVERSE_SAFE(var,<sp/>head,<sp/>headname,<sp/>field,<sp/>tvar)<sp/><sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((var)<sp/>=<sp/>CIRCLEQ_LAST(head,<sp/>headname);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>!=<sp/>CIRCLEQ_END(head)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tvar)<sp/>=<sp/>CIRCLEQ_PREV(var,<sp/>headname,<sp/>field),<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(var)<sp/>=<sp/>(tvar))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/>Circular<sp/>queue<sp/>functions.</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="sysqueue_8h_1a2c12c697981b6dbe21822ccdfd8decfd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_INIT(head)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;cqh_first<sp/>=<sp/>CIRCLEQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;cqh_last<sp/>=<sp/>CIRCLEQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="sysqueue_8h_1a108b36ff00cbf59efbbf185baac770b4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_INSERT_AFTER(head,<sp/>listelm,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_next<sp/>=<sp/>(listelm)-&gt;field.cqe_next;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_prev<sp/>=<sp/>(listelm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((listelm)-&gt;field.cqe_next<sp/>==<sp/>CIRCLEQ_END(head))<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;cqh_last<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(listelm)-&gt;field.cqe_next-&gt;field.cqe_prev<sp/>=<sp/>(elm);<sp/><sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(listelm)-&gt;field.cqe_next<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="sysqueue_8h_1af5cda165eacfbfe150e86c12baa96089" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_INSERT_BEFORE(head,<sp/>listelm,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_next<sp/>=<sp/>(listelm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_prev<sp/>=<sp/>(listelm)-&gt;field.cqe_prev;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((listelm)-&gt;field.cqe_prev<sp/>==<sp/>CIRCLEQ_END(head))<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;cqh_first<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(listelm)-&gt;field.cqe_prev-&gt;field.cqe_next<sp/>=<sp/>(elm);<sp/><sp/>\</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(listelm)-&gt;field.cqe_prev<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="523"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="sysqueue_8h_1a2826789c50d93610c6c1e2f76651259a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_INSERT_HEAD(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="526"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_next<sp/>=<sp/>(head)-&gt;cqh_first;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_prev<sp/>=<sp/>CIRCLEQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="528"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((head)-&gt;cqh_last<sp/>==<sp/>CIRCLEQ_END(head))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;cqh_last<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;cqh_first-&gt;field.cqe_prev<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;cqh_first<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="sysqueue_8h_1aa2b767125267fa26ca10e21fa358008c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_INSERT_TAIL(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="536"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_next<sp/>=<sp/>CIRCLEQ_END(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="537"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_prev<sp/>=<sp/>(head)-&gt;cqh_last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="538"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((head)-&gt;cqh_first<sp/>==<sp/>CIRCLEQ_END(head))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;cqh_first<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;cqh_last-&gt;field.cqe_next<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;cqh_last<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="sysqueue_8h_1ae1b066e803ee2f2a3ead6e4c632b7e49" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_REMOVE(head,<sp/>elm,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((elm)-&gt;field.cqe_next<sp/>==<sp/>CIRCLEQ_END(head))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;cqh_last<sp/>=<sp/>(elm)-&gt;field.cqe_prev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_next-&gt;field.cqe_prev<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_prev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((elm)-&gt;field.cqe_prev<sp/>==<sp/>CIRCLEQ_END(head))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;cqh_first<sp/>=<sp/>(elm)-&gt;field.cqe_next;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_prev-&gt;field.cqe_next<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.cqe_next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.cqe_prev);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.cqe_next);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="558"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="sysqueue_8h_1a64b29c5e5070783142981b1e364a3c80" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CIRCLEQ_REPLACE(head,<sp/>elm,<sp/>elm2,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm2)-&gt;field.cqe_next<sp/>=<sp/>(elm)-&gt;field.cqe_next)<sp/>==<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CIRCLEQ_END(head))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="563"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head).cqh_last<sp/>=<sp/>(elm2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm2)-&gt;field.cqe_next-&gt;field.cqe_prev<sp/>=<sp/>(elm2);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((elm2)-&gt;field.cqe_prev<sp/>=<sp/>(elm)-&gt;field.cqe_prev)<sp/>==<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CIRCLEQ_END(head))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head).cqh_first<sp/>=<sp/>(elm2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm2)-&gt;field.cqe_prev-&gt;field.cqe_next<sp/>=<sp/>(elm2);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="571"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.cqe_prev);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_Q_INVALIDATE((elm)-&gt;field.cqe_next);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>!_SYS_QUEUE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="common/sysqueue.h"/>
  </compounddef>
</doxygen>
