<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_deque_8c" kind="file" language="C++">
    <compoundname>sbfDeque.c</compoundname>
    <includes refid="sbf_deque_8h" local="yes">sbfDeque.h</includes>
    <includes refid="sbf_deque_private_8h" local="yes">sbfDequePrivate.h</includes>
    <incdepgraph>
      <node id="531">
        <label>sbfPool.h</label>
        <link refid="sbf_pool_8h"/>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
      </node>
      <node id="522">
        <label>event.h</label>
      </node>
      <node id="532">
        <label>sbfAtomic.h</label>
        <link refid="sbf_atomic_8h"/>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="523">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
      <node id="527">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
      <node id="518">
        <label>common/sbfDeque.c</label>
        <link refid="sbf_deque_8c"/>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
      </node>
      <node id="519">
        <label>sbfDeque.h</label>
        <link refid="sbf_deque_8h"/>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
      <node id="530">
        <label>sbfDequePrivate.h</label>
        <link refid="sbf_deque_private_8h"/>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="524">
        <label>sys/types.h</label>
      </node>
      <node id="520">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="526">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="525">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="528">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
      <node id="529">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
      <node id="533">
        <label>sbfPoolInline.h</label>
        <link refid="sbf_pool_inline_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_deque_8c_1a5afb200f08bb44f3a3190848405d7501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></type>
        <definition>sbfDeque sbfDeque_create</definition>
        <argsstring>(void)</argsstring>
        <name>sbfDeque_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfDeque.c" line="5" column="1" bodyfile="common/sbfDeque.c" bodystart="5" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="sbf_deque_8c_1afe27711d3c7feb5c35bb09af6f460b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfDeque_destroy</definition>
        <argsstring>(sbfDeque dq)</argsstring>
        <name>sbfDeque_destroy</name>
        <param>
          <type><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfDeque.c" line="17" column="1" bodyfile="common/sbfDeque.c" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="sbf_deque_8c_1a930e84316ec17a80ce06143280df0c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfDeque_pushBack</definition>
        <argsstring>(sbfDeque dq, void *vp)</argsstring>
        <name>sbfDeque_pushBack</name>
        <param>
          <type><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></type>
          <declname>dq</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfDeque.c" line="24" column="1" bodyfile="common/sbfDeque.c" bodystart="24" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="sbf_deque_8c_1a8ee20374d183a5abb343defbfaab2519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfDeque_pushFront</definition>
        <argsstring>(sbfDeque dq, void *vp)</argsstring>
        <name>sbfDeque_pushFront</name>
        <param>
          <type><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></type>
          <declname>dq</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfDeque.c" line="34" column="1" bodyfile="common/sbfDeque.c" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="sbf_deque_8c_1af8e0bf33a9f1df2c8a27759ca46e15d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* sbfDeque_popBack</definition>
        <argsstring>(sbfDeque dq)</argsstring>
        <name>sbfDeque_popBack</name>
        <param>
          <type><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfDeque.c" line="44" column="1" bodyfile="common/sbfDeque.c" bodystart="44" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="sbf_deque_8c_1aebba170a8ca8e2228bda5a27419e8616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* sbfDeque_popFront</definition>
        <argsstring>(sbfDeque dq)</argsstring>
        <name>sbfDeque_popFront</name>
        <param>
          <type><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfDeque.c" line="61" column="1" bodyfile="common/sbfDeque.c" bodystart="61" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="sbf_deque_8c_1a8e00563176158afd65e7dd8277f5ad74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* sbfDeque_back</definition>
        <argsstring>(sbfDeque dq)</argsstring>
        <name>sbfDeque_back</name>
        <param>
          <type><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfDeque.c" line="78" column="1" bodyfile="common/sbfDeque.c" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="sbf_deque_8c_1abd1c1b0ba11e913e20b1503ee42ef705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* sbfDeque_front</definition>
        <argsstring>(sbfDeque dq)</argsstring>
        <name>sbfDeque_front</name>
        <param>
          <type><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfDeque.c" line="87" column="1" bodyfile="common/sbfDeque.c" bodystart="87" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_deque_8h" kindref="compound">sbfDeque.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_deque_private_8h" kindref="compound">sbfDequePrivate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref></highlight></codeline>
<codeline lineno="5" refid="sbf_deque_8h_1a5afb200f08bb44f3a3190848405d7501" refkind="member"><highlight class="normal"><ref refid="sbf_deque_8c_1a5afb200f08bb44f3a3190848405d7501" kindref="member">sbfDeque_create</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref><sp/>dq;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>dq<sp/>=<sp/><ref refid="sbf_memory_8h_1ade8988c3fcdbca51eb623eb5f7ad5150" kindref="member">xcalloc</ref><sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*dq);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>dq-&gt;mPool<sp/>=<sp/><ref refid="sbf_pool_8h_1af6cdf81e4347a1af78ce801f7e8def71" kindref="member">sbfPool_create</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsbf_deque_item_impl" kindref="compound">sbfDequeItemImpl</ref>));</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1a449d224023780e46253b83b61e0a50a9" kindref="member">TAILQ_INIT</ref><sp/>(&amp;dq-&gt;mList);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dq;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="sbf_deque_8h_1afe27711d3c7feb5c35bb09af6f460b89" refkind="member"><highlight class="normal"><ref refid="sbf_deque_8c_1afe27711d3c7feb5c35bb09af6f460b89" kindref="member">sbfDeque_destroy</ref><sp/>(<ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref><sp/>dq)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_pool_8c_1aa642928717354dd1f50a38ef13d92c3a" kindref="member">sbfPool_destroy</ref><sp/>(dq-&gt;mPool);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(dq);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="sbf_deque_8h_1a930e84316ec17a80ce06143280df0c4a" refkind="member"><highlight class="normal"><ref refid="sbf_deque_8c_1a930e84316ec17a80ce06143280df0c4a" kindref="member">sbfDeque_pushBack</ref><sp/>(<ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref><sp/>dq,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vp)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_deque_item_impl" kindref="compound">sbfDequeItem</ref><sp/>dqe;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>dqe<sp/>=<sp/>sbfPool_get<sp/>(dq-&gt;mPool);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>dqe-&gt;<ref refid="structsbf_deque_item_impl_1a9d9b888919e154fe1cfccaeee1ef2e5b" kindref="member">mPointer</ref><sp/>=<sp/>vp;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1a512bee16b46f601078c96c776d2648c3" kindref="member">TAILQ_INSERT_TAIL</ref><sp/>(&amp;dq-&gt;mList,<sp/>dqe,<sp/>mListEntry);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="sbf_deque_8h_1a8ee20374d183a5abb343defbfaab2519" refkind="member"><highlight class="normal"><ref refid="sbf_deque_8c_1a8ee20374d183a5abb343defbfaab2519" kindref="member">sbfDeque_pushFront</ref><sp/>(<ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref><sp/>dq,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vp)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_deque_item_impl" kindref="compound">sbfDequeItem</ref><sp/>dqe;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>dqe<sp/>=<sp/>sbfPool_get<sp/>(dq-&gt;mPool);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>dqe-&gt;<ref refid="structsbf_deque_item_impl_1a9d9b888919e154fe1cfccaeee1ef2e5b" kindref="member">mPointer</ref><sp/>=<sp/>vp;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1af0f99e8f322ea4eef2d9deaa505239a6" kindref="member">TAILQ_INSERT_HEAD</ref><sp/>(&amp;dq-&gt;mList,<sp/>dqe,<sp/>mListEntry);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="44" refid="sbf_deque_8h_1af8e0bf33a9f1df2c8a27759ca46e15d9" refkind="member"><highlight class="normal"><ref refid="sbf_deque_8c_1af8e0bf33a9f1df2c8a27759ca46e15d9" kindref="member">sbfDeque_popBack</ref><sp/>(<ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref><sp/>dq)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_deque_item_impl" kindref="compound">sbfDequeItem</ref><sp/>dqe;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>dqe<sp/>=<sp/><ref refid="sysqueue_8h_1ac9154a9aebb3c15a3f2356349a1cc14f" kindref="member">TAILQ_LAST</ref><sp/>(&amp;dq-&gt;mList,<sp/>sbfDequeItemListImpl);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dqe<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>vp<sp/>=<sp/>dqe-&gt;<ref refid="structsbf_deque_item_impl_1a9d9b888919e154fe1cfccaeee1ef2e5b" kindref="member">mPointer</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1aaae87ca18c28066e1a96221e762d1209" kindref="member">TAILQ_REMOVE</ref><sp/>(&amp;dq-&gt;mList,<sp/>dqe,<sp/>mListEntry);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPool_put<sp/>(dqe);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vp;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="61" refid="sbf_deque_8h_1aebba170a8ca8e2228bda5a27419e8616" refkind="member"><highlight class="normal"><ref refid="sbf_deque_8c_1aebba170a8ca8e2228bda5a27419e8616" kindref="member">sbfDeque_popFront</ref><sp/>(<ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref><sp/>dq)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_deque_item_impl" kindref="compound">sbfDequeItem</ref><sp/>dqe;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>dqe<sp/>=<sp/><ref refid="sysqueue_8h_1a7d6894360bd1c41e0e6f6d84998c1362" kindref="member">TAILQ_FIRST</ref><sp/>(&amp;dq-&gt;mList);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dqe<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>vp<sp/>=<sp/>dqe-&gt;<ref refid="structsbf_deque_item_impl_1a9d9b888919e154fe1cfccaeee1ef2e5b" kindref="member">mPointer</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1aaae87ca18c28066e1a96221e762d1209" kindref="member">TAILQ_REMOVE</ref><sp/>(&amp;dq-&gt;mList,<sp/>dqe,<sp/>mListEntry);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfPool_put<sp/>(dqe);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vp;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="78" refid="sbf_deque_8h_1a8e00563176158afd65e7dd8277f5ad74" refkind="member"><highlight class="normal"><ref refid="sbf_deque_8c_1a8e00563176158afd65e7dd8277f5ad74" kindref="member">sbfDeque_back</ref><sp/>(<ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref><sp/>dq)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_deque_item_impl" kindref="compound">sbfDequeItem</ref><sp/>dqe;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>dqe<sp/>=<sp/><ref refid="sysqueue_8h_1ac9154a9aebb3c15a3f2356349a1cc14f" kindref="member">TAILQ_LAST</ref><sp/>(&amp;dq-&gt;mList,<sp/>sbfDequeItemListImpl);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dqe-&gt;<ref refid="structsbf_deque_item_impl_1a9d9b888919e154fe1cfccaeee1ef2e5b" kindref="member">mPointer</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="87" refid="sbf_deque_8h_1abd1c1b0ba11e913e20b1503ee42ef705" refkind="member"><highlight class="normal"><ref refid="sbf_deque_8c_1abd1c1b0ba11e913e20b1503ee42ef705" kindref="member">sbfDeque_front</ref><sp/>(<ref refid="sbf_deque_8h_1ab1a7c953633e35a799196f8e2ac7a564" kindref="member">sbfDeque</ref><sp/>dq)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_deque_item_impl" kindref="compound">sbfDequeItem</ref><sp/>dqe;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>dqe<sp/>=<sp/><ref refid="sysqueue_8h_1a7d6894360bd1c41e0e6f6d84998c1362" kindref="member">TAILQ_FIRST</ref><sp/>(&amp;dq-&gt;mList);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dqe-&gt;<ref refid="structsbf_deque_item_impl_1a9d9b888919e154fe1cfccaeee1ef2e5b" kindref="member">mPointer</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="common/sbfDeque.c"/>
  </compounddef>
</doxygen>
