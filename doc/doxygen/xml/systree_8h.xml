<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="systree_8h" kind="file" language="C++">
    <compoundname>systree.h</compoundname>
    <includedby refid="sbf_common_8h" local="yes">common/sbfCommon.h</includedby>
    <invincdepgraph>
      <node id="2030">
        <label>common/sbfPool.h</label>
        <link refid="sbf_pool_8h"/>
        <childnode refid="2031" relation="include">
        </childnode>
        <childnode refid="2060" relation="include">
        </childnode>
        <childnode refid="2062" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
      </node>
      <node id="2098">
        <label>common/sbfNumberString.c</label>
        <link refid="sbf_number_string_8c"/>
      </node>
      <node id="2012">
        <label>common/sbfProperties.c</label>
        <link refid="sbf_properties_8c"/>
      </node>
      <node id="2097">
        <label>common/sbfNumberString.h</label>
        <link refid="sbf_number_string_8h"/>
        <childnode refid="2098" relation="include">
        </childnode>
      </node>
      <node id="2073">
        <label>common/sbfCacheFile.c</label>
        <link refid="sbf_cache_file_8c"/>
      </node>
      <node id="2011">
        <label>common/sbfProperties.h</label>
        <link refid="sbf_properties_8h"/>
        <childnode refid="2012" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
        <childnode refid="2016" relation="include">
        </childnode>
      </node>
      <node id="2068">
        <label>core/sbfHiResTimerPrivate.h</label>
        <link refid="sbf_hi_res_timer_private_8h"/>
        <childnode refid="2014" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
      </node>
      <node id="2072">
        <label>common/sbfCacheFile.h</label>
        <link refid="sbf_cache_file_8h"/>
        <childnode refid="2073" relation="include">
        </childnode>
      </node>
      <node id="2071">
        <label>requestreply/sbfRequestReplyPrivate.h</label>
        <link refid="sbf_request_reply_private_8h"/>
        <childnode refid="2049" relation="include">
        </childnode>
        <childnode refid="2050" relation="include">
        </childnode>
        <childnode refid="2051" relation="include">
        </childnode>
      </node>
      <node id="2013">
        <label>core/sbfQueuePrivate.h</label>
        <link refid="sbf_queue_private_8h"/>
        <childnode refid="2014" relation="include">
        </childnode>
        <childnode refid="2015" relation="include">
        </childnode>
      </node>
      <node id="2039">
        <label>handlers/common/sbfCommonHandler.c</label>
        <link refid="sbf_common_handler_8c"/>
      </node>
      <node id="2044">
        <label>handlers/common/sbfCommonHandler.h</label>
        <link refid="sbf_common_handler_8h"/>
        <childnode refid="2039" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
      </node>
      <node id="2024">
        <label>transport/sbfTportWeight.c</label>
        <link refid="sbf_tport_weight_8c"/>
      </node>
      <node id="2051">
        <label>requestreply/sbfRequestSub.c</label>
        <link refid="sbf_request_sub_8c"/>
      </node>
      <node id="2047">
        <label>requestreply/sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="2048" relation="include">
        </childnode>
      </node>
      <node id="2052">
        <label>tools/replier/sbfReplier.c</label>
        <link refid="sbf_replier_8c"/>
      </node>
      <node id="2029">
        <label>common/sbfAtomic.h</label>
        <link refid="sbf_atomic_8h"/>
        <childnode refid="2030" relation="include">
        </childnode>
      </node>
      <node id="2020">
        <label>transport/sbfSub.c</label>
        <link refid="sbf_sub_8c"/>
      </node>
      <node id="2059">
        <label>transport/sbfSub.h</label>
        <link refid="sbf_sub_8h"/>
        <childnode refid="2043" relation="include">
        </childnode>
      </node>
      <node id="2021">
        <label>transport/sbfTopic.c</label>
        <link refid="sbf_topic_8c"/>
      </node>
      <node id="2106">
        <label>transport/sbfTopic.h</label>
        <link refid="sbf_topic_8h"/>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2043" relation="include">
        </childnode>
      </node>
      <node id="2038">
        <label>handlers/common/sbfCommonHandlerPrivate.h</label>
        <link refid="sbf_common_handler_private_8h"/>
        <childnode refid="2039" relation="include">
        </childnode>
      </node>
      <node id="2028">
        <label>common/sbfArguments.c</label>
        <link refid="sbf_arguments_8c"/>
      </node>
      <node id="2027">
        <label>common/sbfArguments.h</label>
        <link refid="sbf_arguments_8h"/>
        <childnode refid="2028" relation="include">
        </childnode>
      </node>
      <node id="2065">
        <label>common/sbfTcpListenerPrivate.h</label>
        <link refid="sbf_tcp_listener_private_8h"/>
        <childnode refid="2035" relation="include">
        </childnode>
      </node>
      <node id="2076">
        <label>common/sbfCommonWin32.c</label>
        <link refid="sbf_common_win32_8c"/>
      </node>
      <node id="2041">
        <label>handlers/udp/sbfUdpHandler.c</label>
        <link refid="sbf_udp_handler_8c"/>
      </node>
      <node id="2040">
        <label>handlers/udp/sbfUdpHandler.h</label>
        <link refid="sbf_udp_handler_8h"/>
        <childnode refid="2041" relation="include">
        </childnode>
      </node>
      <node id="2066">
        <label>core/sbfEventPrivate.h</label>
        <link refid="sbf_event_private_8h"/>
        <childnode refid="2067" relation="include">
        </childnode>
      </node>
      <node id="2055">
        <label>tools/publisher/sbfPublisher.c</label>
        <link refid="sbf_publisher_8c"/>
      </node>
      <node id="2067">
        <label>core/sbfEvent.c</label>
        <link refid="sbf_event_8c"/>
      </node>
      <node id="2102">
        <label>core/sbfEvent.h</label>
        <link refid="sbf_event_8h"/>
        <childnode refid="2067" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
      </node>
      <node id="2017">
        <label>transport/sbfBatch.c</label>
        <link refid="sbf_batch_8c"/>
      </node>
      <node id="2042">
        <label>transport/sbfBatch.h</label>
        <link refid="sbf_batch_8h"/>
        <childnode refid="2043" relation="include">
        </childnode>
      </node>
      <node id="2008">
        <label>common/sbfFatal.c</label>
        <link refid="sbf_fatal_8c"/>
      </node>
      <node id="2007">
        <label>common/sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="2008" relation="include">
        </childnode>
      </node>
      <node id="2088">
        <label>common/sbfKeyValue.c</label>
        <link refid="sbf_key_value_8c"/>
      </node>
      <node id="2053">
        <label>tools/requester/sbfRequester.c</label>
        <link refid="sbf_requester_8c"/>
      </node>
      <node id="2087">
        <label>common/sbfKeyValue.h</label>
        <link refid="sbf_key_value_8h"/>
        <childnode refid="2088" relation="include">
        </childnode>
        <childnode refid="2011" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2016" relation="include">
        </childnode>
      </node>
      <node id="2006">
        <label>common/getopt.c</label>
        <link refid="getopt_8c"/>
      </node>
      <node id="2061">
        <label>common/sbfDeque.c</label>
        <link refid="sbf_deque_8c"/>
      </node>
      <node id="2079">
        <label>common/sbfDeque.h</label>
        <link refid="sbf_deque_8h"/>
        <childnode refid="2061" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
      </node>
      <node id="2032">
        <label>common/sbfBuffer.c</label>
        <link refid="sbf_buffer_8c"/>
      </node>
      <node id="2031">
        <label>common/sbfBuffer.h</label>
        <link refid="sbf_buffer_8h"/>
        <childnode refid="2032" relation="include">
        </childnode>
        <childnode refid="2033" relation="include">
        </childnode>
        <childnode refid="2036" relation="include">
        </childnode>
        <childnode refid="2042" relation="include">
        </childnode>
        <childnode refid="2058" relation="include">
        </childnode>
        <childnode refid="2059" relation="include">
        </childnode>
      </node>
      <node id="2086">
        <label>common/sbfHugePages.c</label>
        <link refid="sbf_huge_pages_8c"/>
      </node>
      <node id="2060">
        <label>common/sbfDequePrivate.h</label>
        <link refid="sbf_deque_private_8h"/>
        <childnode refid="2061" relation="include">
        </childnode>
      </node>
      <node id="2085">
        <label>common/sbfHugePages.h</label>
        <link refid="sbf_huge_pages_8h"/>
        <childnode refid="2086" relation="include">
        </childnode>
      </node>
      <node id="2014">
        <label>core/sbfHiResTimer.c</label>
        <link refid="sbf_hi_res_timer_8c"/>
      </node>
      <node id="2103">
        <label>core/sbfHiResTimer.h</label>
        <link refid="sbf_hi_res_timer_8h"/>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2014" relation="include">
        </childnode>
      </node>
      <node id="2064">
        <label>common/sbfTcpConnectionPrivate.h</label>
        <link refid="sbf_tcp_connection_private_8h"/>
        <childnode refid="2034" relation="include">
        </childnode>
        <childnode refid="2035" relation="include">
        </childnode>
      </node>
      <node id="2056">
        <label>tools/subscriber/sbfSubscriber.c</label>
        <link refid="sbf_subscriber_8c"/>
      </node>
      <node id="2046">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.c</label>
        <link refid="sbf_tcp_mesh_handler_8c"/>
      </node>
      <node id="2045">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.h</label>
        <link refid="sbf_tcp_mesh_handler_8h"/>
        <childnode refid="2046" relation="include">
        </childnode>
      </node>
      <node id="2019">
        <label>transport/sbfPub.c</label>
        <link refid="sbf_pub_8c"/>
      </node>
      <node id="2058">
        <label>transport/sbfPub.h</label>
        <link refid="sbf_pub_8h"/>
        <childnode refid="2043" relation="include">
        </childnode>
      </node>
      <node id="2034">
        <label>common/sbfTcpConnection.c</label>
        <link refid="sbf_tcp_connection_8c"/>
      </node>
      <node id="2084">
        <label>common/sbfInterface.c</label>
        <link refid="sbf_interface_8c"/>
      </node>
      <node id="2069">
        <label>core/sbfTimerPrivate.h</label>
        <link refid="sbf_timer_private_8h"/>
        <childnode refid="2070" relation="include">
        </childnode>
      </node>
      <node id="2033">
        <label>common/sbfTcpConnection.h</label>
        <link refid="sbf_tcp_connection_8h"/>
        <childnode refid="2034" relation="include">
        </childnode>
        <childnode refid="2035" relation="include">
        </childnode>
      </node>
      <node id="2083">
        <label>common/sbfInterface.h</label>
        <link refid="sbf_interface_8h"/>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2044" relation="include">
        </childnode>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
      </node>
      <node id="2096">
        <label>common/sbfPath.c</label>
        <link refid="sbf_path_8c"/>
      </node>
      <node id="2095">
        <label>common/sbfPath.h</label>
        <link refid="sbf_path_8h"/>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2011" relation="include">
        </childnode>
      </node>
      <node id="2050">
        <label>requestreply/sbfRequestReply.c</label>
        <link refid="sbf_request_reply_8c"/>
      </node>
      <node id="2063">
        <label>common/sbfRefCount.h</label>
        <link refid="sbf_ref_count_8h"/>
        <childnode refid="2031" relation="include">
        </childnode>
        <childnode refid="2064" relation="include">
        </childnode>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
        <childnode refid="2071" relation="include">
        </childnode>
      </node>
      <node id="2048">
        <label>requestreply/sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
        <childnode refid="2049" relation="include">
        </childnode>
        <childnode refid="2050" relation="include">
        </childnode>
        <childnode refid="2051" relation="include">
        </childnode>
        <childnode refid="2052" relation="include">
        </childnode>
        <childnode refid="2053" relation="include">
        </childnode>
      </node>
      <node id="2091">
        <label>common/sbfLogPrivate.h</label>
        <link refid="sbf_log_private_8h"/>
        <childnode refid="2010" relation="include">
        </childnode>
      </node>
      <node id="2018">
        <label>transport/sbfHandler.c</label>
        <link refid="sbf_handler_8c"/>
      </node>
      <node id="2094">
        <label>common/sbfLogFilePrivate.h</label>
        <link refid="sbf_log_file_private_8h"/>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2057">
        <label>transport/sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
        <childnode refid="2016" relation="include">
        </childnode>
      </node>
      <node id="2070">
        <label>core/sbfTimer.c</label>
        <link refid="sbf_timer_8c"/>
      </node>
      <node id="2105">
        <label>core/sbfTimer.h</label>
        <link refid="sbf_timer_8h"/>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
      </node>
      <node id="2005">
        <label>common/sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="2006" relation="include">
        </childnode>
        <childnode refid="2007" relation="include">
        </childnode>
        <childnode refid="2009" relation="include">
        </childnode>
        <childnode refid="2025" relation="include">
        </childnode>
        <childnode refid="2027" relation="include">
        </childnode>
        <childnode refid="2029" relation="include">
        </childnode>
        <childnode refid="2031" relation="include">
        </childnode>
        <childnode refid="2030" relation="include">
        </childnode>
        <childnode refid="2063" relation="include">
        </childnode>
        <childnode refid="2072" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2076" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2083" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
        <childnode refid="2087" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2095" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
        <childnode refid="2011" relation="include">
        </childnode>
        <childnode refid="2033" relation="include">
        </childnode>
        <childnode refid="2101" relation="include">
        </childnode>
        <childnode refid="2036" relation="include">
        </childnode>
        <childnode refid="2102" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2103" relation="include">
        </childnode>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2047" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
        <childnode refid="2055" relation="include">
        </childnode>
        <childnode refid="2052" relation="include">
        </childnode>
        <childnode refid="2053" relation="include">
        </childnode>
        <childnode refid="2056" relation="include">
        </childnode>
        <childnode refid="2042" relation="include">
        </childnode>
        <childnode refid="2043" relation="include">
        </childnode>
        <childnode refid="2058" relation="include">
        </childnode>
        <childnode refid="2059" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
        <childnode refid="2057" relation="include">
        </childnode>
      </node>
      <node id="2037">
        <label>common/sbfUdpMulticast.c</label>
        <link refid="sbf_udp_multicast_8c"/>
      </node>
      <node id="2016">
        <label>transport/sbfTportPrivate.h</label>
        <link refid="sbf_tport_private_8h"/>
        <childnode refid="2017" relation="include">
        </childnode>
        <childnode refid="2018" relation="include">
        </childnode>
        <childnode refid="2019" relation="include">
        </childnode>
        <childnode refid="2020" relation="include">
        </childnode>
        <childnode refid="2021" relation="include">
        </childnode>
        <childnode refid="2022" relation="include">
        </childnode>
        <childnode refid="2023" relation="include">
        </childnode>
        <childnode refid="2024" relation="include">
        </childnode>
      </node>
      <node id="2036">
        <label>common/sbfUdpMulticast.h</label>
        <link refid="sbf_udp_multicast_8h"/>
        <childnode refid="2037" relation="include">
        </childnode>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
      </node>
      <node id="2004">
        <label>common/systree.h</label>
        <link refid="systree_8h"/>
        <childnode refid="2005" relation="include">
        </childnode>
      </node>
      <node id="2023">
        <label>transport/sbfTportFragments.c</label>
        <link refid="sbf_tport_fragments_8c"/>
      </node>
      <node id="2075">
        <label>common/sbfCommonLinux.c</label>
        <link refid="sbf_common_linux_8c"/>
      </node>
      <node id="2022">
        <label>transport/sbfTport.c</label>
        <link refid="sbf_tport_8c"/>
      </node>
      <node id="2043">
        <label>transport/sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="2044" relation="include">
        </childnode>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
        <childnode refid="2047" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
        <childnode refid="2055" relation="include">
        </childnode>
        <childnode refid="2052" relation="include">
        </childnode>
        <childnode refid="2053" relation="include">
        </childnode>
        <childnode refid="2056" relation="include">
        </childnode>
        <childnode refid="2017" relation="include">
        </childnode>
        <childnode refid="2057" relation="include">
        </childnode>
        <childnode refid="2018" relation="include">
        </childnode>
        <childnode refid="2019" relation="include">
        </childnode>
        <childnode refid="2020" relation="include">
        </childnode>
        <childnode refid="2021" relation="include">
        </childnode>
        <childnode refid="2022" relation="include">
        </childnode>
        <childnode refid="2023" relation="include">
        </childnode>
        <childnode refid="2024" relation="include">
        </childnode>
      </node>
      <node id="2082">
        <label>common/sbfGuid.c</label>
        <link refid="sbf_guid_8c"/>
      </node>
      <node id="2081">
        <label>common/sbfGuid.h</label>
        <link refid="sbf_guid_8h"/>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2071" relation="include">
        </childnode>
      </node>
      <node id="2078">
        <label>common/sbfCsvParser.c</label>
        <link refid="sbf_csv_parser_8c"/>
      </node>
      <node id="2077">
        <label>common/sbfCsvParser.h</label>
        <link refid="sbf_csv_parser_8h"/>
        <childnode refid="2078" relation="include">
        </childnode>
      </node>
      <node id="2090">
        <label>core/sbfMw.c</label>
        <link refid="sbf_mw_8c"/>
      </node>
      <node id="2089">
        <label>core/sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="2064" relation="include">
        </childnode>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
        <childnode refid="2044" relation="include">
        </childnode>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2045" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2055" relation="include">
        </childnode>
        <childnode refid="2052" relation="include">
        </childnode>
        <childnode refid="2053" relation="include">
        </childnode>
        <childnode refid="2056" relation="include">
        </childnode>
        <childnode refid="2043" relation="include">
        </childnode>
      </node>
      <node id="2100">
        <label>common/sbfPerfCounter.c</label>
        <link refid="sbf_perf_counter_8c"/>
      </node>
      <node id="2010">
        <label>common/sbfLog.c</label>
        <link refid="sbf_log_8c"/>
      </node>
      <node id="2099">
        <label>common/sbfPerfCounter.h</label>
        <link refid="sbf_perf_counter_8h"/>
        <childnode refid="2100" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2055" relation="include">
        </childnode>
        <childnode refid="2056" relation="include">
        </childnode>
      </node>
      <node id="2035">
        <label>common/sbfTcpListener.c</label>
        <link refid="sbf_tcp_listener_8c"/>
      </node>
      <node id="2009">
        <label>common/sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="2010" relation="include">
        </childnode>
        <childnode refid="2011" relation="include">
        </childnode>
      </node>
      <node id="2101">
        <label>common/sbfTcpListener.h</label>
        <link refid="sbf_tcp_listener_8h"/>
        <childnode refid="2035" relation="include">
        </childnode>
      </node>
      <node id="2015">
        <label>core/sbfQueue.c</label>
        <link refid="sbf_queue_8c"/>
      </node>
      <node id="2080">
        <label>transport/sbfBatchPrivate.h</label>
        <link refid="sbf_batch_private_8h"/>
        <childnode refid="2016" relation="include">
        </childnode>
      </node>
      <node id="2074">
        <label>common/sbfCommonDarwin.c</label>
        <link refid="sbf_common_darwin_8c"/>
      </node>
      <node id="2026">
        <label>common/sbfMemory.c</label>
        <link refid="sbf_memory_8c"/>
      </node>
      <node id="2104">
        <label>core/sbfQueue.h</label>
        <link refid="sbf_queue_8h"/>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2015" relation="include">
        </childnode>
        <childnode refid="2047" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
        <childnode refid="2058" relation="include">
        </childnode>
        <childnode refid="2059" relation="include">
        </childnode>
      </node>
      <node id="2025">
        <label>common/sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="2026" relation="include">
        </childnode>
      </node>
      <node id="2093">
        <label>common/sbfLogFile.c</label>
        <link refid="sbf_log_file_8c"/>
      </node>
      <node id="2092">
        <label>common/sbfLogFile.h</label>
        <link refid="sbf_log_file_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2049">
        <label>requestreply/sbfRequestPub.c</label>
        <link refid="sbf_request_pub_8c"/>
      </node>
      <node id="2054">
        <label>requestreply/sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="2048" relation="include">
        </childnode>
      </node>
      <node id="2062">
        <label>common/sbfPool.c</label>
        <link refid="sbf_pool_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="systree_8h_1ae44db866f1d8a9963860666f057d40db" prot="public" static="no">
        <name>SPLAY_HEAD</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>struct name {								\
	struct type *sph_root; /* root of the tree */			\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="57" column="9" bodyfile="common/systree.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a02c068eb5f4b900668ceb4e380a0da4d" prot="public" static="no">
        <name>SPLAY_INITIALIZER</name>
        <param><defname>root</defname></param>
        <initializer>{ NULL }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="62" column="9" bodyfile="common/systree.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1acfe6ca037b56bc1115fbfb4fbe709525" prot="public" static="no">
        <name>SPLAY_INIT</name>
        <param><defname>root</defname></param>
        <initializer>do {						\
	(root)-&gt;sph_root = NULL;					\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="65" column="9" bodyfile="common/systree.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a763ee00a62d0b20f98cbc53f0df500cc" prot="public" static="no">
        <name>SPLAY_ENTRY</name>
        <param><defname>type</defname></param>
        <initializer>struct {								\
	struct type *spe_left; /* left element */			\
	struct type *spe_right; /* right element */			\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="69" column="9" bodyfile="common/systree.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" prot="public" static="no">
        <name>SPLAY_LEFT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>(elm)-&gt;field.spe_left</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="75" column="9" bodyfile="common/systree.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" prot="public" static="no">
        <name>SPLAY_RIGHT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>(elm)-&gt;field.spe_right</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="76" column="9" bodyfile="common/systree.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a5f6b92ec0c0ceccee94990625fa9a9ab" prot="public" static="no">
        <name>SPLAY_ROOT</name>
        <param><defname>head</defname></param>
        <initializer>(head)-&gt;sph_root</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="77" column="9" bodyfile="common/systree.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1acd5a15948e7307457700a1e70af1baf0" prot="public" static="no">
        <name>SPLAY_EMPTY</name>
        <param><defname>head</defname></param>
        <initializer>(<ref refid="systree_8h_1a5f6b92ec0c0ceccee94990625fa9a9ab" kindref="member">SPLAY_ROOT</ref>(head) == NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="78" column="9" bodyfile="common/systree.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1aa65d98a3b7e75564fe55a31408cddb34" prot="public" static="no">
        <name>SPLAY_ROTATE_RIGHT</name>
        <param><defname>head</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	<ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>((head)-&gt;sph_root, field) = <ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>(tmp, field);	\
	<ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>(tmp, field) = (head)-&gt;sph_root;			\
	(head)-&gt;sph_root = tmp;						\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="81" column="9" bodyfile="common/systree.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a2791cb4e69e346621ce0f5f5b6f072ac" prot="public" static="no">
        <name>SPLAY_ROTATE_LEFT</name>
        <param><defname>head</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	<ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>((head)-&gt;sph_root, field) = <ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>(tmp, field);	\
	<ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>(tmp, field) = (head)-&gt;sph_root;			\
	(head)-&gt;sph_root = tmp;						\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="87" column="9" bodyfile="common/systree.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a0831038ecc96179cf79c87a963be1254" prot="public" static="no">
        <name>SPLAY_LINKLEFT</name>
        <param><defname>head</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {				\
	<ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>(tmp, field) = (head)-&gt;sph_root;			\
	tmp = (head)-&gt;sph_root;						\
	(head)-&gt;sph_root = <ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>((head)-&gt;sph_root, field);		\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="93" column="9" bodyfile="common/systree.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a7d93f3c61541d0af520bf5bc5d9e0247" prot="public" static="no">
        <name>SPLAY_LINKRIGHT</name>
        <param><defname>head</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {				\
	<ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>(tmp, field) = (head)-&gt;sph_root;			\
	tmp = (head)-&gt;sph_root;						\
	(head)-&gt;sph_root = <ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>((head)-&gt;sph_root, field);	\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="99" column="9" bodyfile="common/systree.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1aab316feeb1d3c7058bae7cc3b55f1a14" prot="public" static="no">
        <name>SPLAY_ASSEMBLE</name>
        <param><defname>head</defname></param>
        <param><defname>node</defname></param>
        <param><defname>left</defname></param>
        <param><defname>right</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {		\
	<ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>(left, field) = <ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>((head)-&gt;sph_root, field);	\
	<ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>(right, field) = <ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>((head)-&gt;sph_root, field);\
	<ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>((head)-&gt;sph_root, field) = <ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>(node, field);	\
	<ref refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" kindref="member">SPLAY_RIGHT</ref>((head)-&gt;sph_root, field) = <ref refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" kindref="member">SPLAY_LEFT</ref>(node, field);	\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="105" column="9" bodyfile="common/systree.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a75ee3833aa4387ba31979341c84b6954" prot="public" static="no">
        <name>SPLAY_PROTOTYPE</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>field</defname></param>
        <param><defname>cmp</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="114" column="9" bodyfile="common/systree.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a16173671c451dceee32260e5e7661d48" prot="public" static="no">
        <name>SPLAY_GENERATE</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>field</defname></param>
        <param><defname>cmp</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="158" column="9" bodyfile="common/systree.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1acd35c28f4261c9857cdd7670cf0eee1e" prot="public" static="no">
        <name>SPLAY_NEGINF</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="273" column="9" bodyfile="common/systree.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1ab0d99fe18af2c95116d74d1df5f3ac8b" prot="public" static="no">
        <name>SPLAY_INF</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="274" column="9" bodyfile="common/systree.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1ac1282629fe287a75eda9a08c34ff4009" prot="public" static="no">
        <name>SPLAY_INSERT</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_SPLAY_INSERT(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="276" column="9" bodyfile="common/systree.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1adae97bc6106b301bd4bf94a7ee0f8a3a" prot="public" static="no">
        <name>SPLAY_REMOVE</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_SPLAY_REMOVE(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="277" column="9" bodyfile="common/systree.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a640590d10a440909b2f4d0c6c5fd4ac7" prot="public" static="no">
        <name>SPLAY_FIND</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_SPLAY_FIND(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="278" column="9" bodyfile="common/systree.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a27d2f6ae2430eb964191f478963895c4" prot="public" static="no">
        <name>SPLAY_NEXT</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_SPLAY_NEXT(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="279" column="9" bodyfile="common/systree.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a44260dfd30bc1e4021cade34124f48a2" prot="public" static="no">
        <name>SPLAY_MIN</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="systree_8h_1acd5a15948e7307457700a1e70af1baf0" kindref="member">SPLAY_EMPTY</ref>(x) ? NULL	\
					: name##_SPLAY_MIN_MAX(x, <ref refid="systree_8h_1acd35c28f4261c9857cdd7670cf0eee1e" kindref="member">SPLAY_NEGINF</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="280" column="9" bodyfile="common/systree.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a52c3d63bf730d8735892aa9eeb516b3e" prot="public" static="no">
        <name>SPLAY_MAX</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="systree_8h_1acd5a15948e7307457700a1e70af1baf0" kindref="member">SPLAY_EMPTY</ref>(x) ? NULL	\
					: name##_SPLAY_MIN_MAX(x, <ref refid="systree_8h_1ab0d99fe18af2c95116d74d1df5f3ac8b" kindref="member">SPLAY_INF</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="282" column="9" bodyfile="common/systree.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a715a87d3912dd5875b5f36621efa89c5" prot="public" static="no">
        <name>SPLAY_FOREACH</name>
        <param><defname>x</defname></param>
        <param><defname>name</defname></param>
        <param><defname>head</defname></param>
        <initializer>for ((x) = <ref refid="systree_8h_1a44260dfd30bc1e4021cade34124f48a2" kindref="member">SPLAY_MIN</ref>(name, head);				\
	     (x) != NULL;						\
	     (x) = <ref refid="systree_8h_1a27d2f6ae2430eb964191f478963895c4" kindref="member">SPLAY_NEXT</ref>(name, head, x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="285" column="9" bodyfile="common/systree.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a8036fa6f14fe429545b9228ec92e026f" prot="public" static="no">
        <name>RB_HEAD</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <initializer>struct name {								\
	struct type *rbh_root; /* root of the tree */			\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="291" column="9" bodyfile="common/systree.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1afbea90211a1872bdaf4f86d23dbf5cfd" prot="public" static="no">
        <name>RB_INITIALIZER</name>
        <param><defname>root</defname></param>
        <initializer>{ NULL }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="296" column="9" bodyfile="common/systree.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1aeebbb1dbfd0312bdf51a4b3a44eaa525" prot="public" static="no">
        <name>RB_INIT</name>
        <param><defname>root</defname></param>
        <initializer>do {						\
	(root)-&gt;rbh_root = NULL;					\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="299" column="9" bodyfile="common/systree.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a9776c921e63661755728d05e55484d0b" prot="public" static="no">
        <name>RB_BLACK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="303" column="9" bodyfile="common/systree.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1aebf73e751fbdd4b625db308dbf04d0d2" prot="public" static="no">
        <name>RB_RED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="304" column="9" bodyfile="common/systree.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a9c7350c93a42f7c017405c95676a3092" prot="public" static="no">
        <name>RB_ENTRY</name>
        <param><defname>type</defname></param>
        <initializer>struct {								\
	struct type *rbe_left;		/* left element */		\
	struct type *rbe_right;		/* right element */		\
	struct type *rbe_parent;	/* parent element */		\
	int rbe_color;			/* node color */		\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="305" column="9" bodyfile="common/systree.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a3357266d7e28607f499cbb049adac9d0" prot="public" static="no">
        <name>RB_LEFT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>(elm)-&gt;field.rbe_left</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="313" column="9" bodyfile="common/systree.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" prot="public" static="no">
        <name>RB_RIGHT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>(elm)-&gt;field.rbe_right</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="314" column="9" bodyfile="common/systree.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a18413e366064c57a09478aa84f56677f" prot="public" static="no">
        <name>RB_PARENT</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>(elm)-&gt;field.rbe_parent</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="315" column="9" bodyfile="common/systree.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a6c34afb761c6aa84cef8aba54b46b032" prot="public" static="no">
        <name>RB_COLOR</name>
        <param><defname>elm</defname></param>
        <param><defname>field</defname></param>
        <initializer>(elm)-&gt;field.rbe_color</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="316" column="9" bodyfile="common/systree.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1aebfe9f6de31553dc906d5910b6b604b0" prot="public" static="no">
        <name>RB_ROOT</name>
        <param><defname>head</defname></param>
        <initializer>(head)-&gt;rbh_root</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="317" column="9" bodyfile="common/systree.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a0d85aa035345c2d3f890bf6bc602c068" prot="public" static="no">
        <name>RB_EMPTY</name>
        <param><defname>head</defname></param>
        <initializer>(<ref refid="systree_8h_1aebfe9f6de31553dc906d5910b6b604b0" kindref="member">RB_ROOT</ref>(head) == NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="318" column="9" bodyfile="common/systree.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a22ac8df3f28664e8d6bc70032eb32380" prot="public" static="no">
        <name>RB_SET</name>
        <param><defname>elm</defname></param>
        <param><defname>parent</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {					\
	<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field) = parent;					\
	<ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(elm, field) = <ref refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" kindref="member">RB_RIGHT</ref>(elm, field) = NULL;		\
	<ref refid="systree_8h_1a6c34afb761c6aa84cef8aba54b46b032" kindref="member">RB_COLOR</ref>(elm, field) = <ref refid="systree_8h_1aebf73e751fbdd4b625db308dbf04d0d2" kindref="member">RB_RED</ref>;					\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="320" column="9" bodyfile="common/systree.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1ae18c494fbc0b1f9331f35d585078d10d" prot="public" static="no">
        <name>RB_SET_BLACKRED</name>
        <param><defname>black</defname></param>
        <param><defname>red</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {				\
	<ref refid="systree_8h_1a6c34afb761c6aa84cef8aba54b46b032" kindref="member">RB_COLOR</ref>(black, field) = <ref refid="systree_8h_1a9776c921e63661755728d05e55484d0b" kindref="member">RB_BLACK</ref>;				\
	<ref refid="systree_8h_1a6c34afb761c6aa84cef8aba54b46b032" kindref="member">RB_COLOR</ref>(red, field) = <ref refid="systree_8h_1aebf73e751fbdd4b625db308dbf04d0d2" kindref="member">RB_RED</ref>;					\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="326" column="9" bodyfile="common/systree.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1aa8a785bf6106b1926889c882ec093f15" prot="public" static="no">
        <name>RB_AUGMENT</name>
        <param><defname>x</defname></param>
        <initializer>do {} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="332" column="9" bodyfile="common/systree.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a3d320c9b1b009d30ea8bbeae6d2cb738" prot="public" static="no">
        <name>RB_ROTATE_LEFT</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	(tmp) = <ref refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" kindref="member">RB_RIGHT</ref>(elm, field);					\
	if ((<ref refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" kindref="member">RB_RIGHT</ref>(elm, field) = <ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(tmp, field))) {		\
		<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(<ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(tmp, field), field) = (elm);		\
	}								\
	<ref refid="systree_8h_1aa8a785bf6106b1926889c882ec093f15" kindref="member">RB_AUGMENT</ref>(elm);						\
	if ((<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(tmp, field) = <ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field))) {		\
		if ((elm) == <ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field), field))	\
			<ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field), field) = (tmp);	\
		else							\
			<ref refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" kindref="member">RB_RIGHT</ref>(<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field), field) = (tmp);	\
	} else								\
		(head)-&gt;rbh_root = (tmp);				\
	<ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(tmp, field) = (elm);					\
	<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field) = (tmp);					\
	<ref refid="systree_8h_1aa8a785bf6106b1926889c882ec093f15" kindref="member">RB_AUGMENT</ref>(tmp);						\
	if ((<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(tmp, field)))					\
		<ref refid="systree_8h_1aa8a785bf6106b1926889c882ec093f15" kindref="member">RB_AUGMENT</ref>(<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(tmp, field));			\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="335" column="9" bodyfile="common/systree.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a08ae7198a66e4d3548016cf07ca1c0fb" prot="public" static="no">
        <name>RB_ROTATE_RIGHT</name>
        <param><defname>head</defname></param>
        <param><defname>elm</defname></param>
        <param><defname>tmp</defname></param>
        <param><defname>field</defname></param>
        <initializer>do {			\
	(tmp) = <ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(elm, field);					\
	if ((<ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(elm, field) = <ref refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" kindref="member">RB_RIGHT</ref>(tmp, field))) {		\
		<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(<ref refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" kindref="member">RB_RIGHT</ref>(tmp, field), field) = (elm);		\
	}								\
	<ref refid="systree_8h_1aa8a785bf6106b1926889c882ec093f15" kindref="member">RB_AUGMENT</ref>(elm);						\
	if ((<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(tmp, field) = <ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field))) {		\
		if ((elm) == <ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field), field))	\
			<ref refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" kindref="member">RB_LEFT</ref>(<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field), field) = (tmp);	\
		else							\
			<ref refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" kindref="member">RB_RIGHT</ref>(<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field), field) = (tmp);	\
	} else								\
		(head)-&gt;rbh_root = (tmp);				\
	<ref refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" kindref="member">RB_RIGHT</ref>(tmp, field) = (elm);					\
	<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(elm, field) = (tmp);					\
	<ref refid="systree_8h_1aa8a785bf6106b1926889c882ec093f15" kindref="member">RB_AUGMENT</ref>(tmp);						\
	if ((<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(tmp, field)))					\
		<ref refid="systree_8h_1aa8a785bf6106b1926889c882ec093f15" kindref="member">RB_AUGMENT</ref>(<ref refid="systree_8h_1a18413e366064c57a09478aa84f56677f" kindref="member">RB_PARENT</ref>(tmp, field));			\
} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="355" column="9" bodyfile="common/systree.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a4f31c441ab7126be5ca1b0eda203d2cd" prot="public" static="no">
        <name>RB_PROTOTYPE</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>field</defname></param>
        <param><defname>cmp</defname></param>
        <initializer><ref refid="systree_8h_1ac24e599cbd9ee9d860282816ac736a07" kindref="member">RB_PROTOTYPE_INTERNAL</ref>(name, type, field, cmp,)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="376" column="9" bodyfile="common/systree.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1ad8163b022562664ed2daafad8c601e5a" prot="public" static="no">
        <name>RB_PROTOTYPE_STATIC</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>field</defname></param>
        <param><defname>cmp</defname></param>
        <initializer><ref refid="systree_8h_1ac24e599cbd9ee9d860282816ac736a07" kindref="member">RB_PROTOTYPE_INTERNAL</ref>(name, type, field, cmp, <ref refid="sbf_common_win32_8h_1a789fcd195035787245e7734413e9b5a2" kindref="member">SBF_UNUSED</ref> static)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="378" column="9" bodyfile="common/systree.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1ac24e599cbd9ee9d860282816ac736a07" prot="public" static="no">
        <name>RB_PROTOTYPE_INTERNAL</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>field</defname></param>
        <param><defname>cmp</defname></param>
        <param><defname>attr</defname></param>
        <initializer>attr void name##_RB_INSERT_COLOR(struct name *, struct type *);		\
attr void name##_RB_REMOVE_COLOR(struct name *, struct type *, struct type *);\
attr struct type *name##_RB_REMOVE(struct name *, struct type *);	\
attr struct type *name##_RB_INSERT(struct name *, struct type *);	\
attr struct type *name##_RB_FIND(struct name *, struct type *);		\
attr struct type *name##_RB_NFIND(struct name *, struct type *);	\
attr struct type *name##_RB_NEXT(struct type *);			\
attr struct type *name##_RB_PREV(struct type *);			\
attr struct type *name##_RB_MINMAX(struct name *, int);			\
									\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="380" column="9" bodyfile="common/systree.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1aef943a700d479a15f16744ba51dd1141" prot="public" static="no">
        <name>RB_GENERATE</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>field</defname></param>
        <param><defname>cmp</defname></param>
        <initializer><ref refid="systree_8h_1a01d155a5dadb714960941b7c5bfb1d50" kindref="member">RB_GENERATE_INTERNAL</ref>(name, type, field, cmp,)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="395" column="9" bodyfile="common/systree.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a70771841c3ed0487d47ed426bc6b089e" prot="public" static="no">
        <name>RB_GENERATE_STATIC</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>field</defname></param>
        <param><defname>cmp</defname></param>
        <initializer><ref refid="systree_8h_1a01d155a5dadb714960941b7c5bfb1d50" kindref="member">RB_GENERATE_INTERNAL</ref>(name, type, field, cmp, <ref refid="sbf_common_win32_8h_1a789fcd195035787245e7734413e9b5a2" kindref="member">SBF_UNUSED</ref> static)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="397" column="9" bodyfile="common/systree.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a01d155a5dadb714960941b7c5bfb1d50" prot="public" static="no">
        <name>RB_GENERATE_INTERNAL</name>
        <param><defname>name</defname></param>
        <param><defname>type</defname></param>
        <param><defname>field</defname></param>
        <param><defname>cmp</defname></param>
        <param><defname>attr</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="399" column="9" bodyfile="common/systree.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a2b26b7c6b32e00d863fd1ae346fb3bb5" prot="public" static="no">
        <name>RB_NEGINF</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="716" column="9" bodyfile="common/systree.h" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a763f4baa123753e9fc466ea178229715" prot="public" static="no">
        <name>RB_INF</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="717" column="9" bodyfile="common/systree.h" bodystart="717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a5b9861a8925c953340e483ae0a0f5120" prot="public" static="no">
        <name>RB_INSERT</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_RB_INSERT(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="719" column="9" bodyfile="common/systree.h" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1ad97eb44d2c39debda8cfbbbbcb354cce" prot="public" static="no">
        <name>RB_REMOVE</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_RB_REMOVE(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="720" column="9" bodyfile="common/systree.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1af0ae89dc9239fbe8c056eeed595cedac" prot="public" static="no">
        <name>RB_FIND</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_RB_FIND(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="721" column="9" bodyfile="common/systree.h" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a70e614029f71a8debff2d42ce72a160b" prot="public" static="no">
        <name>RB_NFIND</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_RB_NFIND(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="722" column="9" bodyfile="common/systree.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a2852fb3d5ccc9f1d3a245096fee9eb0b" prot="public" static="no">
        <name>RB_NEXT</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_RB_NEXT(y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="723" column="9" bodyfile="common/systree.h" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a2e0a645fac7c63886eaa1bbc78ca3696" prot="public" static="no">
        <name>RB_PREV</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>name##_RB_PREV(y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="724" column="9" bodyfile="common/systree.h" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a0827c86d4c8c63495f665141d857f380" prot="public" static="no">
        <name>RB_MIN</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <initializer>name##_RB_MINMAX(x, <ref refid="systree_8h_1a2b26b7c6b32e00d863fd1ae346fb3bb5" kindref="member">RB_NEGINF</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="725" column="9" bodyfile="common/systree.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a6a78e155b3b5a296ba9c0ab15b70fb8d" prot="public" static="no">
        <name>RB_MAX</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <initializer>name##_RB_MINMAX(x, <ref refid="systree_8h_1a763f4baa123753e9fc466ea178229715" kindref="member">RB_INF</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="726" column="9" bodyfile="common/systree.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1a1d7436c418f56d0b50ebc4c4273d71b6" prot="public" static="no">
        <name>RB_FOREACH</name>
        <param><defname>x</defname></param>
        <param><defname>name</defname></param>
        <param><defname>head</defname></param>
        <initializer>for ((x) = <ref refid="systree_8h_1a0827c86d4c8c63495f665141d857f380" kindref="member">RB_MIN</ref>(name, head);					\
	     (x) != NULL;						\
	     (x) = name##_RB_NEXT(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="728" column="9" bodyfile="common/systree.h" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1aabadd40831e862632d55eb8c867fd258" prot="public" static="no">
        <name>RB_FOREACH_SAFE</name>
        <param><defname>x</defname></param>
        <param><defname>name</defname></param>
        <param><defname>head</defname></param>
        <param><defname>y</defname></param>
        <initializer>for ((x) = <ref refid="systree_8h_1a0827c86d4c8c63495f665141d857f380" kindref="member">RB_MIN</ref>(name, head);					\
	    ((x) != NULL) &amp;&amp; ((y) = name##_RB_NEXT(x), 1);		\
	     (x) = (y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="733" column="9" bodyfile="common/systree.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1ae6d8b4211e268f05895ea7c312873968" prot="public" static="no">
        <name>RB_FOREACH_REVERSE</name>
        <param><defname>x</defname></param>
        <param><defname>name</defname></param>
        <param><defname>head</defname></param>
        <initializer>for ((x) = <ref refid="systree_8h_1a6a78e155b3b5a296ba9c0ab15b70fb8d" kindref="member">RB_MAX</ref>(name, head);					\
	     (x) != NULL;						\
	     (x) = name##_RB_PREV(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="738" column="9" bodyfile="common/systree.h" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="systree_8h_1ac278702349f5b1ac7c63d069b16d239b" prot="public" static="no">
        <name>RB_FOREACH_REVERSE_SAFE</name>
        <param><defname>x</defname></param>
        <param><defname>name</defname></param>
        <param><defname>head</defname></param>
        <param><defname>y</defname></param>
        <initializer>for ((x) = <ref refid="systree_8h_1a6a78e155b3b5a296ba9c0ab15b70fb8d" kindref="member">RB_MAX</ref>(name, head);					\
	    ((x) != NULL) &amp;&amp; ((y) = name##_RB_PREV(x), 1);		\
	     (x) = (y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/systree.h" line="743" column="9" bodyfile="common/systree.h" bodystart="743" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/>$OpenBSD:<sp/>tree.h,v<sp/>1.13<sp/>2011/07/09<sp/>00:19:45<sp/>pirofti<sp/>Exp<sp/>$<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002<sp/>Niels<sp/>Provos<sp/>&lt;provos@citi.umich.edu&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SYS_TREE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SYS_TREE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>defines<sp/>data<sp/>structures<sp/>for<sp/>different<sp/>types<sp/>of<sp/>trees:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>splay<sp/>trees<sp/>and<sp/>red-black<sp/>trees.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>A<sp/>splay<sp/>tree<sp/>is<sp/>a<sp/>self-organizing<sp/>data<sp/>structure.<sp/><sp/>Every<sp/>operation</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>on<sp/>the<sp/>tree<sp/>causes<sp/>a<sp/>splay<sp/>to<sp/>happen.<sp/><sp/>The<sp/>splay<sp/>moves<sp/>the<sp/>requested</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>node<sp/>to<sp/>the<sp/>root<sp/>of<sp/>the<sp/>tree<sp/>and<sp/>partly<sp/>rebalances<sp/>it.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>This<sp/>has<sp/>the<sp/>benefit<sp/>that<sp/>request<sp/>locality<sp/>causes<sp/>faster<sp/>lookups<sp/>as</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>the<sp/>requested<sp/>nodes<sp/>move<sp/>to<sp/>the<sp/>top<sp/>of<sp/>the<sp/>tree.<sp/><sp/>On<sp/>the<sp/>other<sp/>hand,</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>every<sp/>lookup<sp/>causes<sp/>memory<sp/>writes.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>The<sp/>Balance<sp/>Theorem<sp/>bounds<sp/>the<sp/>total<sp/>access<sp/>time<sp/>for<sp/>m<sp/>operations</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>and<sp/>n<sp/>inserts<sp/>on<sp/>an<sp/>initially<sp/>empty<sp/>tree<sp/>as<sp/>O((m<sp/>+<sp/>n)lg<sp/>n).<sp/><sp/>The</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>amortized<sp/>cost<sp/>for<sp/>a<sp/>sequence<sp/>of<sp/>m<sp/>accesses<sp/>to<sp/>a<sp/>splay<sp/>tree<sp/>is<sp/>O(lg<sp/>n);</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>A<sp/>red-black<sp/>tree<sp/>is<sp/>a<sp/>binary<sp/>search<sp/>tree<sp/>with<sp/>the<sp/>node<sp/>color<sp/>as<sp/>an</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>extra<sp/>attribute.<sp/><sp/>It<sp/>fulfills<sp/>a<sp/>set<sp/>of<sp/>conditions:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>every<sp/>search<sp/>path<sp/>from<sp/>the<sp/>root<sp/>to<sp/>a<sp/>leaf<sp/>consists<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>same<sp/>number<sp/>of<sp/>black<sp/>nodes,</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>each<sp/>red<sp/>node<sp/>(except<sp/>for<sp/>the<sp/>root)<sp/>has<sp/>a<sp/>black<sp/>parent,</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>each<sp/>leaf<sp/>node<sp/>is<sp/>black.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Every<sp/>operation<sp/>on<sp/>a<sp/>red-black<sp/>tree<sp/>is<sp/>bounded<sp/>as<sp/>O(lg<sp/>n).</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>The<sp/>maximum<sp/>height<sp/>of<sp/>a<sp/>red-black<sp/>tree<sp/>is<sp/>2lg<sp/>(n+1).</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="systree_8h_1ae44db866f1d8a9963860666f057d40db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_HEAD(name,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor">struct<sp/>name<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*sph_root;<sp/></highlight><highlight class="comment">/*<sp/>root<sp/>of<sp/>the<sp/>tree<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="systree_8h_1a02c068eb5f4b900668ceb4e380a0da4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_INITIALIZER(root)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>NULL<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="systree_8h_1acfe6ca037b56bc1115fbfb4fbe709525" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_INIT(root)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(root)-&gt;sph_root<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="systree_8h_1a763ee00a62d0b20f98cbc53f0df500cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_ENTRY(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor">struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*spe_left;<sp/></highlight><highlight class="comment">/*<sp/>left<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*spe_right;<sp/></highlight><highlight class="comment">/*<sp/>right<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="systree_8h_1a1182dffa92cc3c64fa473f9b9856214f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_LEFT(elm,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.spe_left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="systree_8h_1a97d791c8cf32170965daf98eb12ce9e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_RIGHT(elm,<sp/>field)<sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.spe_right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="systree_8h_1a5f6b92ec0c0ceccee94990625fa9a9ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_ROOT(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;sph_root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="systree_8h_1acd5a15948e7307457700a1e70af1baf0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_EMPTY(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPLAY_ROOT(head)<sp/>==<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SPLAY_ROTATE_{LEFT,RIGHT}<sp/>expect<sp/>that<sp/>tmp<sp/>hold<sp/>SPLAY_{RIGHT,LEFT}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="systree_8h_1aa65d98a3b7e75564fe55a31408cddb34" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_ROTATE_RIGHT(head,<sp/>tmp,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field)<sp/>=<sp/>SPLAY_RIGHT(tmp,<sp/>field);<sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_RIGHT(tmp,<sp/>field)<sp/>=<sp/>(head)-&gt;sph_root;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sph_root<sp/>=<sp/>tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="systree_8h_1a2791cb4e69e346621ce0f5f5b6f072ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_ROTATE_LEFT(head,<sp/>tmp,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field)<sp/>=<sp/>SPLAY_LEFT(tmp,<sp/>field);<sp/><sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_LEFT(tmp,<sp/>field)<sp/>=<sp/>(head)-&gt;sph_root;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sph_root<sp/>=<sp/>tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="systree_8h_1a0831038ecc96179cf79c87a963be1254" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_LINKLEFT(head,<sp/>tmp,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_LEFT(tmp,<sp/>field)<sp/>=<sp/>(head)-&gt;sph_root;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(head)-&gt;sph_root;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sph_root<sp/>=<sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="systree_8h_1a7d93f3c61541d0af520bf5bc5d9e0247" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_LINKRIGHT(head,<sp/>tmp,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_RIGHT(tmp,<sp/>field)<sp/>=<sp/>(head)-&gt;sph_root;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(head)-&gt;sph_root;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sph_root<sp/>=<sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="systree_8h_1aab316feeb1d3c7058bae7cc3b55f1a14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_ASSEMBLE(head,<sp/>node,<sp/>left,<sp/>right,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_RIGHT(left,<sp/>field)<sp/>=<sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field);<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_LEFT(right,<sp/>field)<sp/>=<sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field);\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field)<sp/>=<sp/>SPLAY_RIGHT(node,<sp/>field);<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field)<sp/>=<sp/>SPLAY_LEFT(node,<sp/>field);<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Generates<sp/>prototypes<sp/>and<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="systree_8h_1a75ee3833aa4387ba31979341c84b6954" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_PROTOTYPE(name,<sp/>type,<sp/>field,<sp/>cmp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor">void<sp/>name##_SPLAY(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor">void<sp/>name##_SPLAY_MINMAX(struct<sp/>name<sp/>*,<sp/>int);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor">struct<sp/>type<sp/>*name##_SPLAY_INSERT(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor">struct<sp/>type<sp/>*name##_SPLAY_REMOVE(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Finds<sp/>the<sp/>node<sp/>with<sp/>the<sp/>same<sp/>key<sp/>as<sp/>elm<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor">static<sp/>SBF_INLINE<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor">name##_SPLAY_FIND(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_EMPTY(head))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##_SPLAY(head,<sp/>elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((cmp)(elm,<sp/>(head)-&gt;sph_root)<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(head-&gt;sph_root);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor">static<sp/>SBF_INLINE<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor">name##_SPLAY_NEXT(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##_SPLAY(head,<sp/>elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_RIGHT(elm,<sp/>field)<sp/>!=<sp/>NULL)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>SPLAY_RIGHT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(SPLAY_LEFT(elm,<sp/>field)<sp/>!=<sp/>NULL)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>SPLAY_LEFT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor">static<sp/>SBF_INLINE<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor">name##_SPLAY_MIN_MAX(struct<sp/>name<sp/>*head,<sp/>int<sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##_SPLAY_MINMAX(head,<sp/>val);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(SPLAY_ROOT(head));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Main<sp/>splay<sp/>operation.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>Moves<sp/>node<sp/>close<sp/>to<sp/>the<sp/>key<sp/>of<sp/>elm<sp/>to<sp/>top</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="systree_8h_1a16173671c451dceee32260e5e7661d48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_GENERATE(name,<sp/>type,<sp/>field,<sp/>cmp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor">struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor">name##_SPLAY_INSERT(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_EMPTY(head))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_LEFT(elm,<sp/>field)<sp/>=<sp/>SPLAY_RIGHT(elm,<sp/>field)<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>__comp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##_SPLAY(head,<sp/>elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__comp<sp/>=<sp/>(cmp)(elm,<sp/>(head)-&gt;sph_root);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(__comp<sp/>&lt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_LEFT(elm,<sp/>field)<sp/>=<sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field);\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_RIGHT(elm,<sp/>field)<sp/>=<sp/>(head)-&gt;sph_root;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field)<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(__comp<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_RIGHT(elm,<sp/>field)<sp/>=<sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field);\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_LEFT(elm,<sp/>field)<sp/>=<sp/>(head)-&gt;sph_root;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field)<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>((head)-&gt;sph_root);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(head)-&gt;sph_root<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor">struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor">name##_SPLAY_REMOVE(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*__tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_EMPTY(head))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##_SPLAY(head,<sp/>elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((cmp)(elm,<sp/>(head)-&gt;sph_root)<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_LEFT((head)-&gt;sph_root,<sp/>field)<sp/>==<sp/>NULL)<sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;sph_root<sp/>=<sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field);\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__tmp<sp/>=<sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;sph_root<sp/>=<sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field);\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##_SPLAY(head,<sp/>elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field)<sp/>=<sp/>__tmp;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor">void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor">name##_SPLAY(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>__node,<sp/>*__left,<sp/>*__right,<sp/>*__tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>__comp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_LEFT(&amp;__node,<sp/>field)<sp/>=<sp/>SPLAY_RIGHT(&amp;__node,<sp/>field)<sp/>=<sp/>NULL;\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__left<sp/>=<sp/>__right<sp/>=<sp/>&amp;__node;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>((__comp<sp/>=<sp/>(cmp)(elm,<sp/>(head)-&gt;sph_root)))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__comp<sp/>&lt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__tmp<sp/>=<sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__tmp<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((cmp)(elm,<sp/>__tmp)<sp/>&lt;<sp/>0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_ROTATE_RIGHT(head,<sp/>__tmp,<sp/>field);<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_LEFT((head)-&gt;sph_root,<sp/>field)<sp/>==<sp/>NULL)\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_LINKLEFT(head,<sp/>__right,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(__comp<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__tmp<sp/>=<sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__tmp<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((cmp)(elm,<sp/>__tmp)<sp/>&gt;<sp/>0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_ROTATE_LEFT(head,<sp/>__tmp,<sp/>field);<sp/><sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field)<sp/>==<sp/>NULL)\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_LINKRIGHT(head,<sp/>__left,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_ASSEMBLE(head,<sp/>&amp;__node,<sp/>__left,<sp/>__right,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Splay<sp/>with<sp/>either<sp/>the<sp/>minimum<sp/>or<sp/>the<sp/>maximum<sp/>element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>Used<sp/>to<sp/>find<sp/>minimum<sp/>or<sp/>maximum<sp/>element<sp/>in<sp/>tree.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor">void<sp/>name##_SPLAY_MINMAX(struct<sp/>name<sp/>*head,<sp/>int<sp/>__comp)<sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>__node,<sp/>*__left,<sp/>*__right,<sp/>*__tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_LEFT(&amp;__node,<sp/>field)<sp/>=<sp/>SPLAY_RIGHT(&amp;__node,<sp/>field)<sp/>=<sp/>NULL;\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__left<sp/>=<sp/>__right<sp/>=<sp/>&amp;__node;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__comp<sp/>&lt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__tmp<sp/>=<sp/>SPLAY_LEFT((head)-&gt;sph_root,<sp/>field);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__tmp<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__comp<sp/>&lt;<sp/>0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_ROTATE_RIGHT(head,<sp/>__tmp,<sp/>field);<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_LEFT((head)-&gt;sph_root,<sp/>field)<sp/>==<sp/>NULL)\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_LINKLEFT(head,<sp/>__right,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(__comp<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__tmp<sp/>=<sp/>SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__tmp<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__comp<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_ROTATE_LEFT(head,<sp/>__tmp,<sp/>field);<sp/><sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SPLAY_RIGHT((head)-&gt;sph_root,<sp/>field)<sp/>==<sp/>NULL)\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPLAY_LINKRIGHT(head,<sp/>__left,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPLAY_ASSEMBLE(head,<sp/>&amp;__node,<sp/>__left,<sp/>__right,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="systree_8h_1acd35c28f4261c9857cdd7670cf0eee1e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_NEGINF<sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="systree_8h_1ab0d99fe18af2c95116d74d1df5f3ac8b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_INF<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="systree_8h_1ac1282629fe287a75eda9a08c34ff4009" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_INSERT(name,<sp/>x,<sp/>y)<sp/><sp/><sp/><sp/>name##_SPLAY_INSERT(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="systree_8h_1adae97bc6106b301bd4bf94a7ee0f8a3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_REMOVE(name,<sp/>x,<sp/>y)<sp/><sp/><sp/><sp/>name##_SPLAY_REMOVE(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="systree_8h_1a640590d10a440909b2f4d0c6c5fd4ac7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_FIND(name,<sp/>x,<sp/>y)<sp/><sp/><sp/><sp/><sp/><sp/>name##_SPLAY_FIND(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="systree_8h_1a27d2f6ae2430eb964191f478963895c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_NEXT(name,<sp/>x,<sp/>y)<sp/><sp/><sp/><sp/><sp/><sp/>name##_SPLAY_NEXT(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="systree_8h_1a44260dfd30bc1e4021cade34124f48a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_MIN(name,<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/>(SPLAY_EMPTY(x)<sp/>?<sp/>NULL<sp/><sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name##_SPLAY_MIN_MAX(x,<sp/>SPLAY_NEGINF))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="systree_8h_1a52c3d63bf730d8735892aa9eeb516b3e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_MAX(name,<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/>(SPLAY_EMPTY(x)<sp/>?<sp/>NULL<sp/><sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name##_SPLAY_MIN_MAX(x,<sp/>SPLAY_INF))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="systree_8h_1a715a87d3912dd5875b5f36621efa89c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPLAY_FOREACH(x,<sp/>name,<sp/>head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((x)<sp/>=<sp/>SPLAY_MIN(name,<sp/>head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)<sp/>!=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)<sp/>=<sp/>SPLAY_NEXT(name,<sp/>head,<sp/>x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Macros<sp/>that<sp/>define<sp/>a<sp/>red-black<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="systree_8h_1a8036fa6f14fe429545b9228ec92e026f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_HEAD(name,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor">struct<sp/>name<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*rbh_root;<sp/></highlight><highlight class="comment">/*<sp/>root<sp/>of<sp/>the<sp/>tree<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="systree_8h_1afbea90211a1872bdaf4f86d23dbf5cfd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_INITIALIZER(root)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>NULL<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="systree_8h_1aeebbb1dbfd0312bdf51a4b3a44eaa525" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_INIT(root)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(root)-&gt;rbh_root<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="systree_8h_1a9776c921e63661755728d05e55484d0b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_BLACK<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="systree_8h_1aebf73e751fbdd4b625db308dbf04d0d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_RED<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="systree_8h_1a9c7350c93a42f7c017405c95676a3092" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_ENTRY(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor">struct<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*rbe_left;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>left<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*rbe_right;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>right<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*rbe_parent;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parent<sp/>element<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>rbe_color;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>node<sp/>color<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="systree_8h_1a3357266d7e28607f499cbb049adac9d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_LEFT(elm,<sp/>field)<sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.rbe_left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="systree_8h_1a40d5d980a9da19c9347fdd4560ea999a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_RIGHT(elm,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.rbe_right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="systree_8h_1a18413e366064c57a09478aa84f56677f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_PARENT(elm,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.rbe_parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="systree_8h_1a6c34afb761c6aa84cef8aba54b46b032" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_COLOR(elm,<sp/>field)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field.rbe_color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="systree_8h_1aebfe9f6de31553dc906d5910b6b604b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_ROOT(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;rbh_root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="systree_8h_1a0d85aa035345c2d3f890bf6bc602c068" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_EMPTY(head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RB_ROOT(head)<sp/>==<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="systree_8h_1a22ac8df3f28664e8d6bc70032eb32380" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_SET(elm,<sp/>parent,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_PARENT(elm,<sp/>field)<sp/>=<sp/>parent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_LEFT(elm,<sp/>field)<sp/>=<sp/>RB_RIGHT(elm,<sp/>field)<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_COLOR(elm,<sp/>field)<sp/>=<sp/>RB_RED;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="systree_8h_1ae18c494fbc0b1f9331f35d585078d10d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_SET_BLACKRED(black,<sp/>red,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_COLOR(black,<sp/>field)<sp/>=<sp/>RB_BLACK;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_COLOR(red,<sp/>field)<sp/>=<sp/>RB_RED;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RB_AUGMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="systree_8h_1aa8a785bf6106b1926889c882ec093f15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_AUGMENT(x)<sp/><sp/><sp/>do<sp/>{}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="systree_8h_1a3d320c9b1b009d30ea8bbeae6d2cb738" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_ROTATE_LEFT(head,<sp/>elm,<sp/>tmp,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(tmp)<sp/>=<sp/>RB_RIGHT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((RB_RIGHT(elm,<sp/>field)<sp/>=<sp/>RB_LEFT(tmp,<sp/>field)))<sp/>{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_PARENT(RB_LEFT(tmp,<sp/>field),<sp/>field)<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_AUGMENT(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((RB_PARENT(tmp,<sp/>field)<sp/>=<sp/>RB_PARENT(elm,<sp/>field)))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((elm)<sp/>==<sp/>RB_LEFT(RB_PARENT(elm,<sp/>field),<sp/>field))<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_LEFT(RB_PARENT(elm,<sp/>field),<sp/>field)<sp/>=<sp/>(tmp);<sp/><sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_RIGHT(RB_PARENT(elm,<sp/>field),<sp/>field)<sp/>=<sp/>(tmp);<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;rbh_root<sp/>=<sp/>(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_LEFT(tmp,<sp/>field)<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_PARENT(elm,<sp/>field)<sp/>=<sp/>(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_AUGMENT(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((RB_PARENT(tmp,<sp/>field)))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_AUGMENT(RB_PARENT(tmp,<sp/>field));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="systree_8h_1a08ae7198a66e4d3548016cf07ca1c0fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_ROTATE_RIGHT(head,<sp/>elm,<sp/>tmp,<sp/>field)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(tmp)<sp/>=<sp/>RB_LEFT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((RB_LEFT(elm,<sp/>field)<sp/>=<sp/>RB_RIGHT(tmp,<sp/>field)))<sp/>{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_PARENT(RB_RIGHT(tmp,<sp/>field),<sp/>field)<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_AUGMENT(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((RB_PARENT(tmp,<sp/>field)<sp/>=<sp/>RB_PARENT(elm,<sp/>field)))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((elm)<sp/>==<sp/>RB_LEFT(RB_PARENT(elm,<sp/>field),<sp/>field))<sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_LEFT(RB_PARENT(elm,<sp/>field),<sp/>field)<sp/>=<sp/>(tmp);<sp/><sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_RIGHT(RB_PARENT(elm,<sp/>field),<sp/>field)<sp/>=<sp/>(tmp);<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(head)-&gt;rbh_root<sp/>=<sp/>(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_RIGHT(tmp,<sp/>field)<sp/>=<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_PARENT(elm,<sp/>field)<sp/>=<sp/>(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_AUGMENT(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((RB_PARENT(tmp,<sp/>field)))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_AUGMENT(RB_PARENT(tmp,<sp/>field));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Generates<sp/>prototypes<sp/>and<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="systree_8h_1a4f31c441ab7126be5ca1b0eda203d2cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_PROTOTYPE(name,<sp/>type,<sp/>field,<sp/>cmp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_PROTOTYPE_INTERNAL(name,<sp/>type,<sp/>field,<sp/>cmp,)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="systree_8h_1ad8163b022562664ed2daafad8c601e5a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_PROTOTYPE_STATIC(name,<sp/>type,<sp/>field,<sp/>cmp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_PROTOTYPE_INTERNAL(name,<sp/>type,<sp/>field,<sp/>cmp,<sp/>SBF_UNUSED<sp/>static)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="systree_8h_1ac24e599cbd9ee9d860282816ac736a07" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_PROTOTYPE_INTERNAL(name,<sp/>type,<sp/>field,<sp/>cmp,<sp/>attr)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor">attr<sp/>void<sp/>name##_RB_INSERT_COLOR(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor">attr<sp/>void<sp/>name##_RB_REMOVE_COLOR(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*,<sp/>struct<sp/>type<sp/>*);\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*name##_RB_REMOVE(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*name##_RB_INSERT(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*name##_RB_FIND(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*name##_RB_NFIND(struct<sp/>name<sp/>*,<sp/>struct<sp/>type<sp/>*);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*name##_RB_NEXT(struct<sp/>type<sp/>*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*name##_RB_PREV(struct<sp/>type<sp/>*);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*name##_RB_MINMAX(struct<sp/>name<sp/>*,<sp/>int);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Main<sp/>rb<sp/>operation.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>Moves<sp/>node<sp/>close<sp/>to<sp/>the<sp/>key<sp/>of<sp/>elm<sp/>to<sp/>top</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="systree_8h_1aef943a700d479a15f16744ba51dd1141" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_GENERATE(name,<sp/>type,<sp/>field,<sp/>cmp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_GENERATE_INTERNAL(name,<sp/>type,<sp/>field,<sp/>cmp,)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="systree_8h_1a70771841c3ed0487d47ed426bc6b089e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_GENERATE_STATIC(name,<sp/>type,<sp/>field,<sp/>cmp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_GENERATE_INTERNAL(name,<sp/>type,<sp/>field,<sp/>cmp,<sp/>SBF_UNUSED<sp/>static)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="systree_8h_1a01d155a5dadb714960941b7c5bfb1d50" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_GENERATE_INTERNAL(name,<sp/>type,<sp/>field,<sp/>cmp,<sp/>attr)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor">attr<sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor">name##_RB_INSERT_COLOR(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*parent,<sp/>*gparent,<sp/>*tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>((parent<sp/>=<sp/>RB_PARENT(elm,<sp/>field))<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(parent,<sp/>field)<sp/>==<sp/>RB_RED)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gparent<sp/>=<sp/>RB_PARENT(parent,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(parent<sp/>==<sp/>RB_LEFT(gparent,<sp/>field))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_RIGHT(gparent,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tmp<sp/>&amp;&amp;<sp/>RB_COLOR(tmp,<sp/>field)<sp/>==<sp/>RB_RED)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(tmp,<sp/>field)<sp/>=<sp/>RB_BLACK;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_SET_BLACKRED(parent,<sp/>gparent,<sp/>field);\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>gparent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_RIGHT(parent,<sp/>field)<sp/>==<sp/>elm)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_LEFT(head,<sp/>parent,<sp/>tmp,<sp/>field);\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>parent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_SET_BLACKRED(parent,<sp/>gparent,<sp/>field);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_RIGHT(head,<sp/>gparent,<sp/>tmp,<sp/>field);<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_LEFT(gparent,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tmp<sp/>&amp;&amp;<sp/>RB_COLOR(tmp,<sp/>field)<sp/>==<sp/>RB_RED)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(tmp,<sp/>field)<sp/>=<sp/>RB_BLACK;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_SET_BLACKRED(parent,<sp/>gparent,<sp/>field);\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>gparent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(parent,<sp/>field)<sp/>==<sp/>elm)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_RIGHT(head,<sp/>parent,<sp/>tmp,<sp/>field);\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>parent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_SET_BLACKRED(parent,<sp/>gparent,<sp/>field);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_LEFT(head,<sp/>gparent,<sp/>tmp,<sp/>field);<sp/><sp/>\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_COLOR(head-&gt;rbh_root,<sp/>field)<sp/>=<sp/>RB_BLACK;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor">attr<sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor">name##_RB_REMOVE_COLOR(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*parent,<sp/>struct<sp/>type<sp/>*elm)<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>((elm<sp/>==<sp/>NULL<sp/>||<sp/>RB_COLOR(elm,<sp/>field)<sp/>==<sp/>RB_BLACK)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>!=<sp/>RB_ROOT(head))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(parent,<sp/>field)<sp/>==<sp/>elm)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_RIGHT(parent,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_COLOR(tmp,<sp/>field)<sp/>==<sp/>RB_RED)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_SET_BLACKRED(tmp,<sp/>parent,<sp/>field);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_LEFT(head,<sp/>parent,<sp/>tmp,<sp/>field);\</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_RIGHT(parent,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((RB_LEFT(tmp,<sp/>field)<sp/>==<sp/>NULL<sp/>||<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(RB_LEFT(tmp,<sp/>field),<sp/>field)<sp/>==<sp/>RB_BLACK)<sp/>&amp;&amp;\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RB_RIGHT(tmp,<sp/>field)<sp/>==<sp/>NULL<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(RB_RIGHT(tmp,<sp/>field),<sp/>field)<sp/>==<sp/>RB_BLACK))<sp/>{\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(tmp,<sp/>field)<sp/>=<sp/>RB_RED;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>parent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_RIGHT(tmp,<sp/>field)<sp/>==<sp/>NULL<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(RB_RIGHT(tmp,<sp/>field),<sp/>field)<sp/>==<sp/>RB_BLACK)<sp/>{\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*oleft;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((oleft<sp/>=<sp/>RB_LEFT(tmp,<sp/>field)))\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(oleft,<sp/>field)<sp/>=<sp/>RB_BLACK;\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(tmp,<sp/>field)<sp/>=<sp/>RB_RED;<sp/><sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_RIGHT(head,<sp/>tmp,<sp/>oleft,<sp/>field);\</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_RIGHT(parent,<sp/>field);<sp/><sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(tmp,<sp/>field)<sp/>=<sp/>RB_COLOR(parent,<sp/>field);\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(parent,<sp/>field)<sp/>=<sp/>RB_BLACK;<sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_RIGHT(tmp,<sp/>field))<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(RB_RIGHT(tmp,<sp/>field),<sp/>field)<sp/>=<sp/>RB_BLACK;\</highlight></codeline>
<codeline lineno="478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_LEFT(head,<sp/>parent,<sp/>tmp,<sp/>field);\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_ROOT(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_LEFT(parent,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_COLOR(tmp,<sp/>field)<sp/>==<sp/>RB_RED)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_SET_BLACKRED(tmp,<sp/>parent,<sp/>field);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_RIGHT(head,<sp/>parent,<sp/>tmp,<sp/>field);\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_LEFT(parent,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((RB_LEFT(tmp,<sp/>field)<sp/>==<sp/>NULL<sp/>||<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(RB_LEFT(tmp,<sp/>field),<sp/>field)<sp/>==<sp/>RB_BLACK)<sp/>&amp;&amp;\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RB_RIGHT(tmp,<sp/>field)<sp/>==<sp/>NULL<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(RB_RIGHT(tmp,<sp/>field),<sp/>field)<sp/>==<sp/>RB_BLACK))<sp/>{\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(tmp,<sp/>field)<sp/>=<sp/>RB_RED;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>parent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(tmp,<sp/>field)<sp/>==<sp/>NULL<sp/>||<sp/><sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(RB_LEFT(tmp,<sp/>field),<sp/>field)<sp/>==<sp/>RB_BLACK)<sp/>{\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*oright;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((oright<sp/>=<sp/>RB_RIGHT(tmp,<sp/>field)))\</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(oright,<sp/>field)<sp/>=<sp/>RB_BLACK;\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(tmp,<sp/>field)<sp/>=<sp/>RB_RED;<sp/><sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_LEFT(head,<sp/>tmp,<sp/>oright,<sp/>field);\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_LEFT(parent,<sp/>field);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(tmp,<sp/>field)<sp/>=<sp/>RB_COLOR(parent,<sp/>field);\</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(parent,<sp/>field)<sp/>=<sp/>RB_BLACK;<sp/>\</highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(tmp,<sp/>field))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(RB_LEFT(tmp,<sp/>field),<sp/>field)<sp/>=<sp/>RB_BLACK;\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROTATE_RIGHT(head,<sp/>parent,<sp/>tmp,<sp/>field);\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_ROOT(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_COLOR(elm,<sp/>field)<sp/>=<sp/>RB_BLACK;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor">name##_RB_REMOVE(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="523"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*child,<sp/>*parent,<sp/>*old<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>color;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="525"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(elm,<sp/>field)<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="526"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>RB_RIGHT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(RB_RIGHT(elm,<sp/>field)<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="528"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>RB_LEFT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*left;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_RIGHT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>((left<sp/>=<sp/>RB_LEFT(elm,<sp/>field)))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>left;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>RB_RIGHT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="536"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/>RB_COLOR(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="537"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(child)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="538"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_PARENT(child,<sp/>field)<sp/>=<sp/>parent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(parent)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(parent,<sp/>field)<sp/>==<sp/>elm)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_LEFT(parent,<sp/>field)<sp/>=<sp/>child;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_RIGHT(parent,<sp/>field)<sp/>=<sp/>child;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_AUGMENT(parent);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="545"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROOT(head)<sp/>=<sp/>child;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_PARENT(elm,<sp/>field)<sp/>==<sp/>old)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm)-&gt;field<sp/>=<sp/>(old)-&gt;field;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_PARENT(old,<sp/>field))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(RB_PARENT(old,<sp/>field),<sp/>field)<sp/>==<sp/>old)\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_LEFT(RB_PARENT(old,<sp/>field),<sp/>field)<sp/>=<sp/>elm;\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_RIGHT(RB_PARENT(old,<sp/>field),<sp/>field)<sp/>=<sp/>elm;\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_AUGMENT(RB_PARENT(old,<sp/>field));<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROOT(head)<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="558"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_PARENT(RB_LEFT(old,<sp/>field),<sp/>field)<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_RIGHT(old,<sp/>field))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="560"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_PARENT(RB_RIGHT(old,<sp/>field),<sp/>field)<sp/>=<sp/>elm;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(parent)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>parent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="563"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_AUGMENT(left);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="565"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while<sp/>((left<sp/>=<sp/>RB_PARENT(left,<sp/>field)));<sp/><sp/>\</highlight></codeline>
<codeline lineno="566"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>color;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>color<sp/>=<sp/>RB_COLOR(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="571"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(child)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_PARENT(child,<sp/>field)<sp/>=<sp/>parent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(parent)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(parent,<sp/>field)<sp/>==<sp/>elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_LEFT(parent,<sp/>field)<sp/>=<sp/>child;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_RIGHT(parent,<sp/>field)<sp/>=<sp/>child;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="578"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_AUGMENT(parent);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="579"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="580"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROOT(head)<sp/>=<sp/>child;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor">color:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="582"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(color<sp/>==<sp/>RB_BLACK)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="583"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##_RB_REMOVE_COLOR(head,<sp/>parent,<sp/>child);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="584"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(old);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="585"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="586"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="587"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Inserts<sp/>a<sp/>node<sp/>into<sp/>the<sp/>RB<sp/>tree<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="588"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="589"><highlight class="preprocessor">name##_RB_INSERT(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*parent<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>comp<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_ROOT(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(tmp)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="596"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>(cmp)(elm,<sp/>parent);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(comp<sp/>&lt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_LEFT(tmp,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(comp<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_RIGHT(tmp,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="604"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="605"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_SET(elm,<sp/>parent,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="606"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(parent<sp/>!=<sp/>NULL)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="607"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(comp<sp/>&lt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="608"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_LEFT(parent,<sp/>field)<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="609"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_RIGHT(parent,<sp/>field)<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="611"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_AUGMENT(parent);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="613"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RB_ROOT(head)<sp/>=<sp/>elm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name##_RB_INSERT_COLOR(head,<sp/>elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="615"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="617"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="618"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Finds<sp/>the<sp/>node<sp/>with<sp/>the<sp/>same<sp/>key<sp/>as<sp/>elm<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="619"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor">name##_RB_FIND(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="621"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="622"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*tmp<sp/>=<sp/>RB_ROOT(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>comp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="624"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(tmp)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="625"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>cmp(elm,<sp/>tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="626"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(comp<sp/>&lt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_LEFT(tmp,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(comp<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="629"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_RIGHT(tmp,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="630"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="632"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="633"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="634"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="635"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="636"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Finds<sp/>the<sp/>first<sp/>node<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>search<sp/>key<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/>\</highlight></codeline>
<codeline lineno="637"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="638"><highlight class="preprocessor">name##_RB_NFIND(struct<sp/>name<sp/>*head,<sp/>struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="639"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="640"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*tmp<sp/>=<sp/>RB_ROOT(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="641"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*res<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="642"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>comp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="643"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(tmp)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="644"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>cmp(elm,<sp/>tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="645"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(comp<sp/>&lt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="646"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_LEFT(tmp,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="648"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="649"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(comp<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_RIGHT(tmp,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="653"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="654"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(res);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="655"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="656"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="657"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>ARGSUSED<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="659"><highlight class="preprocessor">name##_RB_NEXT(struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(RB_RIGHT(elm,<sp/>field))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="662"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_RIGHT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="663"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(RB_LEFT(elm,<sp/>field))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_LEFT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="666"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_PARENT(elm,<sp/>field)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm<sp/>==<sp/>RB_LEFT(RB_PARENT(elm,<sp/>field),<sp/>field)))<sp/>\</highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="669"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(RB_PARENT(elm,<sp/>field)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm<sp/>==<sp/>RB_RIGHT(RB_PARENT(elm,<sp/>field),<sp/>field)))\</highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="673"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="674"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="675"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="676"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="677"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="678"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="679"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>ARGSUSED<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="680"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor">name##_RB_PREV(struct<sp/>type<sp/>*elm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(RB_LEFT(elm,<sp/>field))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_LEFT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(RB_RIGHT(elm,<sp/>field))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_RIGHT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(RB_PARENT(elm,<sp/>field)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm<sp/>==<sp/>RB_RIGHT(RB_PARENT(elm,<sp/>field),<sp/>field)))<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="690"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="691"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(RB_PARENT(elm,<sp/>field)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="693"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elm<sp/>==<sp/>RB_LEFT(RB_PARENT(elm,<sp/>field),<sp/>field)))\</highlight></codeline>
<codeline lineno="694"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="695"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elm<sp/>=<sp/>RB_PARENT(elm,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="696"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="698"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(elm);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="699"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="700"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="701"><highlight class="preprocessor">attr<sp/>struct<sp/>type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="702"><highlight class="preprocessor">name##_RB_MINMAX(struct<sp/>name<sp/>*head,<sp/>int<sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="703"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="704"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*tmp<sp/>=<sp/>RB_ROOT(head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="705"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>type<sp/>*parent<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="706"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(tmp)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="707"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>tmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="708"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(val<sp/>&lt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="709"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_LEFT(tmp,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="710"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="711"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>RB_RIGHT(tmp,<sp/>field);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="712"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="713"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(parent);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="714"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="systree_8h_1a2b26b7c6b32e00d863fd1ae346fb3bb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_NEGINF<sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="systree_8h_1a763f4baa123753e9fc466ea178229715" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_INF<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="systree_8h_1a5b9861a8925c953340e483ae0a0f5120" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_INSERT(name,<sp/>x,<sp/>y)<sp/><sp/><sp/>name##_RB_INSERT(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="systree_8h_1ad97eb44d2c39debda8cfbbbbcb354cce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_REMOVE(name,<sp/>x,<sp/>y)<sp/><sp/><sp/>name##_RB_REMOVE(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721" refid="systree_8h_1af0ae89dc9239fbe8c056eeed595cedac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_FIND(name,<sp/>x,<sp/>y)<sp/>name##_RB_FIND(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="systree_8h_1a70e614029f71a8debff2d42ce72a160b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_NFIND(name,<sp/>x,<sp/>y)<sp/><sp/><sp/><sp/>name##_RB_NFIND(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="systree_8h_1a2852fb3d5ccc9f1d3a245096fee9eb0b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_NEXT(name,<sp/>x,<sp/>y)<sp/>name##_RB_NEXT(y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="systree_8h_1a2e0a645fac7c63886eaa1bbc78ca3696" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_PREV(name,<sp/>x,<sp/>y)<sp/>name##_RB_PREV(y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="systree_8h_1a0827c86d4c8c63495f665141d857f380" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_MIN(name,<sp/>x)<sp/><sp/><sp/><sp/><sp/>name##_RB_MINMAX(x,<sp/>RB_NEGINF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="systree_8h_1a6a78e155b3b5a296ba9c0ab15b70fb8d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_MAX(name,<sp/>x)<sp/><sp/><sp/><sp/><sp/>name##_RB_MINMAX(x,<sp/>RB_INF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="systree_8h_1a1d7436c418f56d0b50ebc4c4273d71b6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_FOREACH(x,<sp/>name,<sp/>head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="729"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((x)<sp/>=<sp/>RB_MIN(name,<sp/>head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="730"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)<sp/>!=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="731"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)<sp/>=<sp/>name##_RB_NEXT(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="systree_8h_1aabadd40831e862632d55eb8c867fd258" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_FOREACH_SAFE(x,<sp/>name,<sp/>head,<sp/>y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="734"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((x)<sp/>=<sp/>RB_MIN(name,<sp/>head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="735"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>((y)<sp/>=<sp/>name##_RB_NEXT(x),<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="736"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)<sp/>=<sp/>(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="systree_8h_1ae6d8b4211e268f05895ea7c312873968" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_FOREACH_REVERSE(x,<sp/>name,<sp/>head)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="739"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((x)<sp/>=<sp/>RB_MAX(name,<sp/>head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="740"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)<sp/>!=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="741"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)<sp/>=<sp/>name##_RB_PREV(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="systree_8h_1ac278702349f5b1ac7c63d069b16d239b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RB_FOREACH_REVERSE_SAFE(x,<sp/>name,<sp/>head,<sp/>y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="744"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>((x)<sp/>=<sp/>RB_MAX(name,<sp/>head);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="745"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>((y)<sp/>=<sp/>name##_RB_PREV(x),<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="746"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)<sp/>=<sp/>(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>_SYS_TREE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="common/systree.h"/>
  </compounddef>
</doxygen>
