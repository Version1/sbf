<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_common_8h" kind="file" language="C++">
    <compoundname>sbfCommon.h</compoundname>
    <includes refid="sbf_version_8h" local="yes">sbfVersion.h</includes>
    <includes local="no">event.h</includes>
    <includes refid="syshash_8h" local="yes">syshash.h</includes>
    <includes refid="sysqueue_8h" local="yes">sysqueue.h</includes>
    <includes refid="systree_8h" local="yes">systree.h</includes>
    <includes refid="sbf_fatal_8h" local="yes">sbfFatal.h</includes>
    <includes refid="sbf_log_8h" local="yes">sbfLog.h</includes>
    <includes refid="sbf_memory_8h" local="yes">sbfMemory.h</includes>
    <includedby refid="sbf_arguments_8h" local="yes">common/sbfArguments.h</includedby>
    <includedby refid="sbf_fatal_8h" local="yes">common/sbfFatal.h</includedby>
    <includedby refid="sbf_log_8h" local="yes">common/sbfLog.h</includedby>
    <includedby refid="sbf_memory_8h" local="yes">common/sbfMemory.h</includedby>
    <includedby refid="sbf_atomic_8h" local="yes">common/sbfAtomic.h</includedby>
    <includedby refid="sbf_buffer_8h" local="yes">common/sbfBuffer.h</includedby>
    <includedby refid="sbf_pool_8h" local="yes">common/sbfPool.h</includedby>
    <includedby refid="sbf_ref_count_8h" local="yes">common/sbfRefCount.h</includedby>
    <includedby refid="sbf_cache_file_8h" local="yes">common/sbfCacheFile.h</includedby>
    <includedby refid="sbf_csv_parser_8h" local="yes">common/sbfCsvParser.h</includedby>
    <includedby refid="sbf_deque_8h" local="yes">common/sbfDeque.h</includedby>
    <includedby refid="sbf_guid_8h" local="yes">common/sbfGuid.h</includedby>
    <includedby refid="sbf_huge_pages_8h" local="yes">common/sbfHugePages.h</includedby>
    <includedby refid="sbf_interface_8h" local="yes">common/sbfInterface.h</includedby>
    <includedby refid="sbf_key_value_8h" local="yes">common/sbfKeyValue.h</includedby>
    <includedby refid="sbf_log_file_8h" local="yes">common/sbfLogFile.h</includedby>
    <includedby refid="sbf_number_string_8h" local="yes">common/sbfNumberString.h</includedby>
    <includedby refid="sbf_path_8h" local="yes">common/sbfPath.h</includedby>
    <includedby refid="sbf_perf_counter_8h" local="yes">common/sbfPerfCounter.h</includedby>
    <includedby refid="sbf_properties_8h" local="yes">common/sbfProperties.h</includedby>
    <includedby refid="sbf_tcp_connection_8h" local="yes">common/sbfTcpConnection.h</includedby>
    <includedby refid="sbf_tcp_listener_8h" local="yes">common/sbfTcpListener.h</includedby>
    <includedby refid="sbf_udp_multicast_8h" local="yes">common/sbfUdpMulticast.h</includedby>
    <includedby refid="sbf_event_8h" local="yes">core/sbfEvent.h</includedby>
    <includedby refid="sbf_hi_res_timer_8h" local="yes">core/sbfHiResTimer.h</includedby>
    <includedby refid="sbf_mw_8h" local="yes">core/sbfMw.h</includedby>
    <includedby refid="sbf_queue_8h" local="yes">core/sbfQueue.h</includedby>
    <includedby refid="sbf_timer_8h" local="yes">core/sbfTimer.h</includedby>
    <includedby refid="sbf_request_pub_8h" local="yes">requestreply/sbfRequestPub.h</includedby>
    <includedby refid="sbf_request_reply_8h" local="yes">requestreply/sbfRequestReply.h</includedby>
    <includedby refid="sbf_request_sub_8h" local="yes">requestreply/sbfRequestSub.h</includedby>
    <includedby refid="sbf_batch_8h" local="yes">transport/sbfBatch.h</includedby>
    <includedby refid="sbf_handler_8h" local="yes">transport/sbfHandler.h</includedby>
    <includedby refid="sbf_tport_8h" local="yes">transport/sbfTport.h</includedby>
    <includedby refid="sbf_pub_8h" local="yes">transport/sbfPub.h</includedby>
    <includedby refid="sbf_sub_8h" local="yes">transport/sbfSub.h</includedby>
    <includedby refid="sbf_topic_8h" local="yes">transport/sbfTopic.h</includedby>
    <incdepgraph>
      <node id="99">
        <label>event.h</label>
      </node>
      <node id="98">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="100">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>sys/types.h</label>
      </node>
      <node id="97">
        <label>common/sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="102">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="105">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="114">
        <label>common/sbfPool.h</label>
        <link refid="sbf_pool_8h"/>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>common/sbfNumberString.h</label>
        <link refid="sbf_number_string_8h"/>
      </node>
      <node id="111">
        <label>common/sbfProperties.h</label>
        <link refid="sbf_properties_8h"/>
      </node>
      <node id="130">
        <label>common/sbfCacheFile.h</label>
        <link refid="sbf_cache_file_8h"/>
      </node>
      <node id="121">
        <label>handlers/common/sbfCommonHandler.h</label>
        <link refid="sbf_common_handler_8h"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>requestreply/sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>common/sbfAtomic.h</label>
        <link refid="sbf_atomic_8h"/>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>transport/sbfSub.h</label>
        <link refid="sbf_sub_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>transport/sbfTopic.h</label>
        <link refid="sbf_topic_8h"/>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>common/sbfArguments.h</label>
        <link refid="sbf_arguments_8h"/>
      </node>
      <node id="118">
        <label>handlers/udp/sbfUdpHandler.h</label>
        <link refid="sbf_udp_handler_8h"/>
      </node>
      <node id="143">
        <label>core/sbfEvent.h</label>
        <link refid="sbf_event_8h"/>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>transport/sbfBatch.h</label>
        <link refid="sbf_batch_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>common/sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>common/sbfKeyValue.h</label>
        <link refid="sbf_key_value_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>common/sbfDeque.h</label>
        <link refid="sbf_deque_8h"/>
      </node>
      <node id="115">
        <label>common/sbfBuffer.h</label>
        <link refid="sbf_buffer_8h"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>common/sbfHugePages.h</label>
        <link refid="sbf_huge_pages_8h"/>
      </node>
      <node id="144">
        <label>core/sbfHiResTimer.h</label>
        <link refid="sbf_hi_res_timer_8h"/>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.h</label>
        <link refid="sbf_tcp_mesh_handler_8h"/>
      </node>
      <node id="127">
        <label>transport/sbfPub.h</label>
        <link refid="sbf_pub_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>common/sbfTcpConnection.h</label>
        <link refid="sbf_tcp_connection_8h"/>
      </node>
      <node id="135">
        <label>common/sbfInterface.h</label>
        <link refid="sbf_interface_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>common/sbfPath.h</label>
        <link refid="sbf_path_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>common/sbfRefCount.h</label>
        <link refid="sbf_ref_count_8h"/>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>requestreply/sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
      </node>
      <node id="126">
        <label>transport/sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>core/sbfTimer.h</label>
        <link refid="sbf_timer_8h"/>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>common/sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>common/sbfUdpMulticast.h</label>
        <link refid="sbf_udp_multicast_8h"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>transport/sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>common/sbfGuid.h</label>
        <link refid="sbf_guid_8h"/>
      </node>
      <node id="131">
        <label>common/sbfCsvParser.h</label>
        <link refid="sbf_csv_parser_8h"/>
      </node>
      <node id="137">
        <label>core/sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>common/sbfPerfCounter.h</label>
        <link refid="sbf_perf_counter_8h"/>
      </node>
      <node id="110">
        <label>common/sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>common/sbfTcpListener.h</label>
        <link refid="sbf_tcp_listener_8h"/>
      </node>
      <node id="145">
        <label>core/sbfQueue.h</label>
        <link refid="sbf_queue_8h"/>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>common/sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>common/sbfLogFile.h</label>
        <link refid="sbf_log_file_8h"/>
      </node>
      <node id="123">
        <label>requestreply/sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" prot="public" static="no">
        <name>SBF_BEGIN_DECLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="17" column="10" bodyfile="common/sbfCommon.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" prot="public" static="no">
        <name>SBF_END_DECLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="18" column="9" bodyfile="common/sbfCommon.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_common_8h_1a54ce656281e5eaed9432a9ae836d0b67" prot="public" static="no">
        <name>SBF_MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &gt; (b) ? (b) : (a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minium of a and b. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="44" column="9" bodyfile="common/sbfCommon.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_common_8h_1a767391c2519ffbd34a281580efe446d5" prot="public" static="no">
        <name>SBF_MAX</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &lt; (b) ? (b) : (a))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum of a and b. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="46" column="9" bodyfile="common/sbfCommon.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_common_8h_1aeeda2fbe1eb67285f15b12eb110b7b43" prot="public" static="no">
        <name>SBF_PAD</name>
        <param><defname>size</defname></param>
        <param><defname>to</defname></param>
        <initializer>(((size) + ((to) - 1)) &amp; ~((to) - 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="48" column="9" bodyfile="common/sbfCommon.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_common_8h_1aae913d81ea568402111eccddb0724cb0" prot="public" static="no">
        <name>SBF_ARRAYSIZE</name>
        <param><defname>a</defname></param>
        <initializer>(sizeof (a) / sizeof ((a)[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of items in the array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="51" column="9" bodyfile="common/sbfCommon.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sbf_common_8h_1a0960fa2ea4bd3f81c4234187b41ccd53" prot="public" static="no">
        <name>SBF_RB_TREE</name>
        <param><defname>name</defname></param>
        <param><defname>suffix</defname></param>
        <param><defname>entry</defname></param>
        <param><defname>compare</defname></param>
        <initializer><ref refid="systree_8h_1a8036fa6f14fe429545b9228ec92e026f" kindref="member">RB_HEAD</ref> (name ## suffix ## Impl, name ## Impl);         \
    typedef struct name ## suffix ## Impl name ## suffix;   \
                                                            \
    static SBF_INLINE int                                   \
    name ## suffix ## Cmp (name lhs, name rhs)              \
    compare                                                 \
    <ref refid="systree_8h_1a70771841c3ed0487d47ed426bc6b089e" kindref="member">RB_GENERATE_STATIC</ref> (name ## suffix ## Impl,             \
                        name ## Impl,                       \
                        entry,                              \
                        name ## suffix ## Cmp)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RB Tree structure definition. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="57" column="9" bodyfile="common/sbfCommon.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="sbf_common_8h_1a55668977c9501578c245e806c1212de9" prot="public" static="no">
        <type>int</type>
        <definition>typedef int sbfError</definition>
        <argsstring></argsstring>
        <name>sbfError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error type declaration </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="54" column="1" bodyfile="common/sbfCommon.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_common_8h_1ac7cf0b424deab72ab70fc08f5792c716" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SBF_INLINE uint64_t</type>
        <definition>static SBF_INLINE uint64_t sbf_htonll</definition>
        <argsstring>(uint64_t val)</argsstring>
        <name>sbf_htonll</name>
        <param>
          <type>uint64_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Little endian to big endian transformation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to be transformed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the given value in big endian. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="75" column="1" bodyfile="common/sbfCommon.h" bodystart="75" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="sbf_common_8h_1a3b661668447ead9d185006228fe5649f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SBF_INLINE uint64_t</type>
        <definition>static SBF_INLINE uint64_t sbf_ntohll</definition>
        <argsstring>(uint64_t val)</argsstring>
        <name>sbf_ntohll</name>
        <param>
          <type>uint64_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>From bigendian to little endian transformation. </para>        </briefdescription>
        <detaileddescription>
<para>define the htonll standard as SBF implementation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to be transformed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the given value in little endian. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommon.h" line="97" column="1" bodyfile="common/sbfCommon.h" bodystart="97" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file declares some useful structures and functions for general purposes. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>© Copyright 2016 Neueda all rights reserved. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#ifndef<sp/>_SBF_COMMON_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_COMMON_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_version_8h" kindref="compound">sbfVersion.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBF_BEGIN_DECLS<sp/>extern<sp/>&quot;C&quot;<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBF_END_DECLS<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBF_BEGIN_DECLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBF_END_DECLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>linux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sbfCommonLinux.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sbfCommonWin32.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sbfCommonDarwin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="syshash_8h" kindref="compound">syshash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sysqueue_8h" kindref="compound">sysqueue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="systree_8h" kindref="compound">systree.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_fatal_8h" kindref="compound">sbfFatal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_log_8h" kindref="compound">sbfLog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_memory_8h" kindref="compound">sbfMemory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="sbf_common_8h_1a54ce656281e5eaed9432a9ae836d0b67" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_MIN(a,<sp/>b)<sp/>((a)<sp/>&gt;<sp/>(b)<sp/>?<sp/>(b)<sp/>:<sp/>(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="sbf_common_8h_1a767391c2519ffbd34a281580efe446d5" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_MAX(a,<sp/>b)<sp/>((a)<sp/>&lt;<sp/>(b)<sp/>?<sp/>(b)<sp/>:<sp/>(a))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="sbf_common_8h_1aeeda2fbe1eb67285f15b12eb110b7b43" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SBF_PAD(size,<sp/>to)<sp/>(((size)<sp/>+<sp/>((to)<sp/>-<sp/>1))<sp/>&amp;<sp/>~((to)<sp/>-<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="sbf_common_8h_1aae913d81ea568402111eccddb0724cb0" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_ARRAYSIZE(a)<sp/>(sizeof<sp/>(a)<sp/>/<sp/>sizeof<sp/>((a)[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref>;<sp/></highlight><highlight class="comment">/*<sp/>errno<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="sbf_common_8h_1a0960fa2ea4bd3f81c4234187b41ccd53" refkind="member"><highlight class="preprocessor">#define<sp/>SBF_RB_TREE(name,<sp/>suffix,<sp/>entry,<sp/>compare)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_HEAD<sp/>(name<sp/>##<sp/>suffix<sp/>##<sp/>Impl,<sp/>name<sp/>##<sp/>Impl);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>struct<sp/>name<sp/>##<sp/>suffix<sp/>##<sp/>Impl<sp/>name<sp/>##<sp/>suffix;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>SBF_INLINE<sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>name<sp/>##<sp/>suffix<sp/>##<sp/>Cmp<sp/>(name<sp/>lhs,<sp/>name<sp/>rhs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>compare<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>RB_GENERATE_STATIC<sp/>(name<sp/>##<sp/>suffix<sp/>##<sp/>Impl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>##<sp/>Impl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>##<sp/>suffix<sp/>##<sp/>Cmp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SBF_INLINE<sp/>uint64_t</highlight></codeline>
<codeline lineno="75"><highlight class="normal">sbf_htonll<sp/>(uint64_t<sp/>val)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>b;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>htonl<sp/>(val<sp/>&amp;<sp/>0xffffffff);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>htonl<sp/>(val<sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint64_t)b<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>t);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor">#ifndef<sp/>htonll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>htonll<sp/>sbf_htonll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SBF_INLINE<sp/>uint64_t</highlight></codeline>
<codeline lineno="97"><highlight class="normal">sbf_ntohll<sp/>(uint64_t<sp/>val)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>b;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>ntohl<sp/>(val<sp/>&amp;<sp/>0xffffffff);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>ntohl<sp/>(val<sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint64_t)b<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>t);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor">#ifndef<sp/>ntohll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ntohll<sp/>sbf_ntohll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_COMMON_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="common/sbfCommon.h"/>
  </compounddef>
</doxygen>
