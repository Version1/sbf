<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_common_linux_8c" kind="file" language="C++">
    <compoundname>sbfCommonLinux.c</compoundname>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <incdepgraph>
      <node id="414">
        <label>event.h</label>
      </node>
      <node id="413">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="415">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="419">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="412" relation="include">
        </childnode>
      </node>
      <node id="416">
        <label>sys/types.h</label>
      </node>
      <node id="412">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
      </node>
      <node id="418">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="411">
        <label>common/sbfCommonLinux.c</label>
        <link refid="sbf_common_linux_8c"/>
        <childnode refid="412" relation="include">
        </childnode>
      </node>
      <node id="417">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="420">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="412" relation="include">
        </childnode>
      </node>
      <node id="421">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="412" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_common_linux_8c_1a312c2c94c64b2ee6964edd6830e4862f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sbfMutex_init</definition>
        <argsstring>(pthread_mutex_t *m, int recursive)</argsstring>
        <name>sbfMutex_init</name>
        <param>
          <type>pthread_mutex_t *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recursive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfCommonLinux.c" line="4" column="1" bodyfile="common/sbfCommonLinux.c" bodystart="4" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="sbf_common_linux_8c_1a312c2c94c64b2ee6964edd6830e4862f" refkind="member"><highlight class="normal"><ref refid="sbf_common_linux_8c_1a312c2c94c64b2ee6964edd6830e4862f" kindref="member">sbfMutex_init</ref><sp/>(pthread_mutex_t*<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recursive)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutexattr_t<sp/>a;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutexattr_init<sp/>(&amp;a);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recursive)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutexattr_settype<sp/>(&amp;a,<sp/>PTHREAD_MUTEX_RECURSIVE);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>pthread_mutex_init<sp/>(m,<sp/>&amp;a);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutexattr_destroy<sp/>(&amp;a);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="common/sbfCommonLinux.c"/>
  </compounddef>
</doxygen>
