<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_sub_8c" kind="file" language="C++">
    <compoundname>sbfSub.c</compoundname>
    <includes refid="sbf_tport_8h" local="yes">sbfTport.h</includes>
    <includes refid="sbf_tport_private_8h" local="yes">sbfTportPrivate.h</includes>
    <incdepgraph>
      <node id="3562">
        <label>sbfPool.h</label>
        <link refid="sbf_pool_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3564" relation="include">
        </childnode>
      </node>
      <node id="3554">
        <label>event.h</label>
      </node>
      <node id="3585">
        <label>sbfPubPrivate.h</label>
        <link refid="sbf_pub_private_8h"/>
      </node>
      <node id="3583">
        <label>sbfProperties.h</label>
        <link refid="sbf_properties_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3570" relation="include">
        </childnode>
        <childnode refid="3560" relation="include">
        </childnode>
        <childnode refid="3584" relation="include">
        </childnode>
      </node>
      <node id="3563">
        <label>sbfAtomic.h</label>
        <link refid="sbf_atomic_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3548">
        <label>transport/sbfSub.c</label>
        <link refid="sbf_sub_8c"/>
        <childnode refid="3549" relation="include">
        </childnode>
        <childnode refid="3576" relation="include">
        </childnode>
      </node>
      <node id="3574">
        <label>sbfSub.h</label>
        <link refid="sbf_sub_8h"/>
        <childnode refid="3551" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3571" relation="include">
        </childnode>
      </node>
      <node id="3575">
        <label>sbfTopic.h</label>
        <link refid="sbf_topic_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3553">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="3555">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="3556" relation="include">
        </childnode>
      </node>
      <node id="3568">
        <label>sbfEvent.h</label>
        <link refid="sbf_event_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3550">
        <label>sbfBatch.h</label>
        <link refid="sbf_batch_8h"/>
        <childnode refid="3551" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3587">
        <label>sbfTopicPrivate.h</label>
        <link refid="sbf_topic_private_8h"/>
      </node>
      <node id="3559">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3582">
        <label>event2/listener.h</label>
      </node>
      <node id="3570">
        <label>sbfKeyValue.h</label>
        <link refid="sbf_key_value_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3578">
        <label>sbfDeque.h</label>
        <link refid="sbf_deque_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3551">
        <label>sbfBuffer.h</label>
        <link refid="sbf_buffer_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3562" relation="include">
        </childnode>
        <childnode refid="3565" relation="include">
        </childnode>
        <childnode refid="3566" relation="include">
        </childnode>
      </node>
      <node id="3569">
        <label>sbfHiResTimer.h</label>
        <link refid="sbf_hi_res_timer_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3556">
        <label>sys/types.h</label>
      </node>
      <node id="3573">
        <label>sbfPub.h</label>
        <link refid="sbf_pub_8h"/>
        <childnode refid="3551" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3571" relation="include">
        </childnode>
      </node>
      <node id="3581">
        <label>event2/thread.h</label>
      </node>
      <node id="3566">
        <label>sbfBufferInline.h</label>
        <link refid="sbf_buffer_inline_8h"/>
      </node>
      <node id="3580">
        <label>sbfMwPrivate.h</label>
        <link refid="sbf_mw_private_8h"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3581" relation="include">
        </childnode>
        <childnode refid="3582" relation="include">
        </childnode>
      </node>
      <node id="3584">
        <label>sbfPath.h</label>
        <link refid="sbf_path_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3565">
        <label>sbfRefCount.h</label>
        <link refid="sbf_ref_count_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3579">
        <label>sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3549" relation="include">
        </childnode>
      </node>
      <node id="3572">
        <label>sbfTimer.h</label>
        <link refid="sbf_timer_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3552">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="3553" relation="include">
        </childnode>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3560" relation="include">
        </childnode>
        <childnode refid="3561" relation="include">
        </childnode>
      </node>
      <node id="3576">
        <label>sbfTportPrivate.h</label>
        <link refid="sbf_tport_private_8h"/>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3579" relation="include">
        </childnode>
        <childnode refid="3570" relation="include">
        </childnode>
        <childnode refid="3580" relation="include">
        </childnode>
        <childnode refid="3583" relation="include">
        </childnode>
        <childnode refid="3585" relation="include">
        </childnode>
        <childnode refid="3586" relation="include">
        </childnode>
        <childnode refid="3587" relation="include">
        </childnode>
      </node>
      <node id="3558">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="3549">
        <label>sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="3550" relation="include">
        </childnode>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
        <childnode refid="3573" relation="include">
        </childnode>
        <childnode refid="3574" relation="include">
        </childnode>
        <childnode refid="3575" relation="include">
        </childnode>
      </node>
      <node id="3557">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="3567">
        <label>sbfMw.h</label>
        <link refid="sbf_mw_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3568" relation="include">
        </childnode>
        <childnode refid="3569" relation="include">
        </childnode>
        <childnode refid="3570" relation="include">
        </childnode>
        <childnode refid="3571" relation="include">
        </childnode>
        <childnode refid="3572" relation="include">
        </childnode>
      </node>
      <node id="3560">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3577">
        <label>sbfBatchPrivate.h</label>
        <link refid="sbf_batch_private_8h"/>
        <childnode refid="3578" relation="include">
        </childnode>
      </node>
      <node id="3571">
        <label>sbfQueue.h</label>
        <link refid="sbf_queue_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3561">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="3552" relation="include">
        </childnode>
      </node>
      <node id="3586">
        <label>sbfSubPrivate.h</label>
        <link refid="sbf_sub_private_8h"/>
      </node>
      <node id="3564">
        <label>sbfPoolInline.h</label>
        <link refid="sbf_pool_inline_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_sub_8c_1abee56deee3921f002bfcf273d2ff4b35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> void</type>
        <definition>static SBF_INLINE void sbfSubFree</definition>
        <argsstring>(sbfSub sub)</argsstring>
        <name>sbfSubFree</name>
        <param>
          <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="5" column="1" bodyfile="transport/sbfSub.c" bodystart="5" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a6a2904e9e70acb99901ce842d4deab32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_common_win32_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref> <ref refid="sbf_tport_private_8h_1aba7fa8ef9bc17e1823a977f6b467a1fd" kindref="member">sbfTportStream</ref></type>
        <definition>static SBF_INLINE sbfTportStream sbfSubEnsureStream</definition>
        <argsstring>(sbfSub sub)</argsstring>
        <name>sbfSubEnsureStream</name>
        <param>
          <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="12" column="1" bodyfile="transport/sbfSub.c" bodystart="12" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1ab7cf3041b4e2ce4a1e3ddc3d77d12809" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfSubRemoveEventCb</definition>
        <argsstring>(int fd, short events, void *closure)</argsstring>
        <name>sbfSubRemoveEventCb</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>short</type>
          <declname>events</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="29" column="1" bodyfile="transport/sbfSub.c" bodystart="29" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a10f156f0d1a3918bd9ebad4a2fc7cf4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfSubAddEventCb</definition>
        <argsstring>(int fd, short events, void *closure)</argsstring>
        <name>sbfSubAddEventCb</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>short</type>
          <declname>events</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="80" column="1" bodyfile="transport/sbfSub.c" bodystart="80" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a227ad1fecb86cb0f03d82c256dda63da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfSubAddStreamCompleteCb</definition>
        <argsstring>(sbfHandlerHandle handle, sbfError error, void *closure)</argsstring>
        <name>sbfSubAddStreamCompleteCb</name>
        <param>
          <type><ref refid="sbf_handler_8h_1a3b6e24841bce408d649b41f0aebe6923" kindref="member">sbfHandlerHandle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref></type>
          <declname>error</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="117" column="1" bodyfile="transport/sbfSub.c" bodystart="117" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1ac11168ab097efedba52cddfdaddcd820" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfSubSetStream</definition>
        <argsstring>(sbfSub sub)</argsstring>
        <name>sbfSubSetStream</name>
        <param>
          <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="178" column="1" bodyfile="transport/sbfSub.c" bodystart="178" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1ae87ad061fdc0813427fbf2b9ba65e4a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfSubReadyQueueCb</definition>
        <argsstring>(sbfQueueItem item, void *closure)</argsstring>
        <name>sbfSubReadyQueueCb</name>
        <param>
          <type><ref refid="sbf_queue_8h_1ad7433ebbf8ca13f31f33dddedbdf5533" kindref="member">sbfQueueItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="219" column="1" bodyfile="transport/sbfSub.c" bodystart="219" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a8bc33e4d154dc5cdb4c9d2d4e8bc1639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfSub_ready</definition>
        <argsstring>(sbfSub sub)</argsstring>
        <name>sbfSub_ready</name>
        <param>
          <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="231" column="1" bodyfile="transport/sbfSub.c" bodystart="231" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a380c16f9f42f75835cfa85f516ef6b60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sbfSubMessageQueueCb</definition>
        <argsstring>(sbfQueueItem item, void *closure)</argsstring>
        <name>sbfSubMessageQueueCb</name>
        <param>
          <type><ref refid="sbf_queue_8h_1ad7433ebbf8ca13f31f33dddedbdf5533" kindref="member">sbfQueueItem</ref></type>
          <declname>item</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="247" column="1" bodyfile="transport/sbfSub.c" bodystart="247" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a3c875c2961ee1921708b14d32fa208d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfSub_message</definition>
        <argsstring>(sbfSub sub, sbfBuffer buffer)</argsstring>
        <name>sbfSub_message</name>
        <param>
          <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="sbf_buffer_8h_1a1e025c4644df2171527745712604be3b" kindref="member">sbfBuffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="261" column="1" bodyfile="transport/sbfSub.c" bodystart="261" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1ad3c0b1c131bc201d4c0a960877ddba16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
        <definition>sbfSub sbfSub_create</definition>
        <argsstring>(sbfTport tport, sbfQueue queue, const char *topic0, sbfSubReadyCb readyCb, sbfSubMessageCb messageCb, void *closure)</argsstring>
        <name>sbfSub_create</name>
        <param>
          <type><ref refid="sbf_tport_8h_1acbaf9d451442abe85c18e3583d746181" kindref="member">sbfTport</ref></type>
          <declname>tport</declname>
        </param>
        <param>
          <type><ref refid="sbf_queue_8h_1aa8b64a26e53f1e9c6eef9d3379d805e3" kindref="member">sbfQueue</ref></type>
          <declname>queue</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>topic0</declname>
        </param>
        <param>
          <type><ref refid="sbf_sub_8h_1a21874f3f038f352bd283fc2dffff1c2c" kindref="member">sbfSubReadyCb</ref></type>
          <declname>readyCb</declname>
        </param>
        <param>
          <type><ref refid="sbf_sub_8h_1a2f0fc2e02f85c60bea98943659ccbb4d" kindref="member">sbfSubMessageCb</ref></type>
          <declname>messageCb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="283" column="1" bodyfile="transport/sbfSub.c" bodystart="283" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a52ee27e0190a813dad71e9b89573a74d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfSub_destroy</definition>
        <argsstring>(sbfSub sub)</argsstring>
        <name>sbfSub_destroy</name>
        <param>
          <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="326" column="1" bodyfile="transport/sbfSub.c" bodystart="326" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a8f7efd024c297bffc9d8c5833a28c472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_topic_8h_1af2056340b1f24acb79c87fe529f7114e" kindref="member">sbfTopic</ref></type>
        <definition>sbfTopic sbfSub_getTopic</definition>
        <argsstring>(sbfSub sub)</argsstring>
        <name>sbfSub_getTopic</name>
        <param>
          <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="343" column="1" bodyfile="transport/sbfSub.c" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="sbf_sub_8c_1a7b8658afac567248ddda4fbf93bcd14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfSub_setQueueBypass</definition>
        <argsstring>(sbfSub sub, int set)</argsstring>
        <name>sbfSub_setQueueBypass</name>
        <param>
          <type><ref refid="sbf_sub_8h_1a2df9639af5595d3f96296d1432b80cba" kindref="member">sbfSub</ref></type>
          <declname>sub</declname>
        </param>
        <param>
          <type>int</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="transport/sbfSub.c" line="349" column="1" bodyfile="transport/sbfSub.c" bodystart="349" bodyend="357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_tport_8h" kindref="compound">sbfTport.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_tport_private_8h" kindref="compound">sbfTportPrivate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">sbfSubFree<sp/>(<ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1a154e4f4857a66c1e372281ce493ece99" kindref="member">sbfTopic_destroy</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(sub);</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="sbf_common_darwin_8h_1a0c1e0a65abe97d651f93f4cbf0f13e0e" kindref="member">SBF_INLINE</ref><sp/><ref refid="sbf_tport_private_8h_1aba7fa8ef9bc17e1823a977f6b467a1fd" kindref="member">sbfTportStream</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">sbfSubEnsureStream<sp/>(<ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_8h_1acbaf9d451442abe85c18e3583d746181" kindref="member">sbfTport</ref><sp/>tport<sp/>=<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a04edbd44efe29aa974958584577070a0" kindref="member">mTportStream</ref><sp/>==<sp/>NULL<sp/>||<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a04edbd44efe29aa974958584577070a0" kindref="member">mTportStream</ref>-&gt;mStream<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Take<sp/>and<sp/>release<sp/>lock<sp/>to<sp/>synchronize<sp/>AddStream<sp/>return<sp/>being<sp/>copied</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>into<sp/>the<sp/>member.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1afe21416b021add1d039070372b28c2b7" kindref="member">sbfMutex_lock</ref><sp/>(&amp;tport-&gt;mStreamsLock);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1ae9f52fb356fee346369a22cfef0def73" kindref="member">sbfMutex_unlock</ref><sp/>(&amp;tport-&gt;mStreamsLock);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a04edbd44efe29aa974958584577070a0" kindref="member">mTportStream</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">sbfSubRemoveEventCb<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_8h_1acbaf9d451442abe85c18e3583d746181" kindref="member">sbfTport</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tport<sp/>=<sp/>sub0-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_private_8h_1aba7fa8ef9bc17e1823a977f6b467a1fd" kindref="member">sbfTportStream</ref><sp/>tstream<sp/>=<sp/>sub0-&gt;<ref refid="structsbf_sub_impl_1a04edbd44efe29aa974958584577070a0" kindref="member">mTportStream</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_tport_topic_impl" kindref="compound">sbfTportTopic</ref><sp/><sp/>ttopic<sp/>=<sp/>sub0-&gt;<ref refid="structsbf_sub_impl_1a20f3c4cbff205f7f68ddc3fa00327313" kindref="member">mTportTopic</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>sub<sp/>is<sp/>waiting<sp/>for<sp/>the<sp/>stream<sp/>to<sp/>be<sp/>added,<sp/>the<sp/>remove<sp/>event<sp/>could</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>fired<sp/>before<sp/>it<sp/>is<sp/>ready.<sp/>If<sp/>so,<sp/>defer<sp/>the<sp/>remove<sp/>until<sp/>the<sp/>add</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>stream<sp/>complete<sp/>callback.<sp/>The<sp/>flag<sp/>is<sp/>set<sp/>so<sp/>the<sp/>later<sp/>callback<sp/>knows</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>callback<sp/>has<sp/>already<sp/>fired<sp/>and<sp/>isn&apos;t<sp/>queued<sp/>behind<sp/>it.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub0-&gt;<ref refid="structsbf_sub_impl_1aa9136a43819a4f9c1644672553368ab4" kindref="member">mReady</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0-&gt;<ref refid="structsbf_sub_impl_1aa5b08ad5aede06fecc266545bed3c798" kindref="member">mRemoved</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(tport-&gt;mLog,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;not<sp/>removing<sp/>subscription<sp/>%p<sp/>(%s);<sp/>not<sp/>ready&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(tport-&gt;mLog,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;removing<sp/>subscription<sp/>%p<sp/>(%s)<sp/>(stream<sp/>%p)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstream);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_private_8h_1a389fec51b86706ef822ab4a9d5fa8184" kindref="member">sbfTport_adjustWeight</ref><sp/>(tport,<sp/>tstream-&gt;mThread,<sp/>-(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)sub0-&gt;<ref refid="structsbf_sub_impl_1a801681af8cba9443567ccc9299349b8b" kindref="member">mWeight</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttopic-&gt;<ref refid="structsbf_tport_topic_impl_1a02c5222d59d0233d22913623907bc4fb" kindref="member">mNext</ref><sp/>==<sp/>sub0)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttopic-&gt;<ref refid="structsbf_tport_topic_impl_1a02c5222d59d0233d22913623907bc4fb" kindref="member">mNext</ref><sp/>=<sp/><ref refid="sysqueue_8h_1abd57fe9bdea6007a602f8c7d61bd5265" kindref="member">TAILQ_NEXT</ref><sp/>(sub0,<sp/>mEntry);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1aaae87ca18c28066e1a96221e762d1209" kindref="member">TAILQ_REMOVE</ref><sp/>(&amp;ttopic-&gt;mSubs,<sp/>sub0,<sp/>mEntry);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sysqueue_8h_1ac3c9da7ac712eacbbad5cc54d7a3477e" kindref="member">TAILQ_EMPTY</ref><sp/>(&amp;ttopic-&gt;mSubs)<sp/>&amp;&amp;<sp/>sbfTport_removeTopic<sp/>(tstream,<sp/>ttopic))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1afe21416b021add1d039070372b28c2b7" kindref="member">sbfMutex_lock</ref><sp/>(&amp;tport-&gt;mStreamsLock);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Reference<sp/>count<sp/>could<sp/>be<sp/>bumped<sp/>between<sp/>removeTopic<sp/>(outside<sp/>the</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>lock)<sp/>and<sp/>here.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sbf_ref_count_8h_1ae39dd5c31f09ec9d9e26b22088edfeaa" kindref="member">sbfRefCount_get</ref><sp/>(&amp;tstream-&gt;mRefCount)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfTport_removeStream<sp/>(tport,<sp/>tstream);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1ae9f52fb356fee346369a22cfef0def73" kindref="member">sbfMutex_unlock</ref><sp/>(&amp;tport-&gt;mStreamsLock);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sbfRefCount_decrement<sp/>(&amp;sub0-&gt;<ref refid="structsbf_sub_impl_1ad3ed819340d471f1ba88977c893b2e8b" kindref="member">mRefCount</ref>))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSubFree<sp/>(sub0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">sbfSubAddEventCb<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>events,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8h_1af2056340b1f24acb79c87fe529f7114e" kindref="member">sbfTopic</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topic<sp/>=<sp/>sub0-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_private_8h_1aba7fa8ef9bc17e1823a977f6b467a1fd" kindref="member">sbfTportStream</ref><sp/>tstream<sp/>=<sp/>sbfSubEnsureStream<sp/>(sub0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_tport_topic_impl" kindref="compound">sbfTportTopic</ref><sp/><sp/>ttopic;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>-&gt;<ref refid="structsbf_tport_impl_1a0284b04207007b25a00f4e3105f53671" kindref="member">mLog</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;adding<sp/>subscription<sp/>%p<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ttopic<sp/>=<sp/>sbfTport_findTopic<sp/>(tstream,<sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(topic));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ttopic<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttopic<sp/>=<sp/>sbfTport_addTopic<sp/>(tstream,<sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(topic));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>-&gt;<ref refid="structsbf_tport_impl_1a0284b04207007b25a00f4e3105f53671" kindref="member">mLog</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;using<sp/>topic<sp/>%p<sp/>(stream<sp/>%p)<sp/>for<sp/>subscription<sp/>%p<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttopic,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstream,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1a512bee16b46f601078c96c776d2648c3" kindref="member">TAILQ_INSERT_TAIL</ref><sp/>(&amp;ttopic-&gt;mSubs,<sp/>sub0,<sp/>mEntry);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>sub0-&gt;<ref refid="structsbf_sub_impl_1a20f3c4cbff205f7f68ddc3fa00327313" kindref="member">mTportTopic</ref><sp/>=<sp/>ttopic;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Can<sp/>now<sp/>remove<sp/>the<sp/>reference<sp/>used<sp/>to<sp/>hold<sp/>the<sp/>stream<sp/>while<sp/>waiting<sp/>for</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>event<sp/>to<sp/>fire<sp/>-<sp/>it&apos;s<sp/>been<sp/>replaced<sp/>by<sp/>the<sp/>reference<sp/>added<sp/>in</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>sbfTport_addTopic.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfRefCount_decrement<sp/>(&amp;tstream-&gt;mRefCount);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tstream-&gt;mReady)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_sub_8c_1a8bc33e4d154dc5cdb4c9d2d4e8bc1639" kindref="member">sbfSub_ready</ref><sp/>(sub0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">sbfSubAddStreamCompleteCb<sp/>(<ref refid="sbf_handler_8h_1a3b6e24841bce408d649b41f0aebe6923" kindref="member">sbfHandlerHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_common_8h_1a55668977c9501578c245e806c1212de9" kindref="member">sbfError</ref><sp/>error,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_private_8h_1aba7fa8ef9bc17e1823a977f6b467a1fd" kindref="member">sbfTportStream</ref><sp/>tstream<sp/>=<sp/>sbfSubEnsureStream<sp/>(sub0);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_tport_topic_impl" kindref="compound">sbfTportTopic</ref><sp/><sp/>ttopic;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>stream<sp/>add<sp/>fails,<sp/>just<sp/>return<sp/>-<sp/>subs<sp/>on<sp/>this<sp/>stream<sp/>will<sp/>never</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>become<sp/>ready.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1a623a831041e812e33a41439b449d740d" kindref="member">sbfLog_err</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>-&gt;<ref refid="structsbf_tport_impl_1a0284b04207007b25a00f4e3105f53671" kindref="member">mLog</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>add<sp/>stream<sp/>%p<sp/>for<sp/>subscription<sp/>%p<sp/>(%s):<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstream,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror<sp/>(error));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>-&gt;<ref refid="structsbf_tport_impl_1a0284b04207007b25a00f4e3105f53671" kindref="member">mLog</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;stream<sp/>%p<sp/>is<sp/>ready<sp/>(for<sp/>subscription<sp/>%p<sp/>(%s)):<sp/>thread<sp/>%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstream,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub0,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_mw_8c_1aa183ff642fc7b83bf48a3d6757f79e06" kindref="member">sbfMw_getThreadIndex</ref><sp/>(tstream-&gt;mThread));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>tstream-&gt;mReady<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="systree_8h_1a1d7436c418f56d0b50ebc4c4273d71b6" kindref="member">RB_FOREACH</ref><sp/>(ttopic,<sp/>sbfTportTopicTreeImpl,<sp/>&amp;tstream-&gt;mTopics)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>sub<sp/>is<sp/>on<sp/>this<sp/>list,<sp/>we<sp/>are<sp/>sure<sp/>the<sp/>add<sp/>callback<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>fired.<sp/>The<sp/>sub<sp/>has<sp/>not<sp/>been<sp/>made<sp/>ready<sp/>and<sp/>the<sp/>remove<sp/>callback<sp/>may</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>been<sp/>deferred.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sysqueue_8h_1a16e5fc168e7f3494d4b1df54447d871e" kindref="member">TAILQ_FOREACH</ref><sp/>(sub,<sp/>&amp;ttopic-&gt;mSubs,<sp/>mEntry)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_sub_8c_1a8bc33e4d154dc5cdb4c9d2d4e8bc1639" kindref="member">sbfSub_ready</ref><sp/>(sub);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1aa5b08ad5aede06fecc266545bed3c798" kindref="member">mRemoved</ref>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSubRemoveEventCb<sp/>(-1,<sp/>0,<sp/>sub);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>There<sp/>is<sp/>one<sp/>special<sp/>sub<sp/>that<sp/>created<sp/>the<sp/>stream<sp/>-<sp/>it<sp/>needs<sp/>its<sp/>add</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>callback<sp/>fired.<sp/>If<sp/>the<sp/>remove<sp/>has<sp/>been<sp/>deferred<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>fired</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>too.<sp/>It<sp/>may<sp/>seem<sp/>silly<sp/>to<sp/>call<sp/>add<sp/>followed<sp/>immediately<sp/>by<sp/>remove<sp/>but</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>shouldn&apos;t<sp/>happen<sp/>often<sp/>and<sp/>ensures<sp/>that<sp/>the<sp/>stream<sp/>is<sp/>removed<sp/>too</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>necessary.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfSubAddEventCb<sp/>(-1,<sp/>0,<sp/>sub0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub0-&gt;<ref refid="structsbf_sub_impl_1aa5b08ad5aede06fecc266545bed3c798" kindref="member">mRemoved</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSubRemoveEventCb<sp/>(-1,<sp/>0,<sp/>sub0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">sbfSubSetStream<sp/>(<ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_8h_1acbaf9d451442abe85c18e3583d746181" kindref="member">sbfTport</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tport<sp/>=<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_private_8h_1aba7fa8ef9bc17e1823a977f6b467a1fd" kindref="member">sbfTportStream</ref><sp/>tstream;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1afe21416b021add1d039070372b28c2b7" kindref="member">sbfMutex_lock</ref><sp/>(&amp;tport-&gt;mStreamsLock);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>tstream<sp/>=<sp/>tport-&gt;mHandlerTable-&gt;mFindStream<sp/>(tport-&gt;mHandler,<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tstream<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>know<sp/>the<sp/>thread<sp/>so<sp/>can<sp/>queue<sp/>the<sp/>add<sp/>callback<sp/>directly.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_mw_8c_1ae30e3fd3f462247eb140805b083d83c6" kindref="member">sbfMw_enqueueThread</ref><sp/>(tstream-&gt;mThread,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structsbf_sub_impl_1ac5877d202959012641c633f568165ebb" kindref="member">mEventAdd</ref>,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSubAddEventCb,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>don&apos;t<sp/>know<sp/>the<sp/>thread<sp/>so<sp/>we<sp/>need<sp/>to<sp/>create<sp/>the<sp/>stream<sp/>first.<sp/>The</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>AddStreamComplete<sp/>callback<sp/>fires<sp/>on<sp/>the<sp/>right<sp/>thread<sp/>and<sp/>finishes</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>work<sp/>on<sp/>this<sp/>sub.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tstream<sp/>=<sp/>sbfTport_addStream<sp/>(tport,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSubAddStreamCompleteCb,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Take<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>stream<sp/>to<sp/>prevent<sp/>it<sp/>going<sp/>away<sp/>even<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>number<sp/>of<sp/>topics<sp/>hits<sp/>zero.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a04edbd44efe29aa974958584577070a0" kindref="member">mTportStream</ref><sp/>=<sp/>tstream;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfRefCount_increment<sp/>(&amp;tstream-&gt;mRefCount);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_tport_private_8h_1a389fec51b86706ef822ab4a9d5fa8184" kindref="member">sbfTport_adjustWeight</ref><sp/>(tport,<sp/>tstream-&gt;mThread,<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a801681af8cba9443567ccc9299349b8b" kindref="member">mWeight</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_common_darwin_8h_1ae9f52fb356fee346369a22cfef0def73" kindref="member">sbfMutex_unlock</ref><sp/>(&amp;tport-&gt;mStreamsLock);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">sbfSubReadyQueueCb<sp/>(<ref refid="structsbf_queue_item_impl" kindref="compound">sbfQueueItem</ref><sp/>item,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub-&gt;<ref refid="structsbf_sub_impl_1a7bee7e5ab4ab8a7a0a998187a3cd5f1e" kindref="member">mDestroyed</ref>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a4b79d9b15aec85084167b5e75e7c2130" kindref="member">mReadyCb</ref><sp/>(sub,<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af7bd2bcf5712363a4116737ab494261f" kindref="member">mClosure</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sbfRefCount_decrement<sp/>(&amp;sub-&gt;<ref refid="structsbf_sub_impl_1ad3ed819340d471f1ba88977c893b2e8b" kindref="member">mRefCount</ref>))</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSubFree<sp/>(sub);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="sbf_sub_private_8h_1a8bc33e4d154dc5cdb4c9d2d4e8bc1639" refkind="member"><highlight class="normal"><ref refid="sbf_sub_8c_1a8bc33e4d154dc5cdb4c9d2d4e8bc1639" kindref="member">sbfSub_ready</ref><sp/>(<ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>-&gt;<ref refid="structsbf_tport_impl_1a0284b04207007b25a00f4e3105f53671" kindref="member">mLog</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subscription<sp/>%p<sp/>(%s)<sp/>is<sp/>ready&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1aa9136a43819a4f9c1644672553368ab4" kindref="member">mReady</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub-&gt;<ref refid="structsbf_sub_impl_1a7bee7e5ab4ab8a7a0a998187a3cd5f1e" kindref="member">mDestroyed</ref><sp/>&amp;&amp;<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a4b79d9b15aec85084167b5e75e7c2130" kindref="member">mReadyCb</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfRefCount_increment<sp/>(&amp;sub-&gt;<ref refid="structsbf_sub_impl_1ad3ed819340d471f1ba88977c893b2e8b" kindref="member">mRefCount</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_queue_8c_1a4a0a1c5ebaca33ef41cfc984c536bf01" kindref="member">sbfQueue_enqueue</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a08131e49008f226f68013439884b2ab9" kindref="member">mQueue</ref>,<sp/>sbfSubReadyQueueCb,<sp/>sub);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">sbfSubMessageQueueCb<sp/>(<ref refid="structsbf_queue_item_impl" kindref="compound">sbfQueueItem</ref><sp/>item,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/><sp/><sp/><sp/>sub<sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_buffer_8h_1a1e025c4644df2171527745712604be3b" kindref="member">sbfBuffer</ref><sp/>buffer<sp/>=<sp/>*(<ref refid="sbf_buffer_8h_1a1e025c4644df2171527745712604be3b" kindref="member">sbfBuffer</ref>*)<ref refid="sbf_queue_8c_1a3a47a4e3a01ddecb9d5c49b0fab74609" kindref="member">sbfQueue_getItemData</ref><sp/>(item);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub-&gt;<ref refid="structsbf_sub_impl_1a7bee7e5ab4ab8a7a0a998187a3cd5f1e" kindref="member">mDestroyed</ref>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a1e2f278d1c2f85a9d6b3d8868e2d7500" kindref="member">mMessageCb</ref><sp/>(sub,<sp/>buffer,<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af7bd2bcf5712363a4116737ab494261f" kindref="member">mClosure</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfBuffer_destroy<sp/>(buffer);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sbfRefCount_decrement<sp/>(&amp;sub-&gt;<ref refid="structsbf_sub_impl_1ad3ed819340d471f1ba88977c893b2e8b" kindref="member">mRefCount</ref>))</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSubFree<sp/>(sub);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="sbf_sub_private_8h_1a3c875c2961ee1921708b14d32fa208d3" refkind="member"><highlight class="normal"><ref refid="sbf_sub_8c_1a3c875c2961ee1921708b14d32fa208d3" kindref="member">sbfSub_message</ref><sp/>(<ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub,<sp/><ref refid="sbf_buffer_8h_1a1e025c4644df2171527745712604be3b" kindref="member">sbfBuffer</ref><sp/>buffer)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_queue_item_impl" kindref="compound">sbfQueueItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sub-&gt;<ref refid="structsbf_sub_impl_1a7bee7e5ab4ab8a7a0a998187a3cd5f1e" kindref="member">mDestroyed</ref><sp/>&amp;&amp;<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a1e2f278d1c2f85a9d6b3d8868e2d7500" kindref="member">mMessageCb</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a1ba4f56a9d23b0ff27f0a11fa861adb9" kindref="member">mQueueBypass</ref>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a1e2f278d1c2f85a9d6b3d8868e2d7500" kindref="member">mMessageCb</ref><sp/>(sub,<sp/>buffer,<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af7bd2bcf5712363a4116737ab494261f" kindref="member">mClosure</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="sbf_queue_8c_1a1ce1d1238f830f6f9e0032d3572036c2" kindref="member">sbfQueue_getItem</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a08131e49008f226f68013439884b2ab9" kindref="member">mQueue</ref>,<sp/>sbfSubMessageQueueCb,<sp/>sub);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(<ref refid="sbf_buffer_8h_1a1e025c4644df2171527745712604be3b" kindref="member">sbfBuffer</ref>*)<ref refid="sbf_queue_8c_1a3a47a4e3a01ddecb9d5c49b0fab74609" kindref="member">sbfQueue_getItemData</ref><sp/>(item)<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfBuffer_addRef<sp/>(buffer);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfRefCount_increment<sp/>(&amp;sub-&gt;<ref refid="structsbf_sub_impl_1ad3ed819340d471f1ba88977c893b2e8b" kindref="member">mRefCount</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_queue_8c_1a041be175afa83868ffd3ad53638aa073" kindref="member">sbfQueue_enqueueItem</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a08131e49008f226f68013439884b2ab9" kindref="member">mQueue</ref>,<sp/>item);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref></highlight></codeline>
<codeline lineno="283" refid="sbf_sub_8c_1ad3c0b1c131bc201d4c0a960877ddba16" refkind="member"><highlight class="normal"><ref refid="sbf_sub_8c_1ad3c0b1c131bc201d4c0a960877ddba16" kindref="member">sbfSub_create</ref><sp/>(<ref refid="sbf_tport_8h_1acbaf9d451442abe85c18e3583d746181" kindref="member">sbfTport</ref><sp/>tport,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsbf_queue_impl" kindref="compound">sbfQueue</ref><sp/>queue,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>topic0,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_sub_8h_1a21874f3f038f352bd283fc2dffff1c2c" kindref="member">sbfSubReadyCb</ref><sp/>readyCb,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_sub_8h_1a2f0fc2e02f85c60bea98943659ccbb4d" kindref="member">sbfSubMessageCb</ref><sp/>messageCb,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>closure)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/><sp/><sp/>sub;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8h_1af2056340b1f24acb79c87fe529f7114e" kindref="member">sbfTopic</ref><sp/>topic;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>topic<sp/>=<sp/><ref refid="sbf_topic_8c_1a9672cf4f3a60f28d226b45f7a1721679" kindref="member">sbfTopic_create</ref><sp/>(<ref refid="sbf_topic_8h_1af72fcde8ef41ef75cc4f7cf0d2aff2cfa5c80119f0bb1907166badfec7d3f09da" kindref="member">SBF_TOPIC_SUB</ref>,<sp/>topic0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topic<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>sub<sp/>=<sp/><ref refid="sbf_memory_8h_1ade8988c3fcdbca51eb623eb5f7ad5150" kindref="member">xcalloc</ref><sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*sub);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref><sp/>=<sp/>topic;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a7bee7e5ab4ab8a7a0a998187a3cd5f1e" kindref="member">mDestroyed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfRefCount_init<sp/>(&amp;sub-&gt;<ref refid="structsbf_sub_impl_1ad3ed819340d471f1ba88977c893b2e8b" kindref="member">mRefCount</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1aa9136a43819a4f9c1644672553368ab4" kindref="member">mReady</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref><sp/>=<sp/>tport;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a04edbd44efe29aa974958584577070a0" kindref="member">mTportStream</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a20f3c4cbff205f7f68ddc3fa00327313" kindref="member">mTportTopic</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(tport-&gt;mLog,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;creating<sp/>subscription<sp/>%p<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a08131e49008f226f68013439884b2ab9" kindref="member">mQueue</ref><sp/>=<sp/>queue;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a4b79d9b15aec85084167b5e75e7c2130" kindref="member">mReadyCb</ref><sp/>=<sp/>readyCb;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a1e2f278d1c2f85a9d6b3d8868e2d7500" kindref="member">mMessageCb</ref><sp/>=<sp/>messageCb;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af7bd2bcf5712363a4116737ab494261f" kindref="member">mClosure</ref><sp/>=<sp/>closure;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a801681af8cba9443567ccc9299349b8b" kindref="member">mWeight</ref><sp/>=<sp/><ref refid="sbf_tport_private_8h_1ac993aeb33abb7bae440930c54e95f490" kindref="member">sbfTport_topicWeight</ref><sp/>(tport,<sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>sbfSubSetStream<sp/>(sub);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="sbf_sub_8h_1a52ee27e0190a813dad71e9b89573a74d" refkind="member"><highlight class="normal"><ref refid="sbf_sub_8c_1a52ee27e0190a813dad71e9b89573a74d" kindref="member">sbfSub_destroy</ref><sp/>(<ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a7bee7e5ab4ab8a7a0a998187a3cd5f1e" kindref="member">mDestroyed</ref>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a7bee7e5ab4ab8a7a0a998187a3cd5f1e" kindref="member">mDestroyed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>-&gt;<ref refid="structsbf_tport_impl_1a0284b04207007b25a00f4e3105f53671" kindref="member">mLog</ref>,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;queueing<sp/>remove<sp/>of<sp/>subscription<sp/>%p<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_mw_8c_1ae30e3fd3f462247eb140805b083d83c6" kindref="member">sbfMw_enqueueThread</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a04edbd44efe29aa974958584577070a0" kindref="member">mTportStream</ref>-&gt;mThread,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sub-&gt;<ref refid="structsbf_sub_impl_1adb38254be5e015b3f2e22b40abaeba24" kindref="member">mEventRemove</ref>,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sbfSubRemoveEventCb,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="sbf_topic_8h_1af2056340b1f24acb79c87fe529f7114e" kindref="member">sbfTopic</ref></highlight></codeline>
<codeline lineno="343" refid="sbf_sub_8h_1a81974de3ef0d790b1b3ed4da9af36bd6" refkind="member"><highlight class="normal"><ref refid="sbf_sub_8c_1a8f7efd024c297bffc9d8c5833a28c472" kindref="member">sbfSub_getTopic</ref><sp/>(<ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="sbf_sub_8h_1a7b8658afac567248ddda4fbf93bcd14a" refkind="member"><highlight class="normal"><ref refid="sbf_sub_8c_1a7b8658afac567248ddda4fbf93bcd14a" kindref="member">sbfSub_setQueueBypass</ref><sp/>(<ref refid="structsbf_sub_impl" kindref="compound">sbfSub</ref><sp/>sub,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_log_8h_1aae0c47552712e01de64869037cbf4e56" kindref="member">sbfLog_debug</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1a2f00fbeb6b4454bd171614d5dd3789c1" kindref="member">mTport</ref>-&gt;<ref refid="structsbf_tport_impl_1a0284b04207007b25a00f4e3105f53671" kindref="member">mLog</ref>,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;queue<sp/>bypass<sp/>%s<sp/>for<sp/>subscription<sp/>%p<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;ON&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;OFF&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_topic_8c_1ab0f153a4579b16f243f1b946068e95c9" kindref="member">sbfTopic_getTopic</ref><sp/>(sub-&gt;<ref refid="structsbf_sub_impl_1af1b1bd3d24a3dd12288f535f959cd308" kindref="member">mTopic</ref>));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structsbf_sub_impl_1a1ba4f56a9d23b0ff27f0a11fa861adb9" kindref="member">mQueueBypass</ref><sp/>=<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="transport/sbfSub.c"/>
  </compounddef>
</doxygen>
