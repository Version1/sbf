<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_key_value_8c" kind="file" language="C++">
    <compoundname>sbfKeyValue.c</compoundname>
    <includes refid="sbf_key_value_8h" local="yes">sbfKeyValue.h</includes>
    <includes refid="sbf_key_value_private_8h" local="yes">sbfKeyValuePrivate.h</includes>
    <incdepgraph>
      <node id="793">
        <label>event.h</label>
      </node>
      <node id="792">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="794">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="795" relation="include">
        </childnode>
      </node>
      <node id="798">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="791" relation="include">
        </childnode>
      </node>
      <node id="789">
        <label>common/sbfKeyValue.c</label>
        <link refid="sbf_key_value_8c"/>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="801" relation="include">
        </childnode>
      </node>
      <node id="790">
        <label>sbfKeyValue.h</label>
        <link refid="sbf_key_value_8h"/>
        <childnode refid="791" relation="include">
        </childnode>
      </node>
      <node id="795">
        <label>sys/types.h</label>
      </node>
      <node id="801">
        <label>sbfKeyValuePrivate.h</label>
        <link refid="sbf_key_value_private_8h"/>
      </node>
      <node id="791">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="792" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
        <childnode refid="797" relation="include">
        </childnode>
        <childnode refid="798" relation="include">
        </childnode>
        <childnode refid="799" relation="include">
        </childnode>
        <childnode refid="800" relation="include">
        </childnode>
      </node>
      <node id="797">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="796">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="799">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="791" relation="include">
        </childnode>
      </node>
      <node id="800">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="791" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_key_value_8c_1a84ecafe84119244612f4188980d5cbd0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* sbfKeyValueGetValue</definition>
        <argsstring>(sbfKeyValueItem item)</argsstring>
        <name>sbfKeyValueGetValue</name>
        <param>
          <type><ref refid="sbf_key_value_private_8h_1a7a6585323165e74001d6bb973e492a5e" kindref="member">sbfKeyValueItem</ref></type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="5" column="1" bodyfile="common/sbfKeyValue.c" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1ab8344e795e79d91518d03b8abcd68387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
        <definition>sbfKeyValue sbfKeyValue_create</definition>
        <argsstring>(void)</argsstring>
        <name>sbfKeyValue_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="11" column="1" bodyfile="common/sbfKeyValue.c" bodystart="11" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1af04cf659e336c325822508eb5065b2b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfKeyValue_destroy</definition>
        <argsstring>(sbfKeyValue table)</argsstring>
        <name>sbfKeyValue_destroy</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="23" column="1" bodyfile="common/sbfKeyValue.c" bodystart="23" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1a4c2d9f80fe94f25315ef4222a93f038c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
        <definition>sbfKeyValue sbfKeyValue_copy</definition>
        <argsstring>(sbfKeyValue table)</argsstring>
        <name>sbfKeyValue_copy</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="37" column="1" bodyfile="common/sbfKeyValue.c" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1a264a94d677725446a2e9acbedab35aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u_int</type>
        <definition>u_int sbfKeyValue_size</definition>
        <argsstring>(sbfKeyValue table)</argsstring>
        <name>sbfKeyValue_size</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="49" column="1" bodyfile="common/sbfKeyValue.c" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1a5bf2be4a5e087f042234f99b57dd2504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sbfKeyValue_get</definition>
        <argsstring>(sbfKeyValue table, const char *key)</argsstring>
        <name>sbfKeyValue_get</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="55" column="1" bodyfile="common/sbfKeyValue.c" bodystart="55" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1aba52e0539720bdd0f3afefbfc5f5c831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sbfKeyValue_getV</definition>
        <argsstring>(sbfKeyValue table, const char *fmt,...)</argsstring>
        <name>sbfKeyValue_getV</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="68" column="1" bodyfile="common/sbfKeyValue.c" bodystart="68" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1a8006282ede956c18b896a78984a62435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfKeyValue_put</definition>
        <argsstring>(sbfKeyValue table, const char *key, const char *value)</argsstring>
        <name>sbfKeyValue_put</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="84" column="1" bodyfile="common/sbfKeyValue.c" bodystart="84" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1a3735c366201ca2446589511dd1c0509c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbfKeyValue_remove</definition>
        <argsstring>(sbfKeyValue table, const char *key)</argsstring>
        <name>sbfKeyValue_remove</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="105" column="1" bodyfile="common/sbfKeyValue.c" bodystart="105" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1a1a65e6dc1940b2d3164b88368a8edd97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sbfKeyValue_first</definition>
        <argsstring>(sbfKeyValue table, void **cookie)</argsstring>
        <name>sbfKeyValue_first</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>cookie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="121" column="1" bodyfile="common/sbfKeyValue.c" bodystart="121" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="sbf_key_value_8c_1a7d93f470e5a5735f5b18792ce0471118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sbfKeyValue_next</definition>
        <argsstring>(sbfKeyValue table, void **cookie)</argsstring>
        <name>sbfKeyValue_next</name>
        <param>
          <type><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></type>
          <declname>table</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>cookie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfKeyValue.c" line="134" column="1" bodyfile="common/sbfKeyValue.c" bodystart="134" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_key_value_8h" kindref="compound">sbfKeyValue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_key_value_private_8h" kindref="compound">sbfKeyValuePrivate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="5"><highlight class="normal">sbfKeyValueGetValue<sp/>(<ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/>item)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)(item<sp/>+<sp/>1))<sp/>+<sp/>item-&gt;<ref refid="structsbf_key_value_item_impl_1a17c881332ee9402cf4c92d49a3916e01" kindref="member">mKeySize</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></highlight></codeline>
<codeline lineno="11" refid="sbf_key_value_8h_1ab8344e795e79d91518d03b8abcd68387" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1ab8344e795e79d91518d03b8abcd68387" kindref="member">sbfKeyValue_create</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>table<sp/>=<sp/><ref refid="sbf_memory_8h_1ade8988c3fcdbca51eb623eb5f7ad5150" kindref="member">xcalloc</ref><sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*table);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;mSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="systree_8h_1aeebbb1dbfd0312bdf51a4b3a44eaa525" kindref="member">RB_INIT</ref><sp/>(&amp;table-&gt;mTree);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="sbf_key_value_8h_1af04cf659e336c325822508eb5065b2b9" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1af04cf659e336c325822508eb5065b2b9" kindref="member">sbfKeyValue_destroy</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/>item1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="systree_8h_1aabadd40831e862632d55eb8c867fd258" kindref="member">RB_FOREACH_SAFE</ref><sp/>(item,<sp/>sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree,<sp/>item1)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="systree_8h_1ad97eb44d2c39debda8cfbbbbcb354cce" kindref="member">RB_REMOVE</ref><sp/>(sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree,<sp/>item);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(item);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(table);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref></highlight></codeline>
<codeline lineno="37" refid="sbf_key_value_8h_1a4c2d9f80fe94f25315ef4222a93f038c" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1a4c2d9f80fe94f25315ef4222a93f038c" kindref="member">sbfKeyValue_copy</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/><sp/><sp/><sp/><sp/>copy;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>copy<sp/>=<sp/><ref refid="sbf_key_value_8c_1ab8344e795e79d91518d03b8abcd68387" kindref="member">sbfKeyValue_create</ref><sp/>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="systree_8h_1a1d7436c418f56d0b50ebc4c4273d71b6" kindref="member">RB_FOREACH</ref><sp/>(item,<sp/>sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sbf_key_value_8c_1a8006282ede956c18b896a78984a62435" kindref="member">sbfKeyValue_put</ref><sp/>(copy,<sp/>item-&gt;<ref refid="structsbf_key_value_item_impl_1adbe55ae17e783332ea96ad08be7d5726" kindref="member">mKey</ref>,<sp/>sbfKeyValueGetValue<sp/>(item));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">u_int</highlight></codeline>
<codeline lineno="49" refid="sbf_key_value_8h_1a264a94d677725446a2e9acbedab35aa4" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1a264a94d677725446a2e9acbedab35aa4" kindref="member">sbfKeyValue_size</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table-&gt;mSize;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="55" refid="sbf_key_value_8h_1a5bf2be4a5e087f042234f99b57dd2504" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1a5bf2be4a5e087f042234f99b57dd2504" kindref="member">sbfKeyValue_get</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItemImpl</ref><sp/>impl;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>impl.<ref refid="structsbf_key_value_item_impl_1adbe55ae17e783332ea96ad08be7d5726" kindref="member">mKey</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="systree_8h_1af0ae89dc9239fbe8c056eeed595cedac" kindref="member">RB_FIND</ref><sp/>(sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree,<sp/>&amp;impl);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sbfKeyValueGetValue<sp/>(item);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="68" refid="sbf_key_value_8c_1aba52e0539720bdd0f3afefbfc5f5c831" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1aba52e0539720bdd0f3afefbfc5f5c831" kindref="member">sbfKeyValue_getV</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ap;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>key;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start<sp/>(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_memory_8h_1af5d74576e3ce200262430d8075c2648b" kindref="member">xvasprintf</ref><sp/>(&amp;key,<sp/>fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end<sp/>(ap);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="sbf_key_value_8c_1a5bf2be4a5e087f042234f99b57dd2504" kindref="member">sbfKeyValue_get</ref><sp/>(table,<sp/>key);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(key);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="sbf_key_value_8h_1ac5f4bb9389824fe35bda96107d232a7e" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1a8006282ede956c18b896a78984a62435" kindref="member">sbfKeyValue_put</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keySize<sp/>=<sp/>strlen<sp/>(key)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueSize<sp/>=<sp/>strlen<sp/>(value)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sbf_key_value_8c_1a3735c366201ca2446589511dd1c0509c" kindref="member">sbfKeyValue_remove</ref><sp/>(table,<sp/>key);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="sbf_memory_8h_1ade8988c3fcdbca51eb623eb5f7ad5150" kindref="member">xcalloc</ref><sp/>(1,<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*item)<sp/>+<sp/>keySize<sp/>+<sp/>valueSize);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_key_value_item_impl_1adbe55ae17e783332ea96ad08be7d5726" kindref="member">mKey</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(item<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structsbf_key_value_item_impl_1a17c881332ee9402cf4c92d49a3916e01" kindref="member">mKeySize</ref><sp/>=<sp/>keySize;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(item<sp/>+<sp/>1,<sp/>key,<sp/>keySize);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(sbfKeyValueGetValue<sp/>(item),<sp/>value,<sp/>valueSize);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;mSize++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="systree_8h_1a5b9861a8925c953340e483ae0a0f5120" kindref="member">RB_INSERT</ref><sp/>(sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree,<sp/>item);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="sbf_key_value_8h_1a3735c366201ca2446589511dd1c0509c" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1a3735c366201ca2446589511dd1c0509c" kindref="member">sbfKeyValue_remove</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItemImpl</ref><sp/>impl;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>impl.<ref refid="structsbf_key_value_item_impl_1adbe55ae17e783332ea96ad08be7d5726" kindref="member">mKey</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="systree_8h_1af0ae89dc9239fbe8c056eeed595cedac" kindref="member">RB_FIND</ref><sp/>(sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree,<sp/>&amp;impl);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;mSize--;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="systree_8h_1ad97eb44d2c39debda8cfbbbbcb354cce" kindref="member">RB_REMOVE</ref><sp/>(sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree,<sp/>item);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(item);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="121" refid="sbf_key_value_8h_1a1a65e6dc1940b2d3164b88368a8edd97" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1a1a65e6dc1940b2d3164b88368a8edd97" kindref="member">sbfKeyValue_first</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>cookie)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/>item;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="systree_8h_1a0827c86d4c8c63495f665141d857f380" kindref="member">RB_MIN</ref><sp/>(sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>*cookie<sp/>=<sp/>item;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item-&gt;<ref refid="structsbf_key_value_item_impl_1adbe55ae17e783332ea96ad08be7d5726" kindref="member">mKey</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="134" refid="sbf_key_value_8h_1a7d93f470e5a5735f5b18792ce0471118" refkind="member"><highlight class="normal"><ref refid="sbf_key_value_8c_1a7d93f470e5a5735f5b18792ce0471118" kindref="member">sbfKeyValue_next</ref><sp/>(<ref refid="sbf_key_value_8h_1a954d4d49b7dfd98968ab8a3e4b5dd4fa" kindref="member">sbfKeyValue</ref><sp/>table,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>cookie)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsbf_key_value_item_impl" kindref="compound">sbfKeyValueItem</ref><sp/>item<sp/>=<sp/>*cookie;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="systree_8h_1a2852fb3d5ccc9f1d3a245096fee9eb0b" kindref="member">RB_NEXT</ref><sp/>(sbfKeyValueItemTreeImpl,<sp/>&amp;table-&gt;mTree,<sp/>item);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>*cookie<sp/>=<sp/>item;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item-&gt;<ref refid="structsbf_key_value_item_impl_1adbe55ae17e783332ea96ad08be7d5726" kindref="member">mKey</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="common/sbfKeyValue.c"/>
  </compounddef>
</doxygen>
