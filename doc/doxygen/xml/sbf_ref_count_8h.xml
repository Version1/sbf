<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sbf_ref_count_8h" kind="file" language="C++">
    <compoundname>sbfRefCount.h</compoundname>
    <includes refid="sbf_common_8h" local="yes">sbfCommon.h</includes>
    <includedby refid="sbf_buffer_8h" local="yes">common/sbfBuffer.h</includedby>
    <incdepgraph>
      <node id="497">
        <label>event.h</label>
      </node>
      <node id="496">
        <label>sbfVersion.h</label>
        <link refid="sbf_version_8h"/>
      </node>
      <node id="498">
        <label>syshash.h</label>
        <link refid="syshash_8h"/>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
      <node id="502">
        <label>sbfFatal.h</label>
        <link refid="sbf_fatal_8h"/>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
      <node id="499">
        <label>sys/types.h</label>
      </node>
      <node id="494">
        <label>common/sbfRefCount.h</label>
        <link refid="sbf_ref_count_8h"/>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
      <node id="495">
        <label>sbfCommon.h</label>
        <link refid="sbf_common_8h"/>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
      </node>
      <node id="501">
        <label>systree.h</label>
        <link refid="systree_8h"/>
      </node>
      <node id="500">
        <label>sysqueue.h</label>
        <link refid="sysqueue_8h"/>
      </node>
      <node id="503">
        <label>sbfLog.h</label>
        <link refid="sbf_log_8h"/>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
      <node id="504">
        <label>sbfMemory.h</label>
        <link refid="sbf_memory_8h"/>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="512">
        <label>handlers/common/sbfCommonHandler.h</label>
        <link refid="sbf_common_handler_8h"/>
        <childnode refid="509" relation="include">
        </childnode>
      </node>
      <node id="516">
        <label>requestreply/sbfRequestSub.h</label>
        <link refid="sbf_request_sub_8h"/>
        <childnode refid="515" relation="include">
        </childnode>
      </node>
      <node id="519">
        <label>transport/sbfSub.h</label>
        <link refid="sbf_sub_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>handlers/udp/sbfUdpHandler.h</label>
        <link refid="sbf_udp_handler_8h"/>
      </node>
      <node id="510">
        <label>transport/sbfBatch.h</label>
        <link refid="sbf_batch_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="506">
        <label>common/sbfBuffer.h</label>
        <link refid="sbf_buffer_8h"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
      </node>
      <node id="513">
        <label>handlers/tcpmesh/sbfTcpMeshHandler.h</label>
        <link refid="sbf_tcp_mesh_handler_8h"/>
      </node>
      <node id="518">
        <label>transport/sbfPub.h</label>
        <link refid="sbf_pub_8h"/>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="507">
        <label>common/sbfTcpConnection.h</label>
        <link refid="sbf_tcp_connection_8h"/>
      </node>
      <node id="505">
        <label>common/sbfRefCount.h</label>
        <link refid="sbf_ref_count_8h"/>
        <childnode refid="506" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>requestreply/sbfRequestReply.h</label>
        <link refid="sbf_request_reply_8h"/>
      </node>
      <node id="517">
        <label>transport/sbfHandler.h</label>
        <link refid="sbf_handler_8h"/>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
      </node>
      <node id="508">
        <label>common/sbfUdpMulticast.h</label>
        <link refid="sbf_udp_multicast_8h"/>
        <childnode refid="509" relation="include">
        </childnode>
      </node>
      <node id="511">
        <label>transport/sbfTport.h</label>
        <link refid="sbf_tport_8h"/>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
      </node>
      <node id="514">
        <label>requestreply/sbfRequestPub.h</label>
        <link refid="sbf_request_pub_8h"/>
        <childnode refid="515" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structsbf_ref_count" prot="public">sbfRefCount</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="sbf_ref_count_8h_1ae39dd5c31f09ec9d9e26b22088edfeaa" prot="public" static="no">
        <name>sbfRefCount_get</name>
        <param><defname>r</defname></param>
        <initializer>((r)-&gt;mRefCount)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro returning the reference count. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfRefCount.h" line="19" column="9" bodyfile="common/sbfRefCount.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sbf_ref_count_8h_1ac5b200765f35a175c038674a2167b52b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SBF_INLINE void</type>
        <definition>static SBF_INLINE void sbfRefCount_init</definition>
        <argsstring>(sbfRefCount *r, u_short n)</argsstring>
        <name>sbfRefCount_init</name>
        <param>
          <type><ref refid="structsbf_ref_count" kindref="compound">sbfRefCount</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>u_short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise the reference count to a given number. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference count&apos;s handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial count. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfRefCount.h" line="27" column="1" bodyfile="common/sbfRefCount.h" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="sbf_ref_count_8h_1a300932b3c2f9d26b09a5cc2933ff1dc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SBF_INLINE void</type>
        <definition>static SBF_INLINE void sbfRefCount_increment</definition>
        <argsstring>(sbfRefCount *r)</argsstring>
        <name>sbfRefCount_increment</name>
        <param>
          <type><ref refid="structsbf_ref_count" kindref="compound">sbfRefCount</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increases the reference count by one. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference count&apos;s handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfRefCount.h" line="37" column="1" bodyfile="common/sbfRefCount.h" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="sbf_ref_count_8h_1a04bbbe29b9183744a20232e9939b0f25" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SBF_INLINE int</type>
        <definition>static SBF_INLINE int sbfRefCount_decrement</definition>
        <argsstring>(sbfRefCount *r)</argsstring>
        <name>sbfRefCount_decrement</name>
        <param>
          <type><ref refid="structsbf_ref_count" kindref="compound">sbfRefCount</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decreases the reference count by one. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference count&apos;s handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/sbfRefCount.h" line="51" column="1" bodyfile="common/sbfRefCount.h" bodystart="51" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file declares the structures and functions to handle the ownership of structure instances. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>© Copyright 2016 Neueda all rights reserved. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#ifndef<sp/>_SBF_REFCOUNT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SBF_REFCOUNT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbf_common_8h" kindref="compound">sbfCommon.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="sbf_common_8h_1a2e3c8d8485e2902b071ca73d389df0e4" kindref="member">SBF_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="structsbf_ref_count_1a026cd62c504c5de9c67ff67f7f2e9b09" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/>uint32_t<sp/><ref refid="structsbf_ref_count_1a026cd62c504c5de9c67ff67f7f2e9b09" kindref="member">mRefCount</ref>;<sp/>}<sp/><ref refid="structsbf_ref_count" kindref="compound">sbfRefCount</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="sbf_ref_count_8h_1ae39dd5c31f09ec9d9e26b22088edfeaa" refkind="member"><highlight class="preprocessor">#define<sp/>sbfRefCount_get(r)<sp/>((r)-&gt;mRefCount)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SBF_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">sbfRefCount_init<sp/>(<ref refid="structsbf_ref_count" kindref="compound">sbfRefCount</ref>*<sp/>r,<sp/>u_short<sp/>n)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structsbf_ref_count_1a026cd62c504c5de9c67ff67f7f2e9b09" kindref="member">mRefCount</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SBF_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">sbfRefCount_increment<sp/>(<ref refid="structsbf_ref_count" kindref="compound">sbfRefCount</ref>*<sp/>r)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>InterlockedIncrement<sp/>(&amp;r-&gt;<ref refid="structsbf_ref_count_1a026cd62c504c5de9c67ff67f7f2e9b09" kindref="member">mRefCount</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>__sync_fetch_and_add<sp/>(&amp;r-&gt;<ref refid="structsbf_ref_count_1a026cd62c504c5de9c67ff67f7f2e9b09" kindref="member">mRefCount</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SBF_INLINE<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">sbfRefCount_decrement<sp/>(<ref refid="structsbf_ref_count" kindref="compound">sbfRefCount</ref>*<sp/>r)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InterlockedDecrement<sp/>(&amp;r-&gt;<ref refid="structsbf_ref_count_1a026cd62c504c5de9c67ff67f7f2e9b09" kindref="member">mRefCount</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__sync_sub_and_fetch<sp/>(&amp;r-&gt;<ref refid="structsbf_ref_count_1a026cd62c504c5de9c67ff67f7f2e9b09" kindref="member">mRefCount</ref>,<sp/>1)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="sbf_common_8h_1a04f299102afdb82186ca2307f1c33c9e" kindref="member">SBF_END_DECLS</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SBF_REFCOUNT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="common/sbfRefCount.h"/>
  </compounddef>
</doxygen>
